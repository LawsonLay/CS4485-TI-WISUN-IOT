<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="_a_e_s_c_t_r_d_r_b_g_8h" kind="file" language="C++">
    <compoundname>AESCTRDRBG.h</compoundname>
    <includes local="no">stdbool.h</includes>
    <includes local="no">stddef.h</includes>
    <includes local="no">stdint.h</includes>
    <includes refid="_a_e_s_c_t_r_8h" local="no">ti/drivers/AESCTR.h</includes>
    <includes refid="_a_e_s_common_8h" local="no">ti/drivers/AESCommon.h</includes>
    <includes refid="_crypto_key_8h" local="no">ti/drivers/cryptoutils/cryptokey/CryptoKey.h</includes>
    <includes local="no">ti/devices/DeviceFamily.h</includes>
    <includedby refid="_a_e_s_c_t_r_d_r_b_g_x4__ns_8h" local="no">AESCTRDRBGX4_ns.h</includedby>
    <includedby refid="_a_e_s_c_t_r_d_r_b_g_x4__s_8h" local="no">AESCTRDRBGX4_s.h</includedby>
    <includedby refid="_a_e_s_c_t_r_d_r_b_g_x_x_8h" local="no">AESCTRDRBGXX.h</includedby>
    <incdepgraph>
      <node id="320">
        <label>stdbool.h</label>
      </node>
      <node id="324">
        <label>ti/drivers/AESCommon.h</label>
        <link refid="_a_e_s_common_8h"/>
        <childnode refid="320" relation="include">
        </childnode>
        <childnode refid="321" relation="include">
        </childnode>
        <childnode refid="322" relation="include">
        </childnode>
      </node>
      <node id="322">
        <label>stdint.h</label>
      </node>
      <node id="321">
        <label>stddef.h</label>
      </node>
      <node id="326">
        <label>ti/devices/DeviceFamily.h</label>
      </node>
      <node id="319">
        <label>AESCTRDRBG.h</label>
        <link refid="_a_e_s_c_t_r_d_r_b_g_8h"/>
        <childnode refid="320" relation="include">
        </childnode>
        <childnode refid="321" relation="include">
        </childnode>
        <childnode refid="322" relation="include">
        </childnode>
        <childnode refid="323" relation="include">
        </childnode>
        <childnode refid="324" relation="include">
        </childnode>
        <childnode refid="325" relation="include">
        </childnode>
        <childnode refid="326" relation="include">
        </childnode>
      </node>
      <node id="325">
        <label>ti/drivers/cryptoutils/cryptokey/CryptoKey.h</label>
        <link refid="_crypto_key_8h"/>
        <childnode refid="322" relation="include">
        </childnode>
        <childnode refid="320" relation="include">
        </childnode>
      </node>
      <node id="323">
        <label>ti/drivers/AESCTR.h</label>
        <link refid="_a_e_s_c_t_r_8h"/>
        <childnode refid="321" relation="include">
        </childnode>
        <childnode refid="322" relation="include">
        </childnode>
        <childnode refid="324" relation="include">
        </childnode>
        <childnode refid="325" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="329">
        <label>AESCTRDRBGX4_s.h</label>
        <link refid="_a_e_s_c_t_r_d_r_b_g_x4__s_8h"/>
      </node>
      <node id="327">
        <label>AESCTRDRBG.h</label>
        <link refid="_a_e_s_c_t_r_d_r_b_g_8h"/>
        <childnode refid="328" relation="include">
        </childnode>
        <childnode refid="329" relation="include">
        </childnode>
        <childnode refid="330" relation="include">
        </childnode>
      </node>
      <node id="328">
        <label>AESCTRDRBGX4_ns.h</label>
        <link refid="_a_e_s_c_t_r_d_r_b_g_x4__ns_8h"/>
      </node>
      <node id="330">
        <label>AESCTRDRBGXX.h</label>
        <link refid="_a_e_s_c_t_r_d_r_b_g_x_x_8h"/>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_a_e_s_c_t_r_d_r_b_g___params" prot="public">AESCTRDRBG_Params</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="_a_e_s_c_t_r_d_r_b_g_8h_1a6f128f08bbf34ba31a3c287de8875f62" prot="public" static="no">
        <name>AESCTRDRBG_STATUS_RESERVED</name>
        <initializer><ref refid="_a_e_s_common_8h_1a4896831b1a3a4ead39a3c58eb13a05f5" kindref="member">AES_STATUS_RESERVED</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Common AESCTRDRBG status code reservation offset. AESCTRDRBG driver implementations should offset status codes with <ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1a6f128f08bbf34ba31a3c287de8875f62" kindref="member">AESCTRDRBG_STATUS_RESERVED</ref> growing negatively.</para><para>Example implementation specific status codes: <programlisting><codeline><highlight class="normal">#define<sp/>AESCTRDRBGXYZ_STATUS_ERROR0<sp/><sp/><sp/><sp/>AESCTRDRBG_STATUS_RESERVED<sp/>-<sp/>0</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>AESCTRDRBGXYZ_STATUS_ERROR1<sp/><sp/><sp/><sp/>AESCTRDRBG_STATUS_RESERVED<sp/>-<sp/>1</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>AESCTRDRBGXYZ_STATUS_ERROR2<sp/><sp/><sp/><sp/>AESCTRDRBG_STATUS_RESERVED<sp/>-<sp/>2</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/AESCTRDRBG.h" line="302" column="9" bodyfile="source/ti/drivers/AESCTRDRBG.h" bodystart="302" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_a_e_s_c_t_r_d_r_b_g_8h_1a1e05a04971e87a3f4a4f2868b87c2bb4" prot="public" static="no">
        <name>AESCTRDRBG_STATUS_SUCCESS</name>
        <initializer><ref refid="_a_e_s_common_8h_1a40238be3b30c09acbb966b8cf64d8db6" kindref="member">AES_STATUS_SUCCESS</ref></initializer>
        <briefdescription>
<para>Successful status code. </para>        </briefdescription>
        <detaileddescription>
<para>Functions return <ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1a1e05a04971e87a3f4a4f2868b87c2bb4" kindref="member">AESCTRDRBG_STATUS_SUCCESS</ref> if the function was executed successfully. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/AESCTRDRBG.h" line="310" column="9" bodyfile="source/ti/drivers/AESCTRDRBG.h" bodystart="310" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_a_e_s_c_t_r_d_r_b_g_8h_1aa99743e9410987ed461857c4be2aec56" prot="public" static="no">
        <name>AESCTRDRBG_STATUS_ERROR</name>
        <initializer><ref refid="_a_e_s_common_8h_1ac6963a06e1923ad116a23c0e1a17dba8" kindref="member">AES_STATUS_ERROR</ref></initializer>
        <briefdescription>
<para>Generic error status code. </para>        </briefdescription>
        <detaileddescription>
<para>Functions return <ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1aa99743e9410987ed461857c4be2aec56" kindref="member">AESCTRDRBG_STATUS_ERROR</ref> if the function was not executed successfully and no more pertinent error code could be returned. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/AESCTRDRBG.h" line="318" column="9" bodyfile="source/ti/drivers/AESCTRDRBG.h" bodystart="318" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_a_e_s_c_t_r_d_r_b_g_8h_1afa91ce263cd14074a2e0dd5ae25b9824" prot="public" static="no">
        <name>AESCTRDRBG_STATUS_RESOURCE_UNAVAILABLE</name>
        <initializer><ref refid="_a_e_s_common_8h_1a4720c275153144c20096dc2d85f93889" kindref="member">AES_STATUS_RESOURCE_UNAVAILABLE</ref></initializer>
        <briefdescription>
<para>An error status code returned if the hardware or software resource is currently unavailable. </para>        </briefdescription>
        <detaileddescription>
<para>AESCTRDRBG driver implementations may have hardware or software limitations on how many clients can simultaneously perform operations. This status code is returned if the mutual exclusion mechanism signals that an operation cannot currently be performed. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/AESCTRDRBG.h" line="328" column="9" bodyfile="source/ti/drivers/AESCTRDRBG.h" bodystart="328" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_a_e_s_c_t_r_d_r_b_g_8h_1a1b1b1edb3f2f940cf9209e1cb3b99288" prot="public" static="no">
        <name>AESCTRDRBG_STATUS_RESEED_REQUIRED</name>
        <initializer>(<ref refid="_a_e_s_common_8h_1ac225244f6ff634ca99d7e046e1ca3c80" kindref="member">AES_STATUS_DRIVER_SPECIFIC_ERROR</ref> - 0)</initializer>
        <briefdescription>
<para>The AESCTRDRBG instance must be reseeded. </para>        </briefdescription>
        <detaileddescription>
<para>An AESCTRDRBG instance may only service a limited number of bit generation requests before reseeding with more entropy is required. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/AESCTRDRBG.h" line="336" column="9" bodyfile="source/ti/drivers/AESCTRDRBG.h" bodystart="336" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_a_e_s_c_t_r_d_r_b_g_8h_1a8956d5d6aeedcbc208db87fa5591fe14" prot="public" static="no">
        <name>AESCTRDRBG_STATUS_UNINSTANTIATED</name>
        <initializer>(<ref refid="_a_e_s_common_8h_1ac225244f6ff634ca99d7e046e1ca3c80" kindref="member">AES_STATUS_DRIVER_SPECIFIC_ERROR</ref> - 1)</initializer>
        <briefdescription>
<para>The AESCTRDRBG instance is uninstantiated. Close and reopen the instance. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/AESCTRDRBG.h" line="342" column="9" bodyfile="source/ti/drivers/AESCTRDRBG.h" bodystart="342" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_a_e_s_c_t_r_d_r_b_g_8h_1ac628f4ae10a0f9111899eb7f20b2ce84" prot="public" static="no">
        <name>AESCTRDRBG_STATUS_UNALIGNED_IO_NOT_SUPPORTED</name>
        <initializer>(<ref refid="_a_e_s_common_8h_1ac225244f6ff634ca99d7e046e1ca3c80" kindref="member">AES_STATUS_DRIVER_SPECIFIC_ERROR</ref> - 2)</initializer>
        <briefdescription>
<para>The operation does not support non-word-aligned input and/or output. </para>        </briefdescription>
        <detaileddescription>
<para>AESCTR driver implementations used by AESCTRDRBG may have restrictions on the alignment of input/output data due to performance limitations of the hardware. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/AESCTRDRBG.h" line="351" column="9" bodyfile="source/ti/drivers/AESCTRDRBG.h" bodystart="351" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_a_e_s_c_t_r_d_r_b_g_8h_1abe87dff4cfc26e005e4557c95ee917ba" prot="public" static="no">
        <name>AESCTRDRBG_STATUS_KEYSTORE_ERROR</name>
        <initializer>(<ref refid="_a_e_s_common_8h_1a89e9ed71ffb10f4f6d5b52b8afbd4389" kindref="member">AES_STATUS_KEYSTORE_GENERIC_ERROR</ref>)</initializer>
        <briefdescription>
<para>Importing generated key into KeyStore failed. </para>        </briefdescription>
        <detaileddescription>
<para>Functions return AESCTRDRBG_STATUS_KEYSTORE_ERROR if the <ref refid="_crypto_key_key_store___p_s_a_8h_1aa9425eeaa708cf28b9101c34a152ec36" kindref="member">KeyStore_PSA_importKey()</ref> did not return KEYSTORE_PSA_STATUS_SUCCESS </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/AESCTRDRBG.h" line="359" column="9" bodyfile="source/ti/drivers/AESCTRDRBG.h" bodystart="359" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_a_e_s_c_t_r_d_r_b_g_8h_1a14b823aeeb3dc7d130d4dc2605473ce6" prot="public" static="no">
        <name>AESCTRDRBG_STATUS_INPUT_LENGTH_INVALID</name>
        <initializer>(<ref refid="_a_e_s_common_8h_1a89e9ed71ffb10f4f6d5b52b8afbd4389" kindref="member">AES_STATUS_KEYSTORE_GENERIC_ERROR</ref> - 1)</initializer>
        <briefdescription>
<para>Requesting entropy from HSM operation failed due to the input length. </para>        </briefdescription>
        <detaileddescription>
<para>Input length has to be less than 64KB. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/AESCTRDRBG.h" line="367" column="13" bodyfile="source/ti/drivers/AESCTRDRBG.h" bodystart="367" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_a_e_s_c_t_r_d_r_b_g_8h_1a3dcf06dd21f3d01d2eeffc78bb3590e2" prot="public" static="no">
        <name>AESCTRDRBG_AES_BLOCK_SIZE_BYTES</name>
        <initializer>16</initializer>
        <briefdescription>
<para>The AES block size in bytes. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/AESCTRDRBG.h" line="373" column="9" bodyfile="source/ti/drivers/AESCTRDRBG.h" bodystart="373" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="_a_e_s_c_t_r_d_r_b_g_8h_1a1482c6747f5594d24d37f852967386a8" prot="public" static="no">
        <name>AESCTRDRBG_AES_KEY_LENGTH</name>
        <enumvalue id="_a_e_s_c_t_r_d_r_b_g_8h_1a1482c6747f5594d24d37f852967386a8ae492ad9709beb7ac44c67e282b9c1abb" prot="public">
          <name>AESCTRDRBG_AES_KEY_LENGTH_128</name>
          <initializer>= 16</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_a_e_s_c_t_r_d_r_b_g_8h_1a1482c6747f5594d24d37f852967386a8ad9c83f7b6f813e9f8276e76cc850e0d2" prot="public">
          <name>AESCTRDRBG_AES_KEY_LENGTH_256</name>
          <initializer>= 32</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Length in bytes of the internal AES key used by an instance. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/AESCTRDRBG.h" line="379" column="1" bodyfile="source/ti/drivers/AESCTRDRBG.h" bodystart="378" bodyend="382"/>
      </memberdef>
      <memberdef kind="enum" id="_a_e_s_c_t_r_d_r_b_g_8h_1a2ce013814c4e735e092d9c56a5790103" prot="public" static="no">
        <name>AESCTRDRBG_SEED_LENGTH</name>
        <enumvalue id="_a_e_s_c_t_r_d_r_b_g_8h_1a2ce013814c4e735e092d9c56a5790103a11c804896f9c835dce56900c8469d03b" prot="public">
          <name>AESCTRDRBG_SEED_LENGTH_AES_128</name>
          <initializer>= AESCTRDRBG_AES_KEY_LENGTH_128 +  16</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_a_e_s_c_t_r_d_r_b_g_8h_1a2ce013814c4e735e092d9c56a5790103a80f638233529d83c63ba4ab6328084ca" prot="public">
          <name>AESCTRDRBG_SEED_LENGTH_AES_256</name>
          <initializer>= AESCTRDRBG_AES_KEY_LENGTH_256 +  16</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Length in bytes of seed used to instantiate or reseed instance. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/AESCTRDRBG.h" line="388" column="1" bodyfile="source/ti/drivers/AESCTRDRBG.h" bodystart="387" bodyend="391"/>
      </memberdef>
      <memberdef kind="enum" id="_a_e_s_c_t_r_d_r_b_g_8h_1a58ed46a622459c055f3dca39fc973f91" prot="public" static="no">
        <name>AESCTRDRBG_ReturnBehavior</name>
        <enumvalue id="_a_e_s_c_t_r_d_r_b_g_8h_1a58ed46a622459c055f3dca39fc973f91aecb915547715788b421fd2b4a791823c" prot="public">
          <name>AESCTRDRBG_RETURN_BEHAVIOR_BLOCKING</name>
          <initializer>= AESCTR_RETURN_BEHAVIOR_BLOCKING</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The function call will block while AESCTRDRBG operation goes on in the background. AESCTRDRBG operation results are available after the function returns.The function call will continuously poll a flag while AESCTRDRBG operation goes on in the background. AESCTRDRBG operation results are available after the function returns. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="_a_e_s_c_t_r_d_r_b_g_8h_1a58ed46a622459c055f3dca39fc973f91a00f06cc10c6d8b7a120d06ede4133496" prot="public">
          <name>AESCTRDRBG_RETURN_BEHAVIOR_POLLING</name>
          <initializer>= AESCTR_RETURN_BEHAVIOR_POLLING</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>The way in which AESCTRDRBG function calls return after generating the requested entropy. </para>        </briefdescription>
        <detaileddescription>
<para>Not all AESCTRDRBG operations exhibit the specified return behavior. Functions that do not require significant computation and cannot offload that computation to a background thread behave like regular functions. Which functions exhibit the specified return behavior is not implementation dependent. Specifically, a software-backed implementation run on the same CPU as the application will emulate the return behavior while not actually offloading the computation to the background thread.</para><para>AESCTRDRBG functions exhibiting the specified return behavior have restrictions on the context from which they may be called.</para><para><table rows="3" cols="4"><row>
<entry thead="yes"><para></para></entry><entry thead="yes"><para>Task </para></entry><entry thead="yes"><para>Hwi </para></entry><entry thead="yes"><para>Swi  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1a58ed46a622459c055f3dca39fc973f91aecb915547715788b421fd2b4a791823c" kindref="member">AESCTRDRBG_RETURN_BEHAVIOR_BLOCKING</ref> </para></entry><entry thead="no"><para>X </para></entry><entry thead="no"><para></para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para><ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1a58ed46a622459c055f3dca39fc973f91a00f06cc10c6d8b7a120d06ede4133496" kindref="member">AESCTRDRBG_RETURN_BEHAVIOR_POLLING</ref> </para></entry><entry thead="no"><para>X </para></entry><entry thead="no"><para>X </para></entry><entry thead="no"><para>X </para></entry></row>
</table>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/AESCTRDRBG.h" line="414" column="1" bodyfile="source/ti/drivers/AESCTRDRBG.h" bodystart="413" bodyend="425"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="_a_e_s_c_t_r_d_r_b_g_8h_1a77eeb0dd18b031c22b66bd198d17cc4b" prot="public" static="no">
        <type><ref refid="struct_a_e_s_common___config" kindref="compound">AESCommon_Config</ref></type>
        <definition>typedef AESCommon_Config AESCTRDRBG_Config</definition>
        <argsstring></argsstring>
        <name>AESCTRDRBG_Config</name>
        <briefdescription>
<para>AESCTRDRBG Global configuration. </para>        </briefdescription>
        <detaileddescription>
<para>The <ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1a77eeb0dd18b031c22b66bd198d17cc4b" kindref="member">AESCTRDRBG_Config</ref> structure contains a set of pointers used to characterize the AESCTRDRBG driver implementation.</para><para>This structure needs to be defined before calling <ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1ad53f705cf508c26c1a7434b2329bd494" kindref="member">AESCTRDRBG_init()</ref> and it must not be changed thereafter.</para><para><simplesect kind="see"><para><ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1ad53f705cf508c26c1a7434b2329bd494" kindref="member">AESCTRDRBG_init()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/AESCTRDRBG.h" line="438" column="1" bodyfile="source/ti/drivers/AESCTRDRBG.h" bodystart="438" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_a_e_s_c_t_r_d_r_b_g_8h_1aad30ad6c6ed40050bcd4d8f1dc56b1df" prot="public" static="no">
        <type><ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1a77eeb0dd18b031c22b66bd198d17cc4b" kindref="member">AESCTRDRBG_Config</ref> *</type>
        <definition>typedef AESCTRDRBG_Config* AESCTRDRBG_Handle</definition>
        <argsstring></argsstring>
        <name>AESCTRDRBG_Handle</name>
        <briefdescription>
<para>A handle that is returned from an <ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1ae44b1a3f0dc0f0e3211d165f40fa5236" kindref="member">AESCTRDRBG_open()</ref> call. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/AESCTRDRBG.h" line="443" column="1" bodyfile="source/ti/drivers/AESCTRDRBG.h" bodystart="443" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_a_e_s_c_t_r_d_r_b_g_8h_1ad087c3f8f679279481615c1ddc3ffc60" prot="public" static="no" mutable="no">
        <type>const <ref refid="struct_a_e_s_c_t_r_d_r_b_g___params" kindref="compound">AESCTRDRBG_Params</ref></type>
        <definition>const AESCTRDRBG_Params AESCTRDRBG_defaultParams</definition>
        <argsstring></argsstring>
        <name>AESCTRDRBG_defaultParams</name>
        <briefdescription>
<para>Default <ref refid="struct_a_e_s_c_t_r_d_r_b_g___params" kindref="compound">AESCTRDRBG_Params</ref> structure. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1a02e4a1a12968ee0122a7ed5eb4ea1eaa" kindref="member">AESCTRDRBG_Params_init()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/AESCTRDRBG.h" line="492" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_a_e_s_c_t_r_d_r_b_g_8h_1ad53f705cf508c26c1a7434b2329bd494" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AESCTRDRBG_init</definition>
        <argsstring>(void)</argsstring>
        <name>AESCTRDRBG_init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>This function initializes the AESCTRDRBG driver. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para>The <ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1a77eeb0dd18b031c22b66bd198d17cc4b" kindref="member">AESCTRDRBG_Config</ref> structure must exist and be persistent before this function can be called. This function must also be called before any other AESCTRDRBG driver APIs. This function call does not modify any peripheral registers. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/AESCTRDRBG.h" line="502" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_a_e_s_c_t_r_d_r_b_g_8h_1a02e4a1a12968ee0122a7ed5eb4ea1eaa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AESCTRDRBG_Params_init</definition>
        <argsstring>(AESCTRDRBG_Params *params)</argsstring>
        <name>AESCTRDRBG_Params_init</name>
        <param>
          <type><ref refid="struct_a_e_s_c_t_r_d_r_b_g___params" kindref="compound">AESCTRDRBG_Params</ref> *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
<para>Function to initialize the <ref refid="struct_a_e_s_c_t_r_d_r_b_g___params" kindref="compound">AESCTRDRBG_Params</ref> struct to its defaults. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">params</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to <ref refid="struct_a_e_s_c_t_r_d_r_b_g___params" kindref="compound">AESCTRDRBG_Params</ref> structure for initialization </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/AESCTRDRBG.h" line="510" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_a_e_s_c_t_r_d_r_b_g_8h_1ae44b1a3f0dc0f0e3211d165f40fa5236" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1aad30ad6c6ed40050bcd4d8f1dc56b1df" kindref="member">AESCTRDRBG_Handle</ref></type>
        <definition>AESCTRDRBG_Handle AESCTRDRBG_open</definition>
        <argsstring>(uint_least8_t index, const AESCTRDRBG_Params *params)</argsstring>
        <name>AESCTRDRBG_open</name>
        <param>
          <type>uint_least8_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type>const <ref refid="struct_a_e_s_c_t_r_d_r_b_g___params" kindref="compound">AESCTRDRBG_Params</ref> *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
<para>This function opens a given AESCTRDRBG instance. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para>AESCTRDRBG controller has been initialized using <ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1ad53f705cf508c26c1a7434b2329bd494" kindref="member">AESCTRDRBG_init()</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>Logical peripheral number for the AESCTRDRBG indexed into the <ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1a77eeb0dd18b031c22b66bd198d17cc4b" kindref="member">AESCTRDRBG_Config</ref> table</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">params</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an parameter block, if NULL it will use default values.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An <ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1aad30ad6c6ed40050bcd4d8f1dc56b1df" kindref="member">AESCTRDRBG_Handle</ref> on success or a NULL on an error or if it has been opened already.</para></simplesect>
<simplesect kind="see"><para><ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1ad53f705cf508c26c1a7434b2329bd494" kindref="member">AESCTRDRBG_init()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1a2c44d7603a5fdf712e8ec0c0b2bd2e1c" kindref="member">AESCTRDRBG_close()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/AESCTRDRBG.h" line="529" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_a_e_s_c_t_r_d_r_b_g_8h_1a2c44d7603a5fdf712e8ec0c0b2bd2e1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AESCTRDRBG_close</definition>
        <argsstring>(AESCTRDRBG_Handle handle)</argsstring>
        <name>AESCTRDRBG_close</name>
        <param>
          <type><ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1aad30ad6c6ed40050bcd4d8f1dc56b1df" kindref="member">AESCTRDRBG_Handle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Function to close an AESCTRDRBG instance specified by the <ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1aad30ad6c6ed40050bcd4d8f1dc56b1df" kindref="member">AESCTRDRBG_Handle</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1ae44b1a3f0dc0f0e3211d165f40fa5236" kindref="member">AESCTRDRBG_open()</ref> has to be called first.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>An <ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1aad30ad6c6ed40050bcd4d8f1dc56b1df" kindref="member">AESCTRDRBG_Handle</ref> returned from <ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1ae44b1a3f0dc0f0e3211d165f40fa5236" kindref="member">AESCTRDRBG_open()</ref></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1ae44b1a3f0dc0f0e3211d165f40fa5236" kindref="member">AESCTRDRBG_open()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/AESCTRDRBG.h" line="540" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_a_e_s_c_t_r_d_r_b_g_8h_1ae6ec8bac3354b04546b7027a7500b5e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int_fast16_t</type>
        <definition>int_fast16_t AESCTRDRBG_getBytes</definition>
        <argsstring>(AESCTRDRBG_Handle handle, CryptoKey *randomBytes)</argsstring>
        <name>AESCTRDRBG_getBytes</name>
        <param>
          <type><ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1aad30ad6c6ed40050bcd4d8f1dc56b1df" kindref="member">AESCTRDRBG_Handle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="struct_crypto_key" kindref="compound">CryptoKey</ref> *</type>
          <declname>randomBytes</declname>
        </param>
        <briefdescription>
<para>Generates the requested number of random bytes. </para>        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000008"><xreftitle>Deprecated</xreftitle><xrefdescription><para>This function has been replaced by a pair of new functions. See <ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1aa7c032878ac9493ad06dc8a50cdca980" kindref="member">AESCTRDRBG_generateKey()</ref> and <ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1acc127938e866f022c6d77aaccdf62355" kindref="member">AESCTRDRBG_getRandomBytes()</ref>.</para></xrefdescription></xrefsect></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>An <ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1aad30ad6c6ed40050bcd4d8f1dc56b1df" kindref="member">AESCTRDRBG_Handle</ref> returned from <ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1ae44b1a3f0dc0f0e3211d165f40fa5236" kindref="member">AESCTRDRBG_open()</ref></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">randomBytes</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a <computeroutput><ref refid="struct_crypto_key" kindref="compound">CryptoKey</ref></computeroutput> object that should be already initialized to hold a plaintext key, provided with the length and the address of the plaintext key-material where the generated random bytes will be populated. Some implementations may require key-material to be word-aligned.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername><ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1a1e05a04971e87a3f4a4f2868b87c2bb4" kindref="member">AESCTRDRBG_STATUS_SUCCESS</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>Random bytes generated. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1aa99743e9410987ed461857c4be2aec56" kindref="member">AESCTRDRBG_STATUS_ERROR</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>Generic driver error. Random bytes not generated. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1afa91ce263cd14074a2e0dd5ae25b9824" kindref="member">AESCTRDRBG_STATUS_RESOURCE_UNAVAILABLE</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>The required hardware was unavailable. Random bytes not generated. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1a1b1b1edb3f2f940cf9209e1cb3b99288" kindref="member">AESCTRDRBG_STATUS_RESEED_REQUIRED</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>Reseed counter &gt;= reseed limit. Reseed required. Random bytes not generated. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1a8956d5d6aeedcbc208db87fa5591fe14" kindref="member">AESCTRDRBG_STATUS_UNINSTANTIATED</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>DRBG uninstantiated. Close and reopen the instance with fresh seed. Random bytes not generated. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1ac628f4ae10a0f9111899eb7f20b2ce84" kindref="member">AESCTRDRBG_STATUS_UNALIGNED_IO_NOT_SUPPORTED</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to <computeroutput>randomBytes</computeroutput> key material must be word-aligned. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/AESCTRDRBG.h" line="565" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_a_e_s_c_t_r_d_r_b_g_8h_1aa7c032878ac9493ad06dc8a50cdca980" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int_fast16_t</type>
        <definition>int_fast16_t AESCTRDRBG_generateKey</definition>
        <argsstring>(AESCTRDRBG_Handle handle, CryptoKey *randomKey)</argsstring>
        <name>AESCTRDRBG_generateKey</name>
        <param>
          <type><ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1aad30ad6c6ed40050bcd4d8f1dc56b1df" kindref="member">AESCTRDRBG_Handle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="struct_crypto_key" kindref="compound">CryptoKey</ref> *</type>
          <declname>randomKey</declname>
        </param>
        <briefdescription>
<para>Populates the provided <computeroutput><ref refid="struct_crypto_key" kindref="compound">CryptoKey</ref></computeroutput> object&apos;s plaintext key-material with random bytes. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This function replaces <ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1ae6ec8bac3354b04546b7027a7500b5e9" kindref="member">AESCTRDRBG_getBytes()</ref>. See <ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1acc127938e866f022c6d77aaccdf62355" kindref="member">AESCTRDRBG_getRandomBytes()</ref> to output random bytes to an array instead.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>An <ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1aad30ad6c6ed40050bcd4d8f1dc56b1df" kindref="member">AESCTRDRBG_Handle</ref> returned from <ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1ae44b1a3f0dc0f0e3211d165f40fa5236" kindref="member">AESCTRDRBG_open()</ref></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">randomKey</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a <computeroutput><ref refid="struct_crypto_key" kindref="compound">CryptoKey</ref></computeroutput> object that should be already initialized to hold a plaintext key, provided with the length and the address of the plaintext key-material where the generated random bytes will be populated. Some implementations may require key-material to be word-aligned.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername><ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1a1e05a04971e87a3f4a4f2868b87c2bb4" kindref="member">AESCTRDRBG_STATUS_SUCCESS</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>Key-material generated. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1aa99743e9410987ed461857c4be2aec56" kindref="member">AESCTRDRBG_STATUS_ERROR</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>Generic driver error. Key-material not generated. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1afa91ce263cd14074a2e0dd5ae25b9824" kindref="member">AESCTRDRBG_STATUS_RESOURCE_UNAVAILABLE</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>The required hardware was unavailable. Key-material not generated. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1a1b1b1edb3f2f940cf9209e1cb3b99288" kindref="member">AESCTRDRBG_STATUS_RESEED_REQUIRED</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>Reseed counter &gt;= reseed limit. Reseed required. Key-material not generated. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1a8956d5d6aeedcbc208db87fa5591fe14" kindref="member">AESCTRDRBG_STATUS_UNINSTANTIATED</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>DRBG uninstantiated. Close and reopen the instance with fresh seed. Key-material not generated. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1ac628f4ae10a0f9111899eb7f20b2ce84" kindref="member">AESCTRDRBG_STATUS_UNALIGNED_IO_NOT_SUPPORTED</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to <computeroutput>randomKey</computeroutput> key material must be word-aligned. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/AESCTRDRBG.h" line="590" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_a_e_s_c_t_r_d_r_b_g_8h_1acc127938e866f022c6d77aaccdf62355" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int_fast16_t</type>
        <definition>int_fast16_t AESCTRDRBG_getRandomBytes</definition>
        <argsstring>(AESCTRDRBG_Handle handle, void *randomBytes, size_t randomBytesSize)</argsstring>
        <name>AESCTRDRBG_getRandomBytes</name>
        <param>
          <type><ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1aad30ad6c6ed40050bcd4d8f1dc56b1df" kindref="member">AESCTRDRBG_Handle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>randomBytes</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>randomBytesSize</declname>
        </param>
        <briefdescription>
<para>Generates the requested number of random bytes and outputs to the given array. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="attention"><para>This function should not be confused with the deprecated <ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1ae6ec8bac3354b04546b7027a7500b5e9" kindref="member">AESCTRDRBG_getBytes()</ref>. <ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1ae6ec8bac3354b04546b7027a7500b5e9" kindref="member">AESCTRDRBG_getBytes()</ref> output random bytes to a <computeroutput><ref refid="struct_crypto_key" kindref="compound">CryptoKey</ref></computeroutput> while this new function outputs random bytes to an array.</para></simplesect>
<simplesect kind="note"><para>See <ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1aa7c032878ac9493ad06dc8a50cdca980" kindref="member">AESCTRDRBG_generateKey()</ref> to output random bytes to a <computeroutput><ref refid="struct_crypto_key" kindref="compound">CryptoKey</ref></computeroutput> instead.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>An <ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1aad30ad6c6ed40050bcd4d8f1dc56b1df" kindref="member">AESCTRDRBG_Handle</ref> returned from <ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1ae44b1a3f0dc0f0e3211d165f40fa5236" kindref="member">AESCTRDRBG_open()</ref></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">randomBytes</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to an array that stores the random bytes output by this function. Some implementations may require this array to be word-aligned.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">randomBytesSize</parametername>
</parameternamelist>
<parameterdescription>
<para>The size in bytes of the random data required.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername><ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1a1e05a04971e87a3f4a4f2868b87c2bb4" kindref="member">AESCTRDRBG_STATUS_SUCCESS</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>Random bytes generated. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1aa99743e9410987ed461857c4be2aec56" kindref="member">AESCTRDRBG_STATUS_ERROR</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>Generic driver error. Random bytes not generated. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1afa91ce263cd14074a2e0dd5ae25b9824" kindref="member">AESCTRDRBG_STATUS_RESOURCE_UNAVAILABLE</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>The required hardware was unavailable. Random bytes not generated. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1a1b1b1edb3f2f940cf9209e1cb3b99288" kindref="member">AESCTRDRBG_STATUS_RESEED_REQUIRED</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>Reseed counter &gt;= reseed limit. Reseed required. Random bytes not generated. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1a8956d5d6aeedcbc208db87fa5591fe14" kindref="member">AESCTRDRBG_STATUS_UNINSTANTIATED</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>DRBG uninstantiated. Close and reopen the instance with fresh seed. Random bytes not generated. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1ac628f4ae10a0f9111899eb7f20b2ce84" kindref="member">AESCTRDRBG_STATUS_UNALIGNED_IO_NOT_SUPPORTED</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to <computeroutput>randomBytes</computeroutput> array must be word-aligned. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/AESCTRDRBG.h" line="618" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_a_e_s_c_t_r_d_r_b_g_8h_1af4c916b447159cd324d9588f035bad83" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int_fast16_t</type>
        <definition>int_fast16_t AESCTRDRBG_getRandomBytesFromHSM</definition>
        <argsstring>(void *randomBytes, size_t randomBytesSize)</argsstring>
        <name>AESCTRDRBG_getRandomBytesFromHSM</name>
        <param>
          <type>void *</type>
          <declname>randomBytes</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>randomBytesSize</declname>
        </param>
        <briefdescription>
<para>Generates the requested number of random bytes and outputs to the given array. </para>        </briefdescription>
        <detaileddescription>
<para>This operation bypasses the existing AESCTRDRBG design by fetching random bytes directly from the HSM.</para><para><simplesect kind="attention"><para>This function leverages the HSM DRBG IP directly. Limitations:<orderedlist>
<listitem><para>An upper limit of 64KB per request.</para></listitem><listitem><para>All request amounts have to be 32-bit aligned (multiple of 4).</para></listitem></orderedlist>
</para></simplesect>
This API does not utilize the provided seed or the counter but rather relies on the HSM to generate deterministic data.</para><para>This API operates in a synchronous polling mode.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">randomBytes</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to an array that stores the random bytes output by this function. This array has to be word-aligned.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">randomBytesSize</parametername>
</parameternamelist>
<parameterdescription>
<para>The size in bytes of the random data required. The size must be a multiple of 4 bytes.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername><ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1a1e05a04971e87a3f4a4f2868b87c2bb4" kindref="member">AESCTRDRBG_STATUS_SUCCESS</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>Random bytes generated. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1aa99743e9410987ed461857c4be2aec56" kindref="member">AESCTRDRBG_STATUS_ERROR</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>Generic driver error. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1afa91ce263cd14074a2e0dd5ae25b9824" kindref="member">AESCTRDRBG_STATUS_RESOURCE_UNAVAILABLE</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>The required hardware was unavailable. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1a14b823aeeb3dc7d130d4dc2605473ce6" kindref="member">AESCTRDRBG_STATUS_INPUT_LENGTH_INVALID</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>Length has to be less than 64KB. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/AESCTRDRBG.h" line="647" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_a_e_s_c_t_r_d_r_b_g_8h_1a8fcbd42a2c2169f5874ab14057fef1a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int_fast16_t</type>
        <definition>int_fast16_t AESCTRDRBG_reseedHSM</definition>
        <argsstring>(void)</argsstring>
        <name>AESCTRDRBG_reseedHSM</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Reseed the HSM IP DRBG engine. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="attention"><para>This function makes a direct call to the HSM engine to force a reseed to the HSM IP.</para></simplesect>
Although the HSM IP auto-reseeds internally after a pre-defined level set in the OTP (256 * 64KB) entropy have been fetched, this API is provided to the user to call whenever they want to force a reseed.</para><para>This operation is done asynchronously which means the call returns as soon as the request is deposited to the HSM engine and does not notify the user when the operation is complete.</para><para>Whilst the operation is running, the underlying HSM access semaphore is taken and no other operations or threads can leverage the HSM IP. The <ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1afa91ce263cd14074a2e0dd5ae25b9824" kindref="member">AESCTRDRBG_STATUS_RESOURCE_UNAVAILABLE</ref> error code will be returned.</para><para><parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername><ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1a1e05a04971e87a3f4a4f2868b87c2bb4" kindref="member">AESCTRDRBG_STATUS_SUCCESS</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>Reseeding was successful. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1aa99743e9410987ed461857c4be2aec56" kindref="member">AESCTRDRBG_STATUS_ERROR</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>Reseeding was not successful. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1afa91ce263cd14074a2e0dd5ae25b9824" kindref="member">AESCTRDRBG_STATUS_RESOURCE_UNAVAILABLE</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>The required hardware was unavailable. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/AESCTRDRBG.h" line="667" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_a_e_s_c_t_r_d_r_b_g_8h_1a8633b53b7ce9befaf9b13fe24d533801" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int_fast16_t</type>
        <definition>int_fast16_t AESCTRDRBG_reseed</definition>
        <argsstring>(AESCTRDRBG_Handle handle, const void *seed, const void *additionalData, size_t additionalDataLength)</argsstring>
        <name>AESCTRDRBG_reseed</name>
        <param>
          <type><ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1aad30ad6c6ed40050bcd4d8f1dc56b1df" kindref="member">AESCTRDRBG_Handle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>seed</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>additionalData</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>additionalDataLength</declname>
        </param>
        <briefdescription>
<para>Reseed an AESCTRDRBG instance. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>An <ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1aad30ad6c6ed40050bcd4d8f1dc56b1df" kindref="member">AESCTRDRBG_Handle</ref> returned from <ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1ae44b1a3f0dc0f0e3211d165f40fa5236" kindref="member">AESCTRDRBG_open()</ref></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">seed</parametername>
</parameternamelist>
<parameterdescription>
<para>Entropy to mix into the AESCTRDRBG instance state</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">additionalData</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional non-secret additional data to mix into the instance state.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">additionalDataLength</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of the optional additional data. 0 &lt;= <computeroutput>additionalDataLength</computeroutput> &lt;= seed length of the instance.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername><ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1a1e05a04971e87a3f4a4f2868b87c2bb4" kindref="member">AESCTRDRBG_STATUS_SUCCESS</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>Reseed successful. Reseed counter reset. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1aa99743e9410987ed461857c4be2aec56" kindref="member">AESCTRDRBG_STATUS_ERROR</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>Reseed not successful. Reseed counter not reset. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1afa91ce263cd14074a2e0dd5ae25b9824" kindref="member">AESCTRDRBG_STATUS_RESOURCE_UNAVAILABLE</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>The requires hardware was unavailable. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1a8956d5d6aeedcbc208db87fa5591fe14" kindref="member">AESCTRDRBG_STATUS_UNINSTANTIATED</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>DRBG uninstantiated. Close and reopen the instance with fresh seed. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/AESCTRDRBG.h" line="690" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_a_e_s_c_t_r_d_r_b_g_8h_1ab88641d5cbbac09f1178e4266726ba43" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1aad30ad6c6ed40050bcd4d8f1dc56b1df" kindref="member">AESCTRDRBG_Handle</ref></type>
        <definition>AESCTRDRBG_Handle AESCTRDRBG_construct</definition>
        <argsstring>(AESCTRDRBG_Config *config, const AESCTRDRBG_Params *params)</argsstring>
        <name>AESCTRDRBG_construct</name>
        <param>
          <type><ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1a77eeb0dd18b031c22b66bd198d17cc4b" kindref="member">AESCTRDRBG_Config</ref> *</type>
          <declname>config</declname>
        </param>
        <param>
          <type>const <ref refid="struct_a_e_s_c_t_r_d_r_b_g___params" kindref="compound">AESCTRDRBG_Params</ref> *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
<para>Constructs a new AESCTRDRBG object. </para>        </briefdescription>
        <detaileddescription>
<para>Unlike <ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1ae44b1a3f0dc0f0e3211d165f40fa5236" kindref="member">AESCTRDRBG_open()</ref>, <ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1ab88641d5cbbac09f1178e4266726ba43" kindref="member">AESCTRDRBG_construct()</ref> does not require the hwAttrs and object to be allocated in a <ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1a77eeb0dd18b031c22b66bd198d17cc4b" kindref="member">AESCTRDRBG_Config</ref> array that is indexed into. Instead, the <ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1a77eeb0dd18b031c22b66bd198d17cc4b" kindref="member">AESCTRDRBG_Config</ref>, hwAttrs, and object can be allocated at any location. This allows for relatively simple run-time allocation of temporary driver instances on the stack or the heap. The drawback is that this makes it more difficult to write device-agnostic code. If you use an ifdef with DeviceFamily, you can choose the correct object and hwAttrs to allocate. That compilation unit will be tied to the device it was compiled for at this point. To change devices, recompilation of the application with a different DeviceFamily setting is necessary.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1a77eeb0dd18b031c22b66bd198d17cc4b" kindref="member">AESCTRDRBG_Config</ref> describing the location of the object and hwAttrs.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="struct_a_e_s_c_t_r_d_r_b_g___params" kindref="compound">AESCTRDRBG_Params</ref> to configure the driver instance.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns an <ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1aad30ad6c6ed40050bcd4d8f1dc56b1df" kindref="member">AESCTRDRBG_Handle</ref> on success or NULL on failure.</para></simplesect>
<simplesect kind="pre"><para>The object struct <computeroutput>config</computeroutput> points to must be zeroed out prior to calling this function. Otherwise, unexpected behavior may ensue. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/AESCTRDRBG.h" line="718" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>AESCTRDRBG driver header. </para>    </briefdescription>
    <detaileddescription>
<para><hruler/>
</para><para><anchor id="_a_e_s_c_t_r_d_r_b_g_8h_1ti_drivers_AESCTRDRBG_Overview"/><heading level="3">Overview </heading>
</para><para>AESCTRDRBG is a cryptographically secure deterministic random bit generator that is used to efficiently generate random numbers for use in keying material or other security related purposes. It is based on the AES block cipher operating in Counter (CTR) mode and is defined by NIST SP 800-90A.</para><para>AESCTRDRBG derives a sequence of pseudo-random numbers based on an initial secret seed and additional, non-secret personalization data provided during instantiation. A sequence of random bits generated by AESCTRDRBG will have an equivalent entropy content of MIN(sequenceLength, security strength). The security strength is based on the seed length and the AES key length used in the AESCTRDRBG instance.</para><para><table rows="6" cols="4"><row>
<entry thead="yes"><para></para></entry><entry thead="yes"><para>AES-128 </para></entry><entry thead="yes"><para>AES-192 </para></entry><entry thead="yes"><para>AES-256  </para></entry></row>
<row>
<entry thead="no"><para>Security Strength (bits) </para></entry><entry thead="no"><para>128 </para></entry><entry thead="no"><para>192 </para></entry><entry thead="no"><para>256 </para></entry></row>
<row>
<entry thead="no"><para>Seed Length (bits) </para></entry><entry thead="no"><para>192 </para></entry><entry thead="no"><para>320 </para></entry><entry thead="no"><para>384 </para></entry></row>
<row>
<entry thead="no"><para>Personalization String Length (bits) </para></entry><entry thead="no"><para>&lt;= 192 </para></entry><entry thead="no"><para>&lt;= 320 </para></entry><entry thead="no"><para>&lt;= 384 </para></entry></row>
<row>
<entry thead="no"><para>Max Requests Between Reseeds </para></entry><entry thead="no"><para>2^48 </para></entry><entry thead="no"><para>2^48 </para></entry><entry thead="no"><para>2^48 </para></entry></row>
<row>
<entry thead="no"><para>Max Request Length (bits) </para></entry><entry thead="no"><para>2^19 </para></entry><entry thead="no"><para>2^19 </para></entry><entry thead="no"><para>2^19 </para></entry></row>
</table>
<heading level="3">Security Strength </heading>
</para><para>The seed must be sourced from a cryptographically secure source such as a True Random Number Generator and contain seed length bits of entropy. Since the seed length is always larger than the security strength for any one AES key length, the output of one AESCTRDRBG instance may not be used to seed another instance of the same or higher security strength.</para><para><heading level="3">Reseeding </heading>
</para><para>Because of the way AES CTR operates, there are a limited number of output bitstreams that may be generated before the AESCTRDRBG instance must be reseeded. The reseeding interval is set by the number of random bit sequences generated and not by their individual or combined lengths. Each time random bits are requested of the AESCTRDRBG instance by the application, the reseed counter is incremented by one regardless of how many bits at a time are requested. When this counter reaches the configured reseed limit, the AESCTRDRBG instance will return <ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1a1b1b1edb3f2f940cf9209e1cb3b99288" kindref="member">AESCTRDRBG_STATUS_RESEED_REQUIRED</ref> until it is reseeded.</para><para>The maximum permitted number of requests between reseeds is 2^48. The default counter is only 2^32 long for ease of implementation. A more conservative reseed limit may be configured by the application for increased security.</para><para>A previously used seed may never be reused to reseed an AESCTRDRBG instance. The seed used to instantiate or reseed an instance must be generated by an approved entropy source.</para><para><heading level="3">Derivation Function </heading>
</para><para>NIST specifies the the use of an optional derivation function to reduced entropy and personalization string lengths longer than the seed length down to the seed length. This feature is not presently supported.</para><para><anchor id="_a_e_s_c_t_r_d_r_b_g_8h_1ti_drivers_AESCTRDRBG_Usage"/><heading level="3">Usage </heading>
</para><para>This documentation provides a basic <ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1ti_drivers_AESCTRDRBG_Synopsis" kindref="member">usage summary</ref> and a set of <ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1ti_drivers_AESCTRDRBG_Examples" kindref="member">examples</ref> in the form of commented code fragments. Detailed descriptions of the APIs are provided in subsequent sections.</para><para><anchor id="_a_e_s_c_t_r_d_r_b_g_8h_1ti_drivers_AESCTRDRBG_Synopsis"/><heading level="3">Synopsis </heading>
</para><para><anchor id="_a_e_s_c_t_r_d_r_b_g_8h_1ti_drivers_AESCTRDRBG_Synopsis_Code"/><programlisting><codeline><highlight class="normal">#include<sp/>&lt;ti/drivers/AESCTRDRBG.h&gt;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">AESCTRDRBG_init();</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>Instantiate<sp/>the<sp/>AESCTRDRBG<sp/>instance</highlight></codeline>
<codeline><highlight class="normal">AESCTRDRBG_Params_init(&amp;params);</highlight></codeline>
<codeline><highlight class="normal">params.keyLength<sp/>=<sp/>AESCTRDRBG_AES_KEY_LENGTH_128;</highlight></codeline>
<codeline><highlight class="normal">params.reseedInterval<sp/>=<sp/>0xFFFFFFFF;</highlight></codeline>
<codeline><highlight class="normal">params.seed<sp/>=<sp/>seedBuffer;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">handle<sp/>=<sp/>AESCTRDRBG_open(0,<sp/>&amp;params);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">result<sp/>=<sp/>AESCTRDRBG_generateKey(handle,<sp/>&amp;resultKey);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">reseedResult<sp/>=<sp/>AESCTRDRBG_reseed(handle,<sp/>reseedBuffer,<sp/>NULL,<sp/>0);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">AESCTRDRBG_close(handle);</highlight></codeline>
</programlisting></para><para><anchor id="_a_e_s_c_t_r_d_r_b_g_8h_1ti_drivers_AESCTRDRBG_Examples"/><heading level="3">Examples </heading>
</para><para><heading level="4">Instantiating an AESCTRDRBG Instance with TRNG </heading>
</para><para><programlisting><codeline><highlight class="normal">#include<sp/>&lt;ti/drivers/AESCTRDRBG.h&gt;</highlight></codeline>
<codeline><highlight class="normal">#include<sp/>&lt;ti/drivers/TRNG.h&gt;</highlight></codeline>
<codeline><highlight class="normal">#include<sp/>&lt;ti/drivers/cryptoutils/cryptokey/CryptoKeyPlaintext.h&gt;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">...</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>AESCTRDRBG_Handle<sp/>handle;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>AESCTRDRBG_Params<sp/>params;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>TRNG_Handle<sp/>trngHandle;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>int_fast16_t<sp/>result;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>seedBuffer[AESCTRDRBG_SEED_LENGTH_AES_128];</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>Open<sp/>a<sp/>TRNG<sp/>driver<sp/>instance</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>trngHandle<sp/>=<sp/>TRNG_open(0,<sp/>NULL);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(trngHandle<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Failed<sp/>to<sp/>open<sp/>TRNG<sp/>instance</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>while(1);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>Generate<sp/>entropy<sp/>for<sp/>the<sp/>seed</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>TRNG_getRandomBytes(trngHandle,<sp/>seedBuffer,<sp/>AESCTRDRBG_SEED_LENGTH_AES_128);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(result<sp/>!=<sp/>TRNG_STATUS_SUCCESS)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Failed<sp/>to<sp/>generate<sp/>entropy</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>while(1);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>TRNG_close(trngHandle);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>Instantiate<sp/>the<sp/>AESCTRDRBG<sp/>parameters<sp/>and<sp/>the<sp/>driver<sp/>instance</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>AESCTRDRBG_Params_init(&amp;params);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>params.keyLength<sp/>=<sp/>AESCTRDRBG_AES_KEY_LENGTH_128;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>params.reseedInterval<sp/>=<sp/>0xFFFFFFFF;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>params.seed<sp/>=<sp/>seedBuffer;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>handle<sp/>=<sp/>AESCTRDRBG_open(0,<sp/>&amp;params);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(handle<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Failed<sp/>to<sp/>open<sp/>AESCTRDRBG<sp/>instance</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>while(1);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
</programlisting></para><para><heading level="4">Generating random key with Reseeding </heading>
</para><para><programlisting><codeline><highlight class="normal">#include<sp/>&lt;ti/drivers/AESCTRDRBG.h&gt;</highlight></codeline>
<codeline><highlight class="normal">#include<sp/>&lt;ti/drivers/TRNG.h&gt;</highlight></codeline>
<codeline><highlight class="normal">#include<sp/>&lt;ti/drivers/cryptoutils/cryptokey/CryptoKeyPlaintext.h&gt;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">...</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>#define<sp/>RANDOM_KEY_LENGTH_BYTES<sp/>32</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>AESCTRDRBG_Handle<sp/>handle;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>TRNG_Handle<sp/>trngHandle;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>CryptoKey<sp/>randomKey;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>int_fast16_t<sp/>result;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>randomKeyBuffer[RANDOM_KEY_LENGTH_BYTES];</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>Initialise<sp/>the<sp/>AESCTRDRBG<sp/>params<sp/>and<sp/>driver<sp/>instance<sp/>here</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>...</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>Initialize<sp/>a<sp/>blank<sp/>CryptoKey</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>CryptoKeyPlaintext_initBlankKey(&amp;randomKey,<sp/>randomKeyBuffer,<sp/>RANDOM_KEY_LENGTH_BYTES);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>Generate<sp/>key-material<sp/>for<sp/>the<sp/>CryptoKey</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>AESCTRDRBG_generateKey(handle,<sp/>&amp;randomKey);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>Check<sp/>return<sp/>value<sp/>and<sp/>reseed<sp/>if<sp/>needed.<sp/>This<sp/>should<sp/>happen<sp/>only<sp/>after<sp/>many<sp/>invocations</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>of<sp/>AESCTRDRBG_generateKey().</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(result<sp/>==<sp/>AESCTRDRBG_STATUS_RESEED_REQUIRED)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TRNG_Handle<sp/>trngHandle;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int_fast16_t<sp/>reseedResult;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>reseedBuffer[AESCTRDRBG_SEED_LENGTH_AES_128];</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reseedResult<sp/>=<sp/>TRNG_getRandomBytes(trngHandle,<sp/>reseedBuffer,<sp/>AESCTRDRBG_SEED_LENGTH_AES_128);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(reseedResult<sp/>!=<sp/>TRNG_STATUS_SUCCESS)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Failed<sp/>to<sp/>generate<sp/>entropy</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>while(1);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TRNG_close(trngHandle);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Reseed<sp/>the<sp/>DRBG<sp/>instance</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reseedResult<sp/>=<sp/>AESCTRDRBG_reseed(handle,<sp/>reseedBuffer,<sp/>NULL,<sp/>0);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(reseedResult<sp/>!=<sp/>AESCTRDRBG_STATUS_SUCCESS)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Failed<sp/>to<sp/>reseed<sp/>the<sp/>DRBG<sp/>instance</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>while(1);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>If<sp/>AESCTRDRBG_STATUS_RESEED_REQUIRED<sp/>was<sp/>returned<sp/>from<sp/>the<sp/>previous<sp/>call<sp/>to</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>AESCTRDRBG_generateKey(),<sp/>the<sp/>random<sp/>key<sp/>was<sp/>never<sp/>generated<sp/>by<sp/>that<sp/>call.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>So<sp/>the<sp/>user<sp/>must<sp/>invoke<sp/>that<sp/>call<sp/>again<sp/>(after<sp/>reseeding)<sp/>to<sp/>get<sp/>a<sp/>random<sp/>key.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>AESCTRDRBG_generateKey(handle,<sp/>&amp;randomKey);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(result<sp/>!=<sp/>AESCTRDRBG_STATUS_SUCCESS)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Failed<sp/>to<sp/>generate<sp/>key-material</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>while(1);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>else<sp/>if<sp/>(result<sp/>!=<sp/>AESCTRDRBG_STATUS_SUCCESS)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Failed<sp/>to<sp/>generate<sp/>key-material</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>while(1);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
</programlisting></para><para><heading level="4">Generating random bytes output to an array </heading>
</para><para><programlisting><codeline><highlight class="normal">#include<sp/>&lt;ti/drivers/AESCTRDRBG.h&gt;</highlight></codeline>
<codeline><highlight class="normal">#include<sp/>&lt;ti/drivers/TRNG.h&gt;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">...</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>#define<sp/>RANDOM_BYTES_SIZE<sp/>16</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>AESCTRDRBG_Handle<sp/>handle;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>TRNG_Handle<sp/>trngHandle;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>int_fast16_t<sp/>result;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>randomBytesBuffer[RANDOM_BYTES_SIZE];</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>Initialise<sp/>the<sp/>AESCTRDRBG<sp/>params<sp/>and<sp/>driver<sp/>instance<sp/>here</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>...</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>Get<sp/>random<sp/>bytes<sp/>output<sp/>to<sp/>the<sp/>buffer/array</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>AESCTRDRBG_getRandomBytes(handle,<sp/>&amp;randomBytesBuffer,<sp/>RANDOM_BYTES_SIZE);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>Check<sp/>and<sp/>reseed<sp/>if<sp/>required.<sp/>This<sp/>should<sp/>happen<sp/>only<sp/>after<sp/>many<sp/>invocations</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>of<sp/>AESCTRDRBG_getRandomBytes().</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(result<sp/>==<sp/>AESCTRDRBG_STATUS_RESEED_REQUIRED)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Reseed<sp/>the<sp/>DRBG<sp/>instance<sp/>using<sp/>AESCTRDRBG_reseed()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>and<sp/>invoke<sp/>AESCTRDRBG_getRandomBytes()<sp/>similar<sp/>to<sp/>the<sp/>previous<sp/>example.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>else<sp/>if<sp/>(result<sp/>!=<sp/>AESCTRDRBG_STATUS_SUCCESS)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Failed<sp/>to<sp/>generate<sp/>random<sp/>bytes</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>while(1);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
</programlisting> </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2019-2024,<sp/>Texas<sp/>Instruments<sp/>Incorporated</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>*<sp/><sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>*<sp/><sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>*<sp/><sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>Texas<sp/>Instruments<sp/>Incorporated<sp/>nor<sp/>the<sp/>names<sp/>of</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>its<sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>from<sp/>this<sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>OWNER<sp/>OR</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">/*!****************************************************************************</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/>@file<sp/><sp/><sp/><sp/><sp/><sp/><sp/>AESCTRDRBG.h</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/><sp/><sp/><sp/><sp/>AESCTRDRBG<sp/>driver<sp/>header</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/>@anchor<sp/>ti_drivers_AESCTRDRBG_Overview</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*<sp/>&lt;h3&gt;<sp/>Overview<sp/>&lt;/h3&gt;</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*<sp/>AESCTRDRBG<sp/>is<sp/>a<sp/>cryptographically<sp/>secure<sp/>deterministic<sp/>random<sp/>bit<sp/>generator</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*<sp/>that<sp/>is<sp/>used<sp/>to<sp/>efficiently<sp/>generate<sp/>random<sp/>numbers<sp/>for<sp/>use<sp/>in<sp/>keying<sp/>material</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*<sp/>or<sp/>other<sp/>security<sp/>related<sp/>purposes.<sp/>It<sp/>is<sp/>based<sp/>on<sp/>the<sp/>AES<sp/>block<sp/>cipher</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*<sp/>operating<sp/>in<sp/>Counter<sp/>(CTR)<sp/>mode<sp/>and<sp/>is<sp/>defined<sp/>by<sp/>NIST<sp/>SP<sp/>800-90A.</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*<sp/>AESCTRDRBG<sp/>derives<sp/>a<sp/>sequence<sp/>of<sp/>pseudo-random<sp/>numbers<sp/>based<sp/>on<sp/>an<sp/>initial</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*<sp/>secret<sp/>seed<sp/>and<sp/>additional,<sp/>non-secret<sp/>personalization<sp/>data<sp/>provided<sp/>during</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>*<sp/>instantiation.<sp/>A<sp/>sequence<sp/>of<sp/>random<sp/>bits<sp/>generated<sp/>by<sp/>AESCTRDRBG<sp/>will<sp/>have</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*<sp/>an<sp/>equivalent<sp/>entropy<sp/>content<sp/>of<sp/>MIN(sequenceLength,<sp/>security<sp/>strength).</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>*<sp/>The<sp/>security<sp/>strength<sp/>is<sp/>based<sp/>on<sp/>the<sp/>seed<sp/>length<sp/>and<sp/>the<sp/>AES<sp/>key<sp/>length<sp/>used</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>*<sp/>in<sp/>the<sp/>AESCTRDRBG<sp/>instance.</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/>*<sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>AES-128<sp/>|<sp/>AES-192<sp/>|<sp/>AES-256<sp/>|</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>*<sp/>|---------------------------------------|---------|---------|---------|</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/>*<sp/>|<sp/>Security<sp/>Strength<sp/>(bits)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>128<sp/><sp/><sp/><sp/><sp/>|<sp/>192<sp/><sp/><sp/><sp/><sp/>|<sp/>256<sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/>*<sp/>|<sp/>Seed<sp/>Length<sp/>(bits)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>192<sp/><sp/><sp/><sp/><sp/>|<sp/>320<sp/><sp/><sp/><sp/><sp/>|<sp/>384<sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/>*<sp/>|<sp/>Personalization<sp/>String<sp/>Length<sp/>(bits)<sp/><sp/>|<sp/>&lt;=<sp/>192<sp/><sp/>|<sp/>&lt;=<sp/>320<sp/><sp/>|<sp/>&lt;=<sp/>384<sp/><sp/>|</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/>*<sp/>|<sp/>Max<sp/>Requests<sp/>Between<sp/>Reseeds<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>2^48<sp/><sp/><sp/><sp/>|<sp/>2^48<sp/><sp/><sp/><sp/>|<sp/>2^48<sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/>*<sp/>|<sp/>Max<sp/>Request<sp/>Length<sp/>(bits)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>2^19<sp/><sp/><sp/><sp/>|<sp/>2^19<sp/><sp/><sp/><sp/>|<sp/>2^19<sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/>*<sp/>&lt;h3&gt;<sp/>Security<sp/>Strength<sp/>&lt;/h3&gt;</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/>*<sp/>The<sp/>seed<sp/>must<sp/>be<sp/>sourced<sp/>from<sp/>a<sp/>cryptographically<sp/>secure<sp/>source<sp/>such<sp/>as</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/>*<sp/>a<sp/>True<sp/>Random<sp/>Number<sp/>Generator<sp/>and<sp/>contain<sp/>seed<sp/>length<sp/>bits<sp/>of<sp/>entropy.</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/>*<sp/>Since<sp/>the<sp/>seed<sp/>length<sp/>is<sp/>always<sp/>larger<sp/>than<sp/>the<sp/>security<sp/>strength<sp/>for</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/>*<sp/>any<sp/>one<sp/>AES<sp/>key<sp/>length,<sp/>the<sp/>output<sp/>of<sp/>one<sp/>AESCTRDRBG<sp/>instance<sp/>may<sp/>not</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/>*<sp/>be<sp/>used<sp/>to<sp/>seed<sp/>another<sp/>instance<sp/>of<sp/>the<sp/>same<sp/>or<sp/>higher<sp/>security<sp/>strength.</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/>*<sp/>&lt;h3&gt;<sp/>Reseeding<sp/>&lt;/h3&gt;</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/>*<sp/>Because<sp/>of<sp/>the<sp/>way<sp/>AES<sp/>CTR<sp/>operates,<sp/>there<sp/>are<sp/>a<sp/>limited<sp/>number<sp/>of<sp/>output</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/>*<sp/>bitstreams<sp/>that<sp/>may<sp/>be<sp/>generated<sp/>before<sp/>the<sp/>AESCTRDRBG<sp/>instance<sp/>must<sp/>be</highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/>*<sp/>reseeded.<sp/>The<sp/>reseeding<sp/>interval<sp/>is<sp/>set<sp/>by<sp/>the<sp/>number<sp/>of<sp/>random<sp/>bit</highlight></codeline>
<codeline lineno="70"><highlight class="comment"><sp/>*<sp/>sequences<sp/>generated<sp/>and<sp/>not<sp/>by<sp/>their<sp/>individual<sp/>or<sp/>combined<sp/>lengths.<sp/>Each<sp/>time</highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/>*<sp/>random<sp/>bits<sp/>are<sp/>requested<sp/>of<sp/>the<sp/>AESCTRDRBG<sp/>instance<sp/>by<sp/>the<sp/>application,</highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/>*<sp/>the<sp/>reseed<sp/>counter<sp/>is<sp/>incremented<sp/>by<sp/>one<sp/>regardless<sp/>of<sp/>how<sp/>many<sp/>bits<sp/>at<sp/>a</highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/>*<sp/>time<sp/>are<sp/>requested.<sp/>When<sp/>this<sp/>counter<sp/>reaches<sp/>the<sp/>configured<sp/>reseed<sp/>limit,</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/>*<sp/>the<sp/>AESCTRDRBG<sp/>instance<sp/>will<sp/>return<sp/>#AESCTRDRBG_STATUS_RESEED_REQUIRED</highlight></codeline>
<codeline lineno="75"><highlight class="comment"><sp/>*<sp/>until<sp/>it<sp/>is<sp/>reseeded.</highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="77"><highlight class="comment"><sp/>*<sp/>The<sp/>maximum<sp/>permitted<sp/>number<sp/>of<sp/>requests<sp/>between<sp/>reseeds<sp/>is<sp/>2^48.</highlight></codeline>
<codeline lineno="78"><highlight class="comment"><sp/>*<sp/>The<sp/>default<sp/>counter<sp/>is<sp/>only<sp/>2^32<sp/>long<sp/>for<sp/>ease<sp/>of<sp/>implementation.</highlight></codeline>
<codeline lineno="79"><highlight class="comment"><sp/>*<sp/>A<sp/>more<sp/>conservative<sp/>reseed<sp/>limit<sp/>may<sp/>be<sp/>configured<sp/>by<sp/>the<sp/>application</highlight></codeline>
<codeline lineno="80"><highlight class="comment"><sp/>*<sp/>for<sp/>increased<sp/>security.</highlight></codeline>
<codeline lineno="81"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="82"><highlight class="comment"><sp/>*<sp/>A<sp/>previously<sp/>used<sp/>seed<sp/>may<sp/>never<sp/>be<sp/>reused<sp/>to<sp/>reseed<sp/>an<sp/>AESCTRDRBG<sp/>instance.</highlight></codeline>
<codeline lineno="83"><highlight class="comment"><sp/>*<sp/>The<sp/>seed<sp/>used<sp/>to<sp/>instantiate<sp/>or<sp/>reseed<sp/>an<sp/>instance<sp/>must<sp/>be<sp/>generated<sp/>by</highlight></codeline>
<codeline lineno="84"><highlight class="comment"><sp/>*<sp/>an<sp/>approved<sp/>entropy<sp/>source.</highlight></codeline>
<codeline lineno="85"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="86"><highlight class="comment"><sp/>*<sp/>&lt;h3&gt;<sp/>Derivation<sp/>Function<sp/>&lt;/h3&gt;</highlight></codeline>
<codeline lineno="87"><highlight class="comment"><sp/>*<sp/>NIST<sp/>specifies<sp/>the<sp/>the<sp/>use<sp/>of<sp/>an<sp/>optional<sp/>derivation<sp/>function<sp/>to<sp/>reduced</highlight></codeline>
<codeline lineno="88"><highlight class="comment"><sp/>*<sp/>entropy<sp/>and<sp/>personalization<sp/>string<sp/>lengths<sp/>longer<sp/>than<sp/>the<sp/>seed</highlight></codeline>
<codeline lineno="89"><highlight class="comment"><sp/>*<sp/>length<sp/>down<sp/>to<sp/>the<sp/>seed<sp/>length.<sp/>This<sp/>feature<sp/>is<sp/>not<sp/>presently<sp/>supported.</highlight></codeline>
<codeline lineno="90"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="91"><highlight class="comment"><sp/>*<sp/>@anchor<sp/>ti_drivers_AESCTRDRBG_Usage</highlight></codeline>
<codeline lineno="92"><highlight class="comment"><sp/>*<sp/>&lt;h3&gt;<sp/>Usage<sp/>&lt;/h3&gt;</highlight></codeline>
<codeline lineno="93"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="94"><highlight class="comment"><sp/>*<sp/>This<sp/>documentation<sp/>provides<sp/>a<sp/>basic<sp/>@ref<sp/>ti_drivers_AESCTRDRBG_Synopsis</highlight></codeline>
<codeline lineno="95"><highlight class="comment"><sp/>*<sp/>&quot;usage<sp/>summary&quot;<sp/>and<sp/>a<sp/>set<sp/>of<sp/>@ref<sp/>ti_drivers_AESCTRDRBG_Examples<sp/>&quot;examples&quot;</highlight></codeline>
<codeline lineno="96"><highlight class="comment"><sp/>*<sp/>in<sp/>the<sp/>form<sp/>of<sp/>commented<sp/>code<sp/>fragments.<sp/>Detailed<sp/>descriptions<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="97"><highlight class="comment"><sp/>*<sp/>APIs<sp/>are<sp/>provided<sp/>in<sp/>subsequent<sp/>sections.</highlight></codeline>
<codeline lineno="98"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="99"><highlight class="comment"><sp/>*<sp/>@anchor<sp/>ti_drivers_AESCTRDRBG_Synopsis</highlight></codeline>
<codeline lineno="100"><highlight class="comment"><sp/>*<sp/>&lt;h3&gt;<sp/>Synopsis<sp/>&lt;/h3&gt;</highlight></codeline>
<codeline lineno="101"><highlight class="comment"><sp/>*<sp/>@anchor<sp/>ti_drivers_AESCTRDRBG_Synopsis_Code</highlight></codeline>
<codeline lineno="102"><highlight class="comment"><sp/>*<sp/>@code</highlight></codeline>
<codeline lineno="103"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>#include<sp/>&lt;ti/drivers/AESCTRDRBG.h&gt;</highlight></codeline>
<codeline lineno="104"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="105"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>AESCTRDRBG_init();</highlight></codeline>
<codeline lineno="106"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="107"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>//<sp/>Instantiate<sp/>the<sp/>AESCTRDRBG<sp/>instance</highlight></codeline>
<codeline lineno="108"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>AESCTRDRBG_Params_init(&amp;params);</highlight></codeline>
<codeline lineno="109"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>params.keyLength<sp/>=<sp/>AESCTRDRBG_AES_KEY_LENGTH_128;</highlight></codeline>
<codeline lineno="110"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>params.reseedInterval<sp/>=<sp/>0xFFFFFFFF;</highlight></codeline>
<codeline lineno="111"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>params.seed<sp/>=<sp/>seedBuffer;</highlight></codeline>
<codeline lineno="112"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="113"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>handle<sp/>=<sp/>AESCTRDRBG_open(0,<sp/>&amp;params);</highlight></codeline>
<codeline lineno="114"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="115"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>AESCTRDRBG_generateKey(handle,<sp/>&amp;resultKey);</highlight></codeline>
<codeline lineno="116"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="117"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>reseedResult<sp/>=<sp/>AESCTRDRBG_reseed(handle,<sp/>reseedBuffer,<sp/>NULL,<sp/>0);</highlight></codeline>
<codeline lineno="118"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="119"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>AESCTRDRBG_close(handle);</highlight></codeline>
<codeline lineno="120"><highlight class="comment"><sp/>*<sp/>@endcode</highlight></codeline>
<codeline lineno="121"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="122"><highlight class="comment"><sp/>*<sp/>@anchor<sp/>ti_drivers_AESCTRDRBG_Examples</highlight></codeline>
<codeline lineno="123"><highlight class="comment"><sp/>*<sp/>&lt;h3&gt;<sp/>Examples<sp/>&lt;/h3&gt;</highlight></codeline>
<codeline lineno="124"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="125"><highlight class="comment"><sp/>*<sp/>&lt;h4&gt;<sp/>Instantiating<sp/>an<sp/>AESCTRDRBG<sp/>Instance<sp/>with<sp/>TRNG<sp/>&lt;/h4&gt;</highlight></codeline>
<codeline lineno="126"><highlight class="comment"><sp/>*<sp/>@code</highlight></codeline>
<codeline lineno="127"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="128"><highlight class="comment"><sp/>*<sp/>#include<sp/>&lt;ti/drivers/AESCTRDRBG.h&gt;</highlight></codeline>
<codeline lineno="129"><highlight class="comment"><sp/>*<sp/>#include<sp/>&lt;ti/drivers/TRNG.h&gt;</highlight></codeline>
<codeline lineno="130"><highlight class="comment"><sp/>*<sp/>#include<sp/>&lt;ti/drivers/cryptoutils/cryptokey/CryptoKeyPlaintext.h&gt;</highlight></codeline>
<codeline lineno="131"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="132"><highlight class="comment"><sp/>*<sp/>...</highlight></codeline>
<codeline lineno="133"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="134"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>AESCTRDRBG_Handle<sp/>handle;</highlight></codeline>
<codeline lineno="135"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>AESCTRDRBG_Params<sp/>params;</highlight></codeline>
<codeline lineno="136"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>TRNG_Handle<sp/>trngHandle;</highlight></codeline>
<codeline lineno="137"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>int_fast16_t<sp/>result;</highlight></codeline>
<codeline lineno="138"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="139"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>seedBuffer[AESCTRDRBG_SEED_LENGTH_AES_128];</highlight></codeline>
<codeline lineno="140"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="141"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>//<sp/>Open<sp/>a<sp/>TRNG<sp/>driver<sp/>instance</highlight></codeline>
<codeline lineno="142"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>trngHandle<sp/>=<sp/>TRNG_open(0,<sp/>NULL);</highlight></codeline>
<codeline lineno="143"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>if<sp/>(trngHandle<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Failed<sp/>to<sp/>open<sp/>TRNG<sp/>instance</highlight></codeline>
<codeline lineno="145"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>while(1);</highlight></codeline>
<codeline lineno="146"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="148"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>//<sp/>Generate<sp/>entropy<sp/>for<sp/>the<sp/>seed</highlight></codeline>
<codeline lineno="149"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>TRNG_getRandomBytes(trngHandle,<sp/>seedBuffer,<sp/>AESCTRDRBG_SEED_LENGTH_AES_128);</highlight></codeline>
<codeline lineno="150"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>if<sp/>(result<sp/>!=<sp/>TRNG_STATUS_SUCCESS)<sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Failed<sp/>to<sp/>generate<sp/>entropy</highlight></codeline>
<codeline lineno="152"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>while(1);</highlight></codeline>
<codeline lineno="153"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="155"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>TRNG_close(trngHandle);</highlight></codeline>
<codeline lineno="156"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="157"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>//<sp/>Instantiate<sp/>the<sp/>AESCTRDRBG<sp/>parameters<sp/>and<sp/>the<sp/>driver<sp/>instance</highlight></codeline>
<codeline lineno="158"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>AESCTRDRBG_Params_init(&amp;params);</highlight></codeline>
<codeline lineno="159"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>params.keyLength<sp/>=<sp/>AESCTRDRBG_AES_KEY_LENGTH_128;</highlight></codeline>
<codeline lineno="160"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>params.reseedInterval<sp/>=<sp/>0xFFFFFFFF;</highlight></codeline>
<codeline lineno="161"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>params.seed<sp/>=<sp/>seedBuffer;</highlight></codeline>
<codeline lineno="162"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="163"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>handle<sp/>=<sp/>AESCTRDRBG_open(0,<sp/>&amp;params);</highlight></codeline>
<codeline lineno="164"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>if<sp/>(handle<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Failed<sp/>to<sp/>open<sp/>AESCTRDRBG<sp/>instance</highlight></codeline>
<codeline lineno="166"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>while(1);</highlight></codeline>
<codeline lineno="167"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="comment"><sp/>*<sp/>@endcode</highlight></codeline>
<codeline lineno="169"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="170"><highlight class="comment"><sp/>*<sp/>&lt;h4&gt;<sp/>Generating<sp/>random<sp/>key<sp/>with<sp/>Reseeding<sp/>&lt;/h4&gt;</highlight></codeline>
<codeline lineno="171"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="172"><highlight class="comment"><sp/>*<sp/>@code</highlight></codeline>
<codeline lineno="173"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="174"><highlight class="comment"><sp/>*<sp/>#include<sp/>&lt;ti/drivers/AESCTRDRBG.h&gt;</highlight></codeline>
<codeline lineno="175"><highlight class="comment"><sp/>*<sp/>#include<sp/>&lt;ti/drivers/TRNG.h&gt;</highlight></codeline>
<codeline lineno="176"><highlight class="comment"><sp/>*<sp/>#include<sp/>&lt;ti/drivers/cryptoutils/cryptokey/CryptoKeyPlaintext.h&gt;</highlight></codeline>
<codeline lineno="177"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="178"><highlight class="comment"><sp/>*<sp/>...</highlight></codeline>
<codeline lineno="179"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="180"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>#define<sp/>RANDOM_KEY_LENGTH_BYTES<sp/>32</highlight></codeline>
<codeline lineno="181"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="182"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>AESCTRDRBG_Handle<sp/>handle;</highlight></codeline>
<codeline lineno="183"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>TRNG_Handle<sp/>trngHandle;</highlight></codeline>
<codeline lineno="184"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>CryptoKey<sp/>randomKey;</highlight></codeline>
<codeline lineno="185"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>int_fast16_t<sp/>result;</highlight></codeline>
<codeline lineno="186"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="187"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>randomKeyBuffer[RANDOM_KEY_LENGTH_BYTES];</highlight></codeline>
<codeline lineno="188"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="189"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>//<sp/>Initialise<sp/>the<sp/>AESCTRDRBG<sp/>params<sp/>and<sp/>driver<sp/>instance<sp/>here</highlight></codeline>
<codeline lineno="190"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>...</highlight></codeline>
<codeline lineno="191"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="192"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>//<sp/>Initialize<sp/>a<sp/>blank<sp/>CryptoKey</highlight></codeline>
<codeline lineno="193"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>CryptoKeyPlaintext_initBlankKey(&amp;randomKey,<sp/>randomKeyBuffer,<sp/>RANDOM_KEY_LENGTH_BYTES);</highlight></codeline>
<codeline lineno="194"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="195"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>//<sp/>Generate<sp/>key-material<sp/>for<sp/>the<sp/>CryptoKey</highlight></codeline>
<codeline lineno="196"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>AESCTRDRBG_generateKey(handle,<sp/>&amp;randomKey);</highlight></codeline>
<codeline lineno="197"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="198"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>//<sp/>Check<sp/>return<sp/>value<sp/>and<sp/>reseed<sp/>if<sp/>needed.<sp/>This<sp/>should<sp/>happen<sp/>only<sp/>after<sp/>many<sp/>invocations</highlight></codeline>
<codeline lineno="199"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>//<sp/>of<sp/>AESCTRDRBG_generateKey().</highlight></codeline>
<codeline lineno="200"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>if<sp/>(result<sp/>==<sp/>AESCTRDRBG_STATUS_RESEED_REQUIRED)<sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TRNG_Handle<sp/>trngHandle;</highlight></codeline>
<codeline lineno="202"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int_fast16_t<sp/>reseedResult;</highlight></codeline>
<codeline lineno="203"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>reseedBuffer[AESCTRDRBG_SEED_LENGTH_AES_128];</highlight></codeline>
<codeline lineno="204"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="205"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reseedResult<sp/>=<sp/>TRNG_getRandomBytes(trngHandle,<sp/>reseedBuffer,<sp/>AESCTRDRBG_SEED_LENGTH_AES_128);</highlight></codeline>
<codeline lineno="206"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(reseedResult<sp/>!=<sp/>TRNG_STATUS_SUCCESS)<sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Failed<sp/>to<sp/>generate<sp/>entropy</highlight></codeline>
<codeline lineno="208"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>while(1);</highlight></codeline>
<codeline lineno="209"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="211"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TRNG_close(trngHandle);</highlight></codeline>
<codeline lineno="212"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="213"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Reseed<sp/>the<sp/>DRBG<sp/>instance</highlight></codeline>
<codeline lineno="214"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reseedResult<sp/>=<sp/>AESCTRDRBG_reseed(handle,<sp/>reseedBuffer,<sp/>NULL,<sp/>0);</highlight></codeline>
<codeline lineno="215"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(reseedResult<sp/>!=<sp/>AESCTRDRBG_STATUS_SUCCESS)<sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Failed<sp/>to<sp/>reseed<sp/>the<sp/>DRBG<sp/>instance</highlight></codeline>
<codeline lineno="217"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>while(1);</highlight></codeline>
<codeline lineno="218"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="220"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>If<sp/>AESCTRDRBG_STATUS_RESEED_REQUIRED<sp/>was<sp/>returned<sp/>from<sp/>the<sp/>previous<sp/>call<sp/>to</highlight></codeline>
<codeline lineno="221"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>AESCTRDRBG_generateKey(),<sp/>the<sp/>random<sp/>key<sp/>was<sp/>never<sp/>generated<sp/>by<sp/>that<sp/>call.</highlight></codeline>
<codeline lineno="222"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>So<sp/>the<sp/>user<sp/>must<sp/>invoke<sp/>that<sp/>call<sp/>again<sp/>(after<sp/>reseeding)<sp/>to<sp/>get<sp/>a<sp/>random<sp/>key.</highlight></codeline>
<codeline lineno="223"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>AESCTRDRBG_generateKey(handle,<sp/>&amp;randomKey);</highlight></codeline>
<codeline lineno="224"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(result<sp/>!=<sp/>AESCTRDRBG_STATUS_SUCCESS)<sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Failed<sp/>to<sp/>generate<sp/>key-material</highlight></codeline>
<codeline lineno="226"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>while(1);</highlight></codeline>
<codeline lineno="227"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>else<sp/>if<sp/>(result<sp/>!=<sp/>AESCTRDRBG_STATUS_SUCCESS)<sp/>{</highlight></codeline>
<codeline lineno="230"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Failed<sp/>to<sp/>generate<sp/>key-material</highlight></codeline>
<codeline lineno="231"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>while(1);</highlight></codeline>
<codeline lineno="232"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="234"><highlight class="comment"><sp/>*<sp/>@endcode</highlight></codeline>
<codeline lineno="235"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="236"><highlight class="comment"><sp/>*<sp/>&lt;h4&gt;<sp/>Generating<sp/>random<sp/>bytes<sp/>output<sp/>to<sp/>an<sp/>array<sp/>&lt;/h4&gt;</highlight></codeline>
<codeline lineno="237"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="238"><highlight class="comment"><sp/>*<sp/>@code</highlight></codeline>
<codeline lineno="239"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="240"><highlight class="comment"><sp/>*<sp/>#include<sp/>&lt;ti/drivers/AESCTRDRBG.h&gt;</highlight></codeline>
<codeline lineno="241"><highlight class="comment"><sp/>*<sp/>#include<sp/>&lt;ti/drivers/TRNG.h&gt;</highlight></codeline>
<codeline lineno="242"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="243"><highlight class="comment"><sp/>*<sp/>...</highlight></codeline>
<codeline lineno="244"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="245"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>#define<sp/>RANDOM_BYTES_SIZE<sp/>16</highlight></codeline>
<codeline lineno="246"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="247"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>AESCTRDRBG_Handle<sp/>handle;</highlight></codeline>
<codeline lineno="248"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>TRNG_Handle<sp/>trngHandle;</highlight></codeline>
<codeline lineno="249"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>int_fast16_t<sp/>result;</highlight></codeline>
<codeline lineno="250"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>randomBytesBuffer[RANDOM_BYTES_SIZE];</highlight></codeline>
<codeline lineno="251"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="252"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>//<sp/>Initialise<sp/>the<sp/>AESCTRDRBG<sp/>params<sp/>and<sp/>driver<sp/>instance<sp/>here</highlight></codeline>
<codeline lineno="253"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>...</highlight></codeline>
<codeline lineno="254"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="255"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>//<sp/>Get<sp/>random<sp/>bytes<sp/>output<sp/>to<sp/>the<sp/>buffer/array</highlight></codeline>
<codeline lineno="256"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>AESCTRDRBG_getRandomBytes(handle,<sp/>&amp;randomBytesBuffer,<sp/>RANDOM_BYTES_SIZE);</highlight></codeline>
<codeline lineno="257"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="258"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>//<sp/>Check<sp/>and<sp/>reseed<sp/>if<sp/>required.<sp/>This<sp/>should<sp/>happen<sp/>only<sp/>after<sp/>many<sp/>invocations</highlight></codeline>
<codeline lineno="259"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>//<sp/>of<sp/>AESCTRDRBG_getRandomBytes().</highlight></codeline>
<codeline lineno="260"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>if<sp/>(result<sp/>==<sp/>AESCTRDRBG_STATUS_RESEED_REQUIRED)<sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Reseed<sp/>the<sp/>DRBG<sp/>instance<sp/>using<sp/>AESCTRDRBG_reseed()</highlight></codeline>
<codeline lineno="262"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>and<sp/>invoke<sp/>AESCTRDRBG_getRandomBytes()<sp/>similar<sp/>to<sp/>the<sp/>previous<sp/>example.</highlight></codeline>
<codeline lineno="263"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="264"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>else<sp/>if<sp/>(result<sp/>!=<sp/>AESCTRDRBG_STATUS_SUCCESS)<sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Failed<sp/>to<sp/>generate<sp/>random<sp/>bytes</highlight></codeline>
<codeline lineno="266"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>while(1);</highlight></codeline>
<codeline lineno="267"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="269"><highlight class="comment"><sp/>*<sp/>@endcode</highlight></codeline>
<codeline lineno="270"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="271"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ti_drivers_AESCTRDRBG__include</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ti_drivers_AESCTRDRBG__include</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdbool.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_a_e_s_c_t_r_8h" kindref="compound">ti/drivers/AESCTR.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_a_e_s_common_8h" kindref="compound">ti/drivers/AESCommon.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_crypto_key_8h" kindref="compound">ti/drivers/cryptoutils/cryptokey/CryptoKey.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ti/devices/DeviceFamily.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="302" refid="_a_e_s_c_t_r_d_r_b_g_8h_1a6f128f08bbf34ba31a3c287de8875f62" refkind="member"><highlight class="preprocessor">#define<sp/>AESCTRDRBG_STATUS_RESERVED<sp/>AES_STATUS_RESERVED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="310" refid="_a_e_s_c_t_r_d_r_b_g_8h_1a1e05a04971e87a3f4a4f2868b87c2bb4" refkind="member"><highlight class="preprocessor">#define<sp/>AESCTRDRBG_STATUS_SUCCESS<sp/>AES_STATUS_SUCCESS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="318" refid="_a_e_s_c_t_r_d_r_b_g_8h_1aa99743e9410987ed461857c4be2aec56" refkind="member"><highlight class="preprocessor">#define<sp/>AESCTRDRBG_STATUS_ERROR<sp/>AES_STATUS_ERROR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="328" refid="_a_e_s_c_t_r_d_r_b_g_8h_1afa91ce263cd14074a2e0dd5ae25b9824" refkind="member"><highlight class="preprocessor">#define<sp/>AESCTRDRBG_STATUS_RESOURCE_UNAVAILABLE<sp/>AES_STATUS_RESOURCE_UNAVAILABLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="336" refid="_a_e_s_c_t_r_d_r_b_g_8h_1a1b1b1edb3f2f940cf9209e1cb3b99288" refkind="member"><highlight class="preprocessor">#define<sp/>AESCTRDRBG_STATUS_RESEED_REQUIRED<sp/>(AES_STATUS_DRIVER_SPECIFIC_ERROR<sp/>-<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="342" refid="_a_e_s_c_t_r_d_r_b_g_8h_1a8956d5d6aeedcbc208db87fa5591fe14" refkind="member"><highlight class="preprocessor">#define<sp/>AESCTRDRBG_STATUS_UNINSTANTIATED<sp/>(AES_STATUS_DRIVER_SPECIFIC_ERROR<sp/>-<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="351" refid="_a_e_s_c_t_r_d_r_b_g_8h_1ac628f4ae10a0f9111899eb7f20b2ce84" refkind="member"><highlight class="preprocessor">#define<sp/>AESCTRDRBG_STATUS_UNALIGNED_IO_NOT_SUPPORTED<sp/>(AES_STATUS_DRIVER_SPECIFIC_ERROR<sp/>-<sp/>2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="359" refid="_a_e_s_c_t_r_d_r_b_g_8h_1abe87dff4cfc26e005e4557c95ee917ba" refkind="member"><highlight class="preprocessor">#define<sp/>AESCTRDRBG_STATUS_KEYSTORE_ERROR<sp/>(AES_STATUS_KEYSTORE_GENERIC_ERROR)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(DeviceFamily_PARENT<sp/>==<sp/>DeviceFamily_PARENT_CC27XX)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="367" refid="_a_e_s_c_t_r_d_r_b_g_8h_1a14b823aeeb3dc7d130d4dc2605473ce6" refkind="member"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>AESCTRDRBG_STATUS_INPUT_LENGTH_INVALID<sp/>(AES_STATUS_KEYSTORE_GENERIC_ERROR<sp/>-<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="373" refid="_a_e_s_c_t_r_d_r_b_g_8h_1a3dcf06dd21f3d01d2eeffc78bb3590e2" refkind="member"><highlight class="preprocessor">#define<sp/>AESCTRDRBG_AES_BLOCK_SIZE_BYTES<sp/>16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="378" refid="_a_e_s_c_t_r_d_r_b_g_8h_1a1482c6747f5594d24d37f852967386a8" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal">{</highlight></codeline>
<codeline lineno="380" refid="_a_e_s_c_t_r_d_r_b_g_8h_1a1482c6747f5594d24d37f852967386a8ae492ad9709beb7ac44c67e282b9c1abb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1a1482c6747f5594d24d37f852967386a8ae492ad9709beb7ac44c67e282b9c1abb" kindref="member">AESCTRDRBG_AES_KEY_LENGTH_128</ref><sp/>=<sp/>16,</highlight></codeline>
<codeline lineno="381" refid="_a_e_s_c_t_r_d_r_b_g_8h_1a1482c6747f5594d24d37f852967386a8ad9c83f7b6f813e9f8276e76cc850e0d2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1a1482c6747f5594d24d37f852967386a8ad9c83f7b6f813e9f8276e76cc850e0d2" kindref="member">AESCTRDRBG_AES_KEY_LENGTH_256</ref><sp/>=<sp/>32,</highlight></codeline>
<codeline lineno="382"><highlight class="normal">}<sp/><ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1a1482c6747f5594d24d37f852967386a8" kindref="member">AESCTRDRBG_AES_KEY_LENGTH</ref>;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="387" refid="_a_e_s_c_t_r_d_r_b_g_8h_1a2ce013814c4e735e092d9c56a5790103" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal">{</highlight></codeline>
<codeline lineno="389" refid="_a_e_s_c_t_r_d_r_b_g_8h_1a2ce013814c4e735e092d9c56a5790103a11c804896f9c835dce56900c8469d03b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1a2ce013814c4e735e092d9c56a5790103a11c804896f9c835dce56900c8469d03b" kindref="member">AESCTRDRBG_SEED_LENGTH_AES_128</ref><sp/>=<sp/><ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1a1482c6747f5594d24d37f852967386a8ae492ad9709beb7ac44c67e282b9c1abb" kindref="member">AESCTRDRBG_AES_KEY_LENGTH_128</ref><sp/>+<sp/><ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1a3dcf06dd21f3d01d2eeffc78bb3590e2" kindref="member">AESCTRDRBG_AES_BLOCK_SIZE_BYTES</ref>,</highlight></codeline>
<codeline lineno="390" refid="_a_e_s_c_t_r_d_r_b_g_8h_1a2ce013814c4e735e092d9c56a5790103a80f638233529d83c63ba4ab6328084ca" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1a2ce013814c4e735e092d9c56a5790103a80f638233529d83c63ba4ab6328084ca" kindref="member">AESCTRDRBG_SEED_LENGTH_AES_256</ref><sp/>=<sp/><ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1a1482c6747f5594d24d37f852967386a8ad9c83f7b6f813e9f8276e76cc850e0d2" kindref="member">AESCTRDRBG_AES_KEY_LENGTH_256</ref><sp/>+<sp/><ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1a3dcf06dd21f3d01d2eeffc78bb3590e2" kindref="member">AESCTRDRBG_AES_BLOCK_SIZE_BYTES</ref>,</highlight></codeline>
<codeline lineno="391"><highlight class="normal">}<sp/><ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1a2ce013814c4e735e092d9c56a5790103" kindref="member">AESCTRDRBG_SEED_LENGTH</ref>;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="413" refid="_a_e_s_c_t_r_d_r_b_g_8h_1a58ed46a622459c055f3dca39fc973f91" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal">{</highlight></codeline>
<codeline lineno="419" refid="_a_e_s_c_t_r_d_r_b_g_8h_1a58ed46a622459c055f3dca39fc973f91aecb915547715788b421fd2b4a791823c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1a58ed46a622459c055f3dca39fc973f91aecb915547715788b421fd2b4a791823c" kindref="member">AESCTRDRBG_RETURN_BEHAVIOR_BLOCKING</ref><sp/>=<sp/><ref refid="_a_e_s_c_t_r_8h_1a4bca2f2e747d2006dafafb098fd2f2b4ade55945ff11c47457a75d97db2a20b2c" kindref="member">AESCTR_RETURN_BEHAVIOR_BLOCKING</ref>,</highlight></codeline>
<codeline lineno="424" refid="_a_e_s_c_t_r_d_r_b_g_8h_1a58ed46a622459c055f3dca39fc973f91a00f06cc10c6d8b7a120d06ede4133496" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1a58ed46a622459c055f3dca39fc973f91a00f06cc10c6d8b7a120d06ede4133496" kindref="member">AESCTRDRBG_RETURN_BEHAVIOR_POLLING</ref><sp/><sp/>=<sp/><ref refid="_a_e_s_c_t_r_8h_1a4bca2f2e747d2006dafafb098fd2f2b4a4a75cbc6c9b0ccde83c5cf9c5c5f053e" kindref="member">AESCTR_RETURN_BEHAVIOR_POLLING</ref>,</highlight></codeline>
<codeline lineno="425"><highlight class="normal">}<sp/><ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1a58ed46a622459c055f3dca39fc973f91" kindref="member">AESCTRDRBG_ReturnBehavior</ref>;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="438" refid="_a_e_s_c_t_r_d_r_b_g_8h_1a77eeb0dd18b031c22b66bd198d17cc4b" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="struct_a_e_s_common___config" kindref="compound">AESCommon_Config</ref><sp/><ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1a77eeb0dd18b031c22b66bd198d17cc4b" kindref="member">AESCTRDRBG_Config</ref>;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="443" refid="_a_e_s_c_t_r_d_r_b_g_8h_1aad30ad6c6ed40050bcd4d8f1dc56b1df" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>AESCTRDRBG_Config<sp/>*<ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1aad30ad6c6ed40050bcd4d8f1dc56b1df" kindref="member">AESCTRDRBG_Handle</ref>;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="453" refid="struct_a_e_s_c_t_r_d_r_b_g___params" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal">{</highlight></codeline>
<codeline lineno="455" refid="struct_a_e_s_c_t_r_d_r_b_g___params_1a933574dd0662ea1078017337d5f98e8d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1a1482c6747f5594d24d37f852967386a8" kindref="member">AESCTRDRBG_AES_KEY_LENGTH</ref><sp/><ref refid="struct_a_e_s_c_t_r_d_r_b_g___params_1a933574dd0662ea1078017337d5f98e8d" kindref="member">keyLength</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="458" refid="struct_a_e_s_c_t_r_d_r_b_g___params_1abea8271dcbb8e8c984535b55ae637625" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_a_e_s_c_t_r_d_r_b_g___params_1abea8271dcbb8e8c984535b55ae637625" kindref="member">reseedInterval</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="462" refid="struct_a_e_s_c_t_r_d_r_b_g___params_1ae81a68d26b43be6beb02292bd2a46268" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="struct_a_e_s_c_t_r_d_r_b_g___params_1ae81a68d26b43be6beb02292bd2a46268" kindref="member">seed</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="467" refid="struct_a_e_s_c_t_r_d_r_b_g___params_1adf042602669b2b22e52ceee6e3fa3f81" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="struct_a_e_s_c_t_r_d_r_b_g___params_1adf042602669b2b22e52ceee6e3fa3f81" kindref="member">personalizationData</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="471" refid="struct_a_e_s_c_t_r_d_r_b_g___params_1a18912b6d086a150ecc1f50b8ec1f1002" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="struct_a_e_s_c_t_r_d_r_b_g___params_1a18912b6d086a150ecc1f50b8ec1f1002" kindref="member">personalizationDataLength</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="475" refid="struct_a_e_s_c_t_r_d_r_b_g___params_1a83764504660fc4050f0ed375a52a6468" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>AESCTRDRBG_ReturnBehavior<sp/><ref refid="struct_a_e_s_c_t_r_d_r_b_g___params_1a83764504660fc4050f0ed375a52a6468" kindref="member">returnBehavior</ref>;<sp/></highlight></codeline>
<codeline lineno="482" refid="struct_a_e_s_c_t_r_d_r_b_g___params_1a9aac3d0b9729da065a5bd9d4421c1f9b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="struct_a_e_s_c_t_r_d_r_b_g___params_1a9aac3d0b9729da065a5bd9d4421c1f9b" kindref="member">custom</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="485"><highlight class="normal">}<sp/><ref refid="struct_a_e_s_c_t_r_d_r_b_g___params" kindref="compound">AESCTRDRBG_Params</ref>;</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_a_e_s_c_t_r_d_r_b_g___params" kindref="compound">AESCTRDRBG_Params</ref><sp/><ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1ad087c3f8f679279481615c1ddc3ffc60" kindref="member">AESCTRDRBG_defaultParams</ref>;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1ad53f705cf508c26c1a7434b2329bd494" kindref="member">AESCTRDRBG_init</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1a02e4a1a12968ee0122a7ed5eb4ea1eaa" kindref="member">AESCTRDRBG_Params_init</ref>(<ref refid="struct_a_e_s_c_t_r_d_r_b_g___params" kindref="compound">AESCTRDRBG_Params</ref><sp/>*<ref refid="_driver___init_8h_1af93f10d4f7393a01dff58c92f91d8cbc" kindref="member">params</ref>);</highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal">AESCTRDRBG_Handle<sp/><ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1ae44b1a3f0dc0f0e3211d165f40fa5236" kindref="member">AESCTRDRBG_open</ref>(uint_least8_t<sp/>index,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_a_e_s_c_t_r_d_r_b_g___params" kindref="compound">AESCTRDRBG_Params</ref><sp/>*<ref refid="_driver___init_8h_1af93f10d4f7393a01dff58c92f91d8cbc" kindref="member">params</ref>);</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1a2c44d7603a5fdf712e8ec0c0b2bd2e1c" kindref="member">AESCTRDRBG_close</ref>(AESCTRDRBG_Handle<sp/>handle);</highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal">int_fast16_t<sp/><ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1ae6ec8bac3354b04546b7027a7500b5e9" kindref="member">AESCTRDRBG_getBytes</ref>(AESCTRDRBG_Handle<sp/>handle,<sp/><ref refid="struct_crypto_key" kindref="compound">CryptoKey</ref><sp/>*randomBytes);</highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal">int_fast16_t<sp/><ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1aa7c032878ac9493ad06dc8a50cdca980" kindref="member">AESCTRDRBG_generateKey</ref>(AESCTRDRBG_Handle<sp/>handle,<sp/><ref refid="struct_crypto_key" kindref="compound">CryptoKey</ref><sp/>*randomKey);</highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal">int_fast16_t<sp/><ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1acc127938e866f022c6d77aaccdf62355" kindref="member">AESCTRDRBG_getRandomBytes</ref>(AESCTRDRBG_Handle<sp/>handle,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*randomBytes,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>randomBytesSize);</highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(DeviceFamily_PARENT<sp/>==<sp/>DeviceFamily_PARENT_CC27XX)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal">int_fast16_t<sp/><ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1af4c916b447159cd324d9588f035bad83" kindref="member">AESCTRDRBG_getRandomBytesFromHSM</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*randomBytes,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>randomBytesSize);</highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal">int_fast16_t<sp/><ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1a8fcbd42a2c2169f5874ab14057fef1a4" kindref="member">AESCTRDRBG_reseedHSM</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal">int_fast16_t<sp/><ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1a8633b53b7ce9befaf9b13fe24d533801" kindref="member">AESCTRDRBG_reseed</ref>(AESCTRDRBG_Handle<sp/>handle,</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*seed,</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*additionalData,</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>additionalDataLength);</highlight></codeline>
<codeline lineno="694"><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal">AESCTRDRBG_Handle<sp/><ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1ab88641d5cbbac09f1178e4266726ba43" kindref="member">AESCTRDRBG_construct</ref>(AESCTRDRBG_Config<sp/>*config,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_a_e_s_c_t_r_d_r_b_g___params" kindref="compound">AESCTRDRBG_Params</ref><sp/>*<ref refid="_driver___init_8h_1af93f10d4f7393a01dff58c92f91d8cbc" kindref="member">params</ref>);</highlight></codeline>
<codeline lineno="719"><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal">}</highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>ti_drivers_AESCTRDRBG__include<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="source/ti/drivers/AESCTRDRBG.h"/>
  </compounddef>
</doxygen>
