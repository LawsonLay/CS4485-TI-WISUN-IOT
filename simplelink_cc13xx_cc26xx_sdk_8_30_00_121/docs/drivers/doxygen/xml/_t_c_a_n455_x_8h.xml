<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="_t_c_a_n455_x_8h" kind="file" language="C++">
    <compoundname>TCAN455X.h</compoundname>
    <includes local="no">stdint.h</includes>
    <incdepgraph>
      <node id="1929">
        <label>stdint.h</label>
      </node>
      <node id="1928">
        <label>TCAN455X.h</label>
        <link refid="_t_c_a_n455_x_8h"/>
        <childnode refid="1929" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="struct_t_c_a_n455_x___config" prot="public">TCAN455X_Config</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="_t_c_a_n455_x_8h_1ae26ecc543404f2100b9e53162d8bc41b" prot="public" static="no">
        <name>TCAN455X_MRAM_SIZE</name>
        <initializer>2048U</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/can/TCAN455X.h" line="57" column="9" bodyfile="source/ti/drivers/can/TCAN455X.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_t_c_a_n455_x_8h_1aa14ccd6f8c295aa2122f3797f2297fbf" prot="public" static="no" mutable="no">
        <type>const <ref refid="struct_t_c_a_n455_x___config" kindref="compound">TCAN455X_Config</ref></type>
        <definition>const TCAN455X_Config TCAN455X_config</definition>
        <argsstring></argsstring>
        <name>TCAN455X_config</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/can/TCAN455X.h" line="75" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_t_c_a_n455_x_8h_1afc0329359d2fbb037179229ed0665b90" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t TCAN455X_getStatus</definition>
        <argsstring>(void)</argsstring>
        <name>TCAN455X_getStatus</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Reads the TCAN455X device status flags. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Device status flags.</para></simplesect>
<simplesect kind="see"><para><ref refid="_t_c_a_n455_x_8h_1a40be7a5f5cd148eea4bbc0fd91db1251" kindref="member">TCAN455X_clearStatus</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/can/TCAN455X.h" line="84" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_t_c_a_n455_x_8h_1a40be7a5f5cd148eea4bbc0fd91db1251" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TCAN455X_clearStatus</definition>
        <argsstring>(void)</argsstring>
        <name>TCAN455X_clearStatus</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Clears all TCAN455X device status flags. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="_t_c_a_n455_x_8h_1afc0329359d2fbb037179229ed0665b90" kindref="member">TCAN455X_getStatus</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/can/TCAN455X.h" line="91" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_t_c_a_n455_x_8h_1ab62dcc89608d5ed2b3f04f19c9e11cb4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TCAN455X_setMode</definition>
        <argsstring>(uint32_t mode)</argsstring>
        <name>TCAN455X_setMode</name>
        <param>
          <type>uint32_t</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
<para>Sets the TCAN455X operational mode. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mode</parametername>
</parameternamelist>
<parameterdescription>
<para>Operational mode to set: TCAN455X_MODE_OPMODE_SLEEP, TCAN455X_MODE_OPMODE_STANDBY, TCAN455X_MODE_OPMODE_NORMAL</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="_t_c_a_n455_x_8h_1a29e2398fd38e91b21ac6aee15aa0d903" kindref="member">TCAN455X_getMode</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/can/TCAN455X.h" line="103" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_t_c_a_n455_x_8h_1a29e2398fd38e91b21ac6aee15aa0d903" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t TCAN455X_getMode</definition>
        <argsstring>(void)</argsstring>
        <name>TCAN455X_getMode</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Reads the TCAN455X operational mode. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Operational mode: TCAN455X_MODE_OPMODE_SLEEP, TCAN455X_MODE_OPMODE_STANDBY, TCAN455X_MODE_OPMODE_NORMAL</para></simplesect>
<simplesect kind="see"><para><ref refid="_t_c_a_n455_x_8h_1ab62dcc89608d5ed2b3f04f19c9e11cb4" kindref="member">TCAN455X_setMode</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/can/TCAN455X.h" line="115" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_t_c_a_n455_x_8h_1abdf357631b2273272a17f1e6f7b2d839" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TCAN455X_disableSleepWakeErrorTimeout</definition>
        <argsstring>(void)</argsstring>
        <name>TCAN455X_disableSleepWakeErrorTimeout</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Disables the sleep wake error timeout. </para>        </briefdescription>
        <detaileddescription>
<para>The sleep wake error timeout is enabled by default and powers down the TCAN455X device within four minutes after power-on, reset, or coming out of sleep if the device is not configured by the host. This function can be used to disable the sleep wake error timeout and prevent the device from powering down. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/can/TCAN455X.h" line="127" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>TCAN455X Driver Interface. </para>    </briefdescription>
    <detaileddescription>
<para><hruler/>
</para><para><anchor id="_t_c_a_n455_x_8h_1ti_drivers_TCAN455X_Overview"/> <heading level="1">Overview</heading>
</para><para>The TCAN455X driver performs the hardware access to the TCAN455x CAN controller with integrated transceiver via SPI.</para><para><heading level="2">Message RAM Size</heading>
</para><para>The TCAN455X device has 2KB of message RAM. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2023,<sp/>Texas<sp/>Instruments<sp/>Incorporated</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>*<sp/><sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>*<sp/><sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>*<sp/><sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>Texas<sp/>Instruments<sp/>Incorporated<sp/>nor<sp/>the<sp/>names<sp/>of</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>its<sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>from<sp/>this<sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>OWNER<sp/>OR</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">/*!*****************************************************************************</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/><sp/>@file<sp/><sp/><sp/><sp/><sp/><sp/><sp/>TCAN455X.h</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*<sp/><sp/>@brief<sp/><sp/><sp/><sp/><sp/><sp/>TCAN455X<sp/>Driver<sp/>Interface</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/><sp/>@anchor<sp/>ti_drivers_TCAN455X_Overview</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*<sp/><sp/>#<sp/>Overview</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*<sp/><sp/>The<sp/>TCAN455X<sp/>driver<sp/>performs<sp/>the<sp/>hardware<sp/>access<sp/>to<sp/>the<sp/>TCAN455x<sp/>CAN</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*<sp/><sp/>controller<sp/>with<sp/>integrated<sp/>transceiver<sp/>via<sp/>SPI.</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/>*<sp/><sp/>##<sp/>Message<sp/>RAM<sp/>Size</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*<sp/><sp/>The<sp/>TCAN455X<sp/>device<sp/>has<sp/>2KB<sp/>of<sp/>message<sp/>RAM.</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*******************************************************************************</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ti_drivers_can_tcan455x__include</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ti_drivers_can_tcan455x__include</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="_t_c_a_n455_x_8h_1ae26ecc543404f2100b9e53162d8bc41b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TCAN455X_MRAM_SIZE<sp/>2048U</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="struct_t_c_a_n455_x___config" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal">{</highlight></codeline>
<codeline lineno="64" refid="struct_t_c_a_n455_x___config_1a6ac4f023571375ce74a1dcce9dba5ac7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_t_c_a_n455_x___config_1a6ac4f023571375ce74a1dcce9dba5ac7" kindref="member">clkFreqMHz</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="65" refid="struct_t_c_a_n455_x___config_1a5d212ab6e81059020ec73aa2269a12bc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_t_c_a_n455_x___config_1a5d212ab6e81059020ec73aa2269a12bc" kindref="member">spiBitRate</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="66" refid="struct_t_c_a_n455_x___config_1a2fa7bfdf5d9f7d2c55c492b27319a6ec" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="struct_t_c_a_n455_x___config_1a2fa7bfdf5d9f7d2c55c492b27319a6ec" kindref="member">taskStack</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="67" refid="struct_t_c_a_n455_x___config_1a0778bc54844aa88e4ca1044a87fabd0b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="struct_t_c_a_n455_x___config_1a0778bc54844aa88e4ca1044a87fabd0b" kindref="member">taskStackSize</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="68" refid="struct_t_c_a_n455_x___config_1ae8e6d7de33df72caefb8a555d0c32c4f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="struct_t_c_a_n455_x___config_1ae8e6d7de33df72caefb8a555d0c32c4f" kindref="member">taskPri</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="69" refid="struct_t_c_a_n455_x___config_1a60af046bfbd2ca9f56314b24b7829072" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint_least8_t<sp/><ref refid="struct_t_c_a_n455_x___config_1a60af046bfbd2ca9f56314b24b7829072" kindref="member">spiIndex</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="70" refid="struct_t_c_a_n455_x___config_1ab55399bc8c76735e7514174efacfe854" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint_least8_t<sp/><ref refid="struct_t_c_a_n455_x___config_1ab55399bc8c76735e7514174efacfe854" kindref="member">spiCSPin</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="71" refid="struct_t_c_a_n455_x___config_1aa03bb104b2b68fe41b18705d2d754370" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint_least8_t<sp/><ref refid="struct_t_c_a_n455_x___config_1aa03bb104b2b68fe41b18705d2d754370" kindref="member">interruptPin</ref>;<sp/></highlight></codeline>
<codeline lineno="72"><highlight class="normal">}<sp/><ref refid="struct_t_c_a_n455_x___config" kindref="compound">TCAN455X_Config</ref>;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Externs<sp/>from<sp/>ti_drivers_config.c<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_t_c_a_n455_x___config" kindref="compound">TCAN455X_Config</ref><sp/><ref refid="_t_c_a_n455_x_8h_1aa14ccd6f8c295aa2122f3797f2297fbf" kindref="member">TCAN455X_config</ref>;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal">uint32_t<sp/><ref refid="_t_c_a_n455_x_8h_1afc0329359d2fbb037179229ed0665b90" kindref="member">TCAN455X_getStatus</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_t_c_a_n455_x_8h_1a40be7a5f5cd148eea4bbc0fd91db1251" kindref="member">TCAN455X_clearStatus</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_t_c_a_n455_x_8h_1ab62dcc89608d5ed2b3f04f19c9e11cb4" kindref="member">TCAN455X_setMode</ref>(uint32_t<sp/>mode);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal">uint32_t<sp/><ref refid="_t_c_a_n455_x_8h_1a29e2398fd38e91b21ac6aee15aa0d903" kindref="member">TCAN455X_getMode</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_t_c_a_n455_x_8h_1abdf357631b2273272a17f1e6f7b2d839" kindref="member">TCAN455X_disableSleepWakeErrorTimeout</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal">}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>ti_drivers_can_tcan455x__include<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="source/ti/drivers/can/TCAN455X.h"/>
  </compounddef>
</doxygen>
