<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="_timestamp_p_8h" kind="file" language="C++">
    <compoundname>TimestampP.h</compoundname>
    <includes local="no">stdint.h</includes>
    <incdepgraph>
      <node id="2036">
        <label>stdint.h</label>
      </node>
      <node id="2035">
        <label>TimestampP.h</label>
        <link refid="_timestamp_p_8h"/>
        <childnode refid="2036" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="union_timestamp_p___format" prot="public">TimestampP_Format</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="_timestamp_p_8h_1acad0b6c6ee928496d66fc8419c5368ce" prot="public" static="no">
        <name>TimestampP_Exponent_Seconds</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/dpl/TimestampP.h" line="51" column="9" bodyfile="source/ti/drivers/dpl/TimestampP.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_timestamp_p_8h_1a170e896b7c2947c0ca32e6bf481526ab" prot="public" static="no">
        <name>TimestampP_Exponent_Miliseconds</name>
        <initializer>3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/dpl/TimestampP.h" line="52" column="9" bodyfile="source/ti/drivers/dpl/TimestampP.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_timestamp_p_8h_1ad7e4bed3888ed1f5b93364180b77d76c" prot="public" static="no">
        <name>TimestampP_Exponent_Microseconds</name>
        <initializer>6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/dpl/TimestampP.h" line="53" column="9" bodyfile="source/ti/drivers/dpl/TimestampP.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_timestamp_p_8h_1a58631f2332e2f50eb9b371f6c33b8f1d" prot="public" static="no">
        <name>TimestampP_Exponent_Nanoseconds</name>
        <initializer>9</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/dpl/TimestampP.h" line="54" column="9" bodyfile="source/ti/drivers/dpl/TimestampP.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="_timestamp_p_8h_1a0427254e1de3c19356d9aabb6896014c" prot="public" static="no">
        <type>union <ref refid="union_timestamp_p___format" kindref="compound">TimestampP_Format</ref></type>
        <definition>typedef union TimestampP_Format  TimestampP_Format</definition>
        <argsstring></argsstring>
        <name>TimestampP_Format</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/dpl/TimestampP.h" line="94" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_timestamp_p_8h_1a91df286eab505a501582a7575317f6ff" prot="public" static="no" mutable="no">
        <type>const <ref refid="union_timestamp_p___format" kindref="compound">TimestampP_Format</ref></type>
        <definition>const TimestampP_Format TimestampP_nativeFormat64</definition>
        <argsstring></argsstring>
        <name>TimestampP_nativeFormat64</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/dpl/TimestampP.h" line="98" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_timestamp_p_8h_1aead93f299036dfc0c975b8405e6e56bd" prot="public" static="no" mutable="no">
        <type>const <ref refid="union_timestamp_p___format" kindref="compound">TimestampP_Format</ref></type>
        <definition>const TimestampP_Format TimestampP_nativeFormat32</definition>
        <argsstring></argsstring>
        <name>TimestampP_nativeFormat32</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/dpl/TimestampP.h" line="99" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_timestamp_p_8h_1ada10240e40ef1fedf33c849805d1353d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t TimestampP_getNative32</definition>
        <argsstring>(void)</argsstring>
        <name>TimestampP_getNative32</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/dpl/TimestampP.h" line="96" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_timestamp_p_8h_1a8595bf3ec38d7530a3908b7eed8fb33e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t TimestampP_getNative64</definition>
        <argsstring>(void)</argsstring>
        <name>TimestampP_getNative64</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/dpl/TimestampP.h" line="97" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Timestamp module for the RTOS Porting Interface. </para>    </briefdescription>
    <detaileddescription>
<para>===========================================================================</para><para>Utility functions to get device timestamp <hruler/>
 </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2022-2023,<sp/>Texas<sp/>Instruments<sp/>Incorporated</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>*<sp/><sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>*<sp/><sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>*<sp/><sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>Texas<sp/>Instruments<sp/>Incorporated<sp/>nor<sp/>the<sp/>names<sp/>of</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>its<sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>from<sp/>this<sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>OWNER<sp/>OR</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*/</highlight></codeline>
<codeline lineno="42"><highlight class="preprocessor">#ifndef<sp/>ti_dpl_TimestampP__include</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ti_dpl_TimestampP__include</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="_timestamp_p_8h_1acad0b6c6ee928496d66fc8419c5368ce" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TimestampP_Exponent_Seconds<sp/><sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="_timestamp_p_8h_1a170e896b7c2947c0ca32e6bf481526ab" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TimestampP_Exponent_Miliseconds<sp/><sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="_timestamp_p_8h_1ad7e4bed3888ed1f5b93364180b77d76c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TimestampP_Exponent_Microseconds<sp/>6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="_timestamp_p_8h_1a58631f2332e2f50eb9b371f6c33b8f1d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TimestampP_Exponent_Nanoseconds<sp/><sp/>9</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>@brief<sp/>Specification<sp/>for<sp/>parsing<sp/>native<sp/>device<sp/>timestamp</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/>*<sp/>When<sp/>provided<sp/>with<sp/>a<sp/>native<sp/>timestamp,<sp/>however<sp/>many<sp/>bits,<sp/>a<sp/>peer<sp/>device</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/>*<sp/>may<sp/>perform<sp/>the<sp/>calculation:</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/>*<sp/>@code</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/>*<sp/><sp/><sp/>double<sp/>fractional<sp/>=<sp/>(ts<sp/>&amp;<sp/>((1<sp/>&lt;&lt;<sp/>fracBytes*8)<sp/>-<sp/>1))<sp/>/<sp/>2^fracBytes*8</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/>*<sp/><sp/><sp/>double<sp/>integral<sp/><sp/><sp/>=<sp/>(ts<sp/>&gt;&gt;<sp/>fracBytes*8)<sp/>&amp;<sp/>((1<sp/>&lt;&lt;<sp/>intBytes*8)<sp/>-<sp/>1)</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/>*<sp/><sp/><sp/>//<sp/>if<sp/>multiplier<sp/>&gt;<sp/>0:</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/>*<sp/><sp/><sp/>double<sp/>time<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><sp/><sp/>abs(multiplier)<sp/>*<sp/>(integral<sp/>+<sp/>fractional)<sp/>*<sp/>10^-exponent</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/>*<sp/><sp/><sp/>//<sp/>if<sp/>multiplier<sp/>&lt;<sp/>0:</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/>*<sp/><sp/><sp/>double<sp/>time<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1/abs(multiplier)<sp/>*<sp/>(integral<sp/>+<sp/>fractional)<sp/>*<sp/>10^-exponent</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/>*<sp/>@endcode</highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="70"><highlight class="comment"><sp/>*<sp/>For<sp/>example,<sp/>if<sp/>the<sp/>native<sp/>format<sp/>is<sp/>a<sp/>32-bit<sp/>wide<sp/>fixed<sp/>point<sp/>fractional</highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/>*<sp/>value<sp/>with<sp/>16<sp/>bits<sp/>for<sp/>seconds<sp/>and<sp/>subseconds,<sp/>the<sp/>setting<sp/>would<sp/>be:</highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/>*<sp/>fracBytes<sp/>=<sp/>2,<sp/>intBytes<sp/>=<sp/>2,<sp/>multiplier<sp/>=<sp/>1,<sp/>exponent<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/>*<sp/>On<sp/>the<sp/>other<sp/>hand<sp/>if<sp/>the<sp/>native<sp/>format<sp/>is<sp/>a<sp/>32-bit<sp/>wide<sp/>integral<sp/>value</highlight></codeline>
<codeline lineno="75"><highlight class="comment"><sp/>*<sp/>where<sp/>each<sp/>tick<sp/>is<sp/>worth<sp/>8<sp/>microseconds,<sp/>you<sp/>get<sp/>this:</highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/>*<sp/>fracBytes<sp/>=<sp/>0,<sp/>intBytes<sp/>=<sp/>4,<sp/>multiplier<sp/>=<sp/>8,<sp/>exponent<sp/>=<sp/>6</highlight></codeline>
<codeline lineno="77"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="78"><highlight class="comment"><sp/>*<sp/>If<sp/>the<sp/>native<sp/>format<sp/>is<sp/>a<sp/>48-bit<sp/>wide<sp/>32786<sp/>Hz<sp/>counter<sp/>where<sp/>each</highlight></codeline>
<codeline lineno="79"><highlight class="comment"><sp/>*<sp/>tick<sp/>is<sp/>worth<sp/>30.5175<sp/>etc<sp/>us,<sp/>the<sp/>setting<sp/>would<sp/>be:</highlight></codeline>
<codeline lineno="80"><highlight class="comment"><sp/>*<sp/>fracBytes<sp/>=<sp/>0,<sp/>intBytes<sp/>=<sp/>6,<sp/>multiplier<sp/>=<sp/>-32768,<sp/>exponent<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="81"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="82"><highlight class="comment"><sp/>*<sp/>It<sp/>is<sp/>expected<sp/>that<sp/>if<sp/>there<sp/>is<sp/>a<sp/>fractional<sp/>part,<sp/>it<sp/>is<sp/>in<sp/>the<sp/>LSB<sp/>end.</highlight></codeline>
<codeline lineno="83"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="union_timestamp_p___format" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal"><ref refid="union_timestamp_p___format" kindref="compound">TimestampP_Format</ref></highlight></codeline>
<codeline lineno="85"><highlight class="normal">{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="88" refid="union_timestamp_p___format_1a95601668bc3dc3ca97eaa6bbe2788487" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="union_timestamp_p___format_1a95601668bc3dc3ca97eaa6bbe2788487" kindref="member">fracBytes</ref>:4;<sp/><sp/></highlight><highlight class="comment">//&lt;!<sp/>Octets<sp/>(LSB)<sp/>used<sp/>for<sp/>fractional<sp/>part<sp/>(if<sp/>any)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="union_timestamp_p___format_1ae801327086ad12843c9c56ea0412165c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="union_timestamp_p___format_1ae801327086ad12843c9c56ea0412165c" kindref="member">intBytes</ref>:4;<sp/><sp/><sp/></highlight><highlight class="comment">//&lt;!<sp/>Octets<sp/>(MSB)<sp/>used<sp/>for<sp/>integer<sp/>part</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="union_timestamp_p___format_1a09d4953a440acc99f7dab5610aed1a5e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="union_timestamp_p___format_1a09d4953a440acc99f7dab5610aed1a5e" kindref="member">exponent</ref>:8;<sp/><sp/><sp/></highlight><highlight class="comment">//&lt;!<sp/>How<sp/>much<sp/>to<sp/>scale<sp/>native<sp/>time<sp/>to<sp/>get<sp/>seconds.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="union_timestamp_p___format_1a7d0b0e28f123ea8f501a76d5845681cf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/><ref refid="union_timestamp_p___format_1a7d0b0e28f123ea8f501a76d5845681cf" kindref="member">multiplier</ref>:16;<sp/></highlight><highlight class="comment">//&lt;!<sp/>Signed<sp/>16-bit<sp/>multiplier,<sp/>eg<sp/>8<sp/>if<sp/>one<sp/>tick<sp/>is<sp/>8<sp/>time<sp/>units</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><ref refid="union_timestamp_p___format_1aa0b9030de4f5f96ddf4fbdbe88998124" kindref="member">format</ref>;</highlight></codeline>
<codeline lineno="93" refid="union_timestamp_p___format_1ac2651c6f7de64dea50f24ee40959a407" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="union_timestamp_p___format_1ac2651c6f7de64dea50f24ee40959a407" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="94"><highlight class="normal">}<sp/><ref refid="_timestamp_p_8h_1a0427254e1de3c19356d9aabb6896014c" kindref="member">TimestampP_Format</ref>;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="_timestamp_p_8h_1ada10240e40ef1fedf33c849805d1353d" kindref="member">TimestampP_getNative32</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>uint64_t<sp/><ref refid="_timestamp_p_8h_1a8595bf3ec38d7530a3908b7eed8fb33e" kindref="member">TimestampP_getNative64</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="union_timestamp_p___format" kindref="compound">TimestampP_Format</ref><sp/><ref refid="_timestamp_p_8h_1a91df286eab505a501582a7575317f6ff" kindref="member">TimestampP_nativeFormat64</ref>;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="union_timestamp_p___format" kindref="compound">TimestampP_Format</ref><sp/><ref refid="_timestamp_p_8h_1aead93f299036dfc0c975b8405e6e56bd" kindref="member">TimestampP_nativeFormat32</ref>;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal">}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>ti_dpl_TimestampP__include<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="source/ti/drivers/dpl/TimestampP.h"/>
  </compounddef>
</doxygen>
