<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="_m_c_a_n_8h" kind="file" language="C++">
    <compoundname>MCAN.h</compoundname>
    <includes local="no">stdint.h</includes>
    <includes local="no">stddef.h</includes>
    <includes refid="_m_c_a_n__reg_8h" local="no">third_party/mcan/inc/MCAN_reg.h</includes>
    <includedby refid="_c_a_n_m_c_a_n_8h" local="no">CANMCAN.h</includedby>
    <includedby refid="_c_a_n_8h" local="no">CAN.h</includedby>
    <incdepgraph>
      <node id="1414">
        <label>stdint.h</label>
      </node>
      <node id="1415">
        <label>stddef.h</label>
      </node>
      <node id="1416">
        <label>third_party/mcan/inc/MCAN_reg.h</label>
        <link refid="_m_c_a_n__reg_8h"/>
      </node>
      <node id="1413">
        <label>MCAN.h</label>
        <link refid="_m_c_a_n_8h"/>
        <childnode refid="1414" relation="include">
        </childnode>
        <childnode refid="1415" relation="include">
        </childnode>
        <childnode refid="1416" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1418">
        <label>CANMCAN.h</label>
        <link refid="_c_a_n_m_c_a_n_8h"/>
      </node>
      <node id="1419">
        <label>CAN.h</label>
        <link refid="_c_a_n_8h"/>
        <childnode refid="1418" relation="include">
        </childnode>
      </node>
      <node id="1417">
        <label>MCAN.h</label>
        <link refid="_m_c_a_n_8h"/>
        <childnode refid="1418" relation="include">
        </childnode>
        <childnode refid="1419" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_m_c_a_n___t_d_c_config" prot="public">MCAN_TDCConfig</innerclass>
    <innerclass refid="struct_m_c_a_n___bit_timing_params" prot="public">MCAN_BitTimingParams</innerclass>
    <innerclass refid="struct_m_c_a_n___global_filt_config" prot="public">MCAN_GlobalFiltConfig</innerclass>
    <innerclass refid="struct_m_c_a_n___init_params" prot="public">MCAN_InitParams</innerclass>
    <innerclass refid="struct_m_c_a_n___config_params" prot="public">MCAN_ConfigParams</innerclass>
    <innerclass refid="struct_m_c_a_n___err_cnt_status" prot="public">MCAN_ErrCntStatus</innerclass>
    <innerclass refid="struct_m_c_a_n___protocol_status" prot="public">MCAN_ProtocolStatus</innerclass>
    <innerclass refid="struct_m_c_a_n___msg_ram_config" prot="public">MCAN_MsgRamConfig</innerclass>
    <innerclass refid="struct_m_c_a_n___high_priority_msg_info" prot="public">MCAN_HighPriorityMsgInfo</innerclass>
    <innerclass refid="struct_m_c_a_n___rx_new_data_status" prot="public">MCAN_RxNewDataStatus</innerclass>
    <innerclass refid="struct_m_c_a_n___rx_fifo_status" prot="public">MCAN_RxFifoStatus</innerclass>
    <innerclass refid="struct_m_c_a_n___tx_fifo_q_status" prot="public">MCAN_TxFifoQStatus</innerclass>
    <innerclass refid="struct_m_c_a_n___tx_event_fifo_status" prot="public">MCAN_TxEventFifoStatus</innerclass>
    <innerclass refid="struct_m_c_a_n___tx_buf_element" prot="public">MCAN_TxBufElement</innerclass>
    <innerclass refid="struct_m_c_a_n___tx_buf_element_no_cpy" prot="public">MCAN_TxBufElementNoCpy</innerclass>
    <innerclass refid="struct_m_c_a_n___rx_buf_element" prot="public">MCAN_RxBufElement</innerclass>
    <innerclass refid="struct_m_c_a_n___rx_buf_element_no_cpy" prot="public">MCAN_RxBufElementNoCpy</innerclass>
    <innerclass refid="struct_m_c_a_n___tx_event_fifo_element" prot="public">MCAN_TxEventFifoElement</innerclass>
    <innerclass refid="struct_m_c_a_n___std_msg_i_d_filter_element" prot="public">MCAN_StdMsgIDFilterElement</innerclass>
    <innerclass refid="struct_m_c_a_n___ext_msg_i_d_filter_element" prot="public">MCAN_ExtMsgIDFilterElement</innerclass>
      <sectiondef kind="user-defined">
      <header>MCAN Interrupt Line Number</header>
      <description><para><anchor id="_m_c_a_n_8h_1MCAN_IntLineNum"/></para></description>
      <memberdef kind="define" id="_m_c_a_n_8h_1a326f63e0838e0aa62dbc0f8b13801b83" prot="public" static="no">
        <name>MCAN_INT_LINE_NUM_0</name>
        <initializer>(0U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>MCAN interrupt line 0 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="106" column="9" bodyfile="source/third_party/mcan/MCAN.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_m_c_a_n_8h_1a34435b5877c4c592d164038604f6d595" prot="public" static="no">
        <name>MCAN_INT_LINE_NUM_1</name>
        <initializer>(1U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>MCAN interrupt line 1 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="108" column="9" bodyfile="source/third_party/mcan/MCAN.h" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_m_c_a_n_8h_1afd1d21ecd39770c886bbf26884ac9770" prot="public" static="no">
        <type>uint32_t</type>
        <definition>typedef uint32_t MCAN_IntLineNum</definition>
        <argsstring></argsstring>
        <name>MCAN_IntLineNum</name>
        <briefdescription>
<para>Enum to select the MCAN interrupt lines. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="104" column="1" bodyfile="source/third_party/mcan/MCAN.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>MCAN Operation Mode</header>
      <description><para><anchor id="_m_c_a_n_8h_1MCAN_OperationMode"/></para></description>
      <memberdef kind="define" id="_m_c_a_n_8h_1a12156c24e603e81fd27589f84ff7a426" prot="public" static="no">
        <name>MCAN_OPERATION_MODE_NORMAL</name>
        <initializer>(0U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>MCAN normal mode </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="122" column="9" bodyfile="source/third_party/mcan/MCAN.h" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_m_c_a_n_8h_1aac794ffff553d58879bbb5c628d926cd" prot="public" static="no">
        <name>MCAN_OPERATION_MODE_SW_INIT</name>
        <initializer>(1U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>MCAN SW initialization mode </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="124" column="9" bodyfile="source/third_party/mcan/MCAN.h" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_m_c_a_n_8h_1a167f2303711b784f8665db68774f8342" prot="public" static="no">
        <type>uint32_t</type>
        <definition>typedef uint32_t MCAN_OperationMode</definition>
        <argsstring></argsstring>
        <name>MCAN_OperationMode</name>
        <briefdescription>
<para>Enum to represent the MCAN mode of operation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="120" column="1" bodyfile="source/third_party/mcan/MCAN.h" bodystart="120" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>MCAN Mem type</header>
      <description><para><anchor id="_m_c_a_n_8h_1MCAN_MemType"/></para></description>
      <memberdef kind="define" id="_m_c_a_n_8h_1a403b88d0e7331b00221ca4ec3d702166" prot="public" static="no">
        <name>MCAN_MEM_TYPE_BUF</name>
        <initializer>(0U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>MCAN Msg RAM buffers </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="138" column="9" bodyfile="source/third_party/mcan/MCAN.h" bodystart="138" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_m_c_a_n_8h_1a549168c608de75c30d99cb5f3df9b6f3" prot="public" static="no">
        <name>MCAN_MEM_TYPE_FIFO</name>
        <initializer>(1U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>MCAN Msg RAM FIFO/Queue </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="140" column="9" bodyfile="source/third_party/mcan/MCAN.h" bodystart="140" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_m_c_a_n_8h_1ae4a66b82270bb3b4f5e6f1aa111918bc" prot="public" static="no">
        <type>uint32_t</type>
        <definition>typedef uint32_t MCAN_MemType</definition>
        <argsstring></argsstring>
        <name>MCAN_MemType</name>
        <briefdescription>
<para>Enum to represent the MCAN Message RAM type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="136" column="1" bodyfile="source/third_party/mcan/MCAN.h" bodystart="136" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>MCAN Rx FIFO Number</header>
      <description><para><anchor id="_m_c_a_n_8h_1MCAN_RxFifoNum"/></para></description>
      <memberdef kind="define" id="_m_c_a_n_8h_1afc4177091062ae4ec7d2102bee7dcf3a" prot="public" static="no">
        <name>MCAN_RX_FIFO_NUM_0</name>
        <initializer>(0U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>MCAN Rx FIFO 0 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="154" column="9" bodyfile="source/third_party/mcan/MCAN.h" bodystart="154" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_m_c_a_n_8h_1a0adb5dbc84cfa04084887ae8ca0efff0" prot="public" static="no">
        <name>MCAN_RX_FIFO_NUM_1</name>
        <initializer>(1U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>MCAN Rx FIFO 1 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="156" column="9" bodyfile="source/third_party/mcan/MCAN.h" bodystart="156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_m_c_a_n_8h_1ad2e96cad4fa1837aef840d33f9964e03" prot="public" static="no">
        <type>uint32_t</type>
        <definition>typedef uint32_t MCAN_RxFifoNum</definition>
        <argsstring></argsstring>
        <name>MCAN_RxFifoNum</name>
        <briefdescription>
<para>Enum to represent the MCAN Rx FIFO number. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="152" column="1" bodyfile="source/third_party/mcan/MCAN.h" bodystart="152" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>MCAN Element Size</header>
      <description><para><anchor id="_m_c_a_n_8h_1MCAN_ElemSize"/></para></description>
      <memberdef kind="define" id="_m_c_a_n_8h_1a3b0cab236b10f3a656b46c343395e52f" prot="public" static="no">
        <name>MCAN_ELEM_SIZE_8BYTES</name>
        <initializer>(0U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>8 byte data field </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="170" column="9" bodyfile="source/third_party/mcan/MCAN.h" bodystart="170" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_m_c_a_n_8h_1a0f9044ae10f8b135a2b2a6a76966e843" prot="public" static="no">
        <name>MCAN_ELEM_SIZE_12BYTES</name>
        <initializer>(1U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>12 byte data field </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="172" column="9" bodyfile="source/third_party/mcan/MCAN.h" bodystart="172" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_m_c_a_n_8h_1a168e9348333d2549c5ec302d175047bd" prot="public" static="no">
        <name>MCAN_ELEM_SIZE_16BYTES</name>
        <initializer>(2U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>16 byte data field </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="174" column="9" bodyfile="source/third_party/mcan/MCAN.h" bodystart="174" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_m_c_a_n_8h_1ab85db9c929f8301025cc6bf893a15346" prot="public" static="no">
        <name>MCAN_ELEM_SIZE_20BYTES</name>
        <initializer>(3U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>20 byte data field </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="176" column="9" bodyfile="source/third_party/mcan/MCAN.h" bodystart="176" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_m_c_a_n_8h_1afa44d06c90102fc5b8b47b920961dcdb" prot="public" static="no">
        <name>MCAN_ELEM_SIZE_24BYTES</name>
        <initializer>(4U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>24 byte data field </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="178" column="9" bodyfile="source/third_party/mcan/MCAN.h" bodystart="178" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_m_c_a_n_8h_1ac51e7858760d81fad6c3aea552c9065a" prot="public" static="no">
        <name>MCAN_ELEM_SIZE_32BYTES</name>
        <initializer>(5U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>32 byte data field </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="180" column="9" bodyfile="source/third_party/mcan/MCAN.h" bodystart="180" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_m_c_a_n_8h_1a14e027d61be660abc48a70dd0a1fdfa0" prot="public" static="no">
        <name>MCAN_ELEM_SIZE_48BYTES</name>
        <initializer>(6U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>48 byte data field </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="182" column="9" bodyfile="source/third_party/mcan/MCAN.h" bodystart="182" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_m_c_a_n_8h_1a4fbec31aaf38cae443247e4134ca6e7b" prot="public" static="no">
        <name>MCAN_ELEM_SIZE_64BYTES</name>
        <initializer>(7U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>64 byte data field </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="184" column="9" bodyfile="source/third_party/mcan/MCAN.h" bodystart="184" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_m_c_a_n_8h_1a5febd5930583071b281cd62f7999123c" prot="public" static="no">
        <type>uint32_t</type>
        <definition>typedef uint32_t MCAN_ElemSize</definition>
        <argsstring></argsstring>
        <name>MCAN_ElemSize</name>
        <briefdescription>
<para>Enum to represent FIFO/Buffer element Size. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="168" column="1" bodyfile="source/third_party/mcan/MCAN.h" bodystart="168" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>MCAN Timeout select</header>
      <description><para><anchor id="_m_c_a_n_8h_1MCAN_TimeOutSelect"/></para></description>
      <memberdef kind="define" id="_m_c_a_n_8h_1a21bcd8223f6104f45863ab623191216f" prot="public" static="no">
        <name>MCAN_TIMEOUT_SELECT_CONT</name>
        <initializer>(0U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Continuous operation Mode </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="198" column="9" bodyfile="source/third_party/mcan/MCAN.h" bodystart="198" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_m_c_a_n_8h_1ae24164b2ad04df8cc6995e49f0d63ca4" prot="public" static="no">
        <name>MCAN_TIMEOUT_SELECT_TX_EVENT_FIFO</name>
        <initializer>(1U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Timeout controlled by Tx Event FIFO </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="200" column="9" bodyfile="source/third_party/mcan/MCAN.h" bodystart="200" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_m_c_a_n_8h_1a0d4a988f2968b7111a8733dcf52d5a12" prot="public" static="no">
        <name>MCAN_TIMEOUT_SELECT_RX_FIFO0</name>
        <initializer>(2U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Timeout controlled by Rx FIFO 0 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="202" column="9" bodyfile="source/third_party/mcan/MCAN.h" bodystart="202" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_m_c_a_n_8h_1ade550cdc03cb23c6b7008400e90509fa" prot="public" static="no">
        <name>MCAN_TIMEOUT_SELECT_RX_FIFO1</name>
        <initializer>(3U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Timeout controlled by Rx FIFO 1 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="204" column="9" bodyfile="source/third_party/mcan/MCAN.h" bodystart="204" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_m_c_a_n_8h_1a7530a147909f8ec15ca493a656f662c4" prot="public" static="no">
        <type>uint32_t</type>
        <definition>typedef uint32_t MCAN_TimeOutSelect</definition>
        <argsstring></argsstring>
        <name>MCAN_TimeOutSelect</name>
        <briefdescription>
<para>Enum to represent the MCAN time-out counter configuration. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="196" column="1" bodyfile="source/third_party/mcan/MCAN.h" bodystart="196" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>MCAN Interrupt Source</header>
      <description><para><anchor id="_m_c_a_n_8h_1MCAN_IntSrc"/></para></description>
      <memberdef kind="define" id="_m_c_a_n_8h_1a13f45e6d4aab566194dedceeea4fb95f" prot="public" static="no">
        <name>MCAN_INT_SRC_RX_FIFO0_NEW_MSG</name>
        <initializer>(<ref refid="_m_c_a_n__reg_8h_1a3830dacba7a26cd6ad0ebe6efd12f679" kindref="member">MCAN_IR_RF0N_MASK</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Rx FIFO 0 New Message interrupt </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="218" column="9" bodyfile="source/third_party/mcan/MCAN.h" bodystart="218" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_m_c_a_n_8h_1a97ea215fd8f648562ed235a603ccb212" prot="public" static="no">
        <name>MCAN_INT_SRC_RX_FIFO0_WATERMARK</name>
        <initializer>(<ref refid="_m_c_a_n__reg_8h_1a039ead0598023baf5ce2dbd37b61f611" kindref="member">MCAN_IR_RF0W_MASK</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Rx FIFO 0 Watermark Reached interrupt </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="220" column="9" bodyfile="source/third_party/mcan/MCAN.h" bodystart="220" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_m_c_a_n_8h_1aa3bffcf2a55cebba3477427a3608b79d" prot="public" static="no">
        <name>MCAN_INT_SRC_RX_FIFO0_FULL</name>
        <initializer>(<ref refid="_m_c_a_n__reg_8h_1a5963cd82f13c46a94680cc65484ee9ea" kindref="member">MCAN_IR_RF0F_MASK</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Rx FIFO 0 Full interrupt </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="222" column="9" bodyfile="source/third_party/mcan/MCAN.h" bodystart="222" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_m_c_a_n_8h_1a78b562dba63fd6d1a941ae791d26d539" prot="public" static="no">
        <name>MCAN_INT_SRC_RX_FIFO0_MSG_LOST</name>
        <initializer>(<ref refid="_m_c_a_n__reg_8h_1ad763b7c38db3153f1a4dca1d60254791" kindref="member">MCAN_IR_RF0L_MASK</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Rx FIFO 0 Message Lost interrupt </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="224" column="9" bodyfile="source/third_party/mcan/MCAN.h" bodystart="224" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_m_c_a_n_8h_1afcce0925180c36710c36f913688b785f" prot="public" static="no">
        <name>MCAN_INT_SRC_RX_FIFO1_NEW_MSG</name>
        <initializer>(<ref refid="_m_c_a_n__reg_8h_1a402fbe5b855220ade1e379096d61113d" kindref="member">MCAN_IR_RF1N_MASK</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Rx FIFO 1 New Message interrupt </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="226" column="9" bodyfile="source/third_party/mcan/MCAN.h" bodystart="226" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_m_c_a_n_8h_1a28f37f11c1ec2c0ae78969478ebdf416" prot="public" static="no">
        <name>MCAN_INT_SRC_RX_FIFO1_WATERMARK</name>
        <initializer>(<ref refid="_m_c_a_n__reg_8h_1acf159c74c5b715e042a86a40fc719ed5" kindref="member">MCAN_IR_RF1W_MASK</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Rx FIFO 1 Watermark Reached interrupt </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="228" column="9" bodyfile="source/third_party/mcan/MCAN.h" bodystart="228" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_m_c_a_n_8h_1a9a76f846fac373c5ff48c8161e0ff2d6" prot="public" static="no">
        <name>MCAN_INT_SRC_RX_FIFO1_FULL</name>
        <initializer>(<ref refid="_m_c_a_n__reg_8h_1a872a5feabaa32ce21a5aa8d14e0c963c" kindref="member">MCAN_IR_RF1F_MASK</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Rx FIFO 1 Full interrupt </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="230" column="9" bodyfile="source/third_party/mcan/MCAN.h" bodystart="230" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_m_c_a_n_8h_1ab6f661973933e78973a8f9925973797d" prot="public" static="no">
        <name>MCAN_INT_SRC_RX_FIFO1_MSG_LOST</name>
        <initializer>(<ref refid="_m_c_a_n__reg_8h_1adadd8859153cfe6e0013b4bd993ef988" kindref="member">MCAN_IR_RF1L_MASK</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Rx FIFO 1 Message Lost interrupt </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="232" column="9" bodyfile="source/third_party/mcan/MCAN.h" bodystart="232" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_m_c_a_n_8h_1a2d5c5312d8ae61975439bc70e2be5229" prot="public" static="no">
        <name>MCAN_INT_SRC_HIGH_PRIO_MSG</name>
        <initializer>(<ref refid="_m_c_a_n__reg_8h_1a187b9007665e80f5b2a72ebc73e805e7" kindref="member">MCAN_IR_HPM_MASK</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>High Priority Message interrupt </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="234" column="9" bodyfile="source/third_party/mcan/MCAN.h" bodystart="234" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_m_c_a_n_8h_1a78bbb7d9cd8a4695f31803b0d26435f4" prot="public" static="no">
        <name>MCAN_INT_SRC_TRANS_COMPLETE</name>
        <initializer>(<ref refid="_m_c_a_n__reg_8h_1a6ad8c09f2d474d90e85af1d14f8e7515" kindref="member">MCAN_IR_TC_MASK</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Transmission Completed interrupt </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="236" column="9" bodyfile="source/third_party/mcan/MCAN.h" bodystart="236" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_m_c_a_n_8h_1a19a532f80733d87f5851475ee997b30e" prot="public" static="no">
        <name>MCAN_INT_SRC_TRANS_CANCEL_FINISH</name>
        <initializer>(<ref refid="_m_c_a_n__reg_8h_1a528e0c9f9d20c8893ba9a0850abd2c8a" kindref="member">MCAN_IR_TCF_MASK</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Transmission Cancellation Finished interrupt </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="238" column="9" bodyfile="source/third_party/mcan/MCAN.h" bodystart="238" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_m_c_a_n_8h_1ad36d8f9f96ba69862d01d344b0ffb21d" prot="public" static="no">
        <name>MCAN_INT_SRC_TX_FIFO_EMPTY</name>
        <initializer>(<ref refid="_m_c_a_n__reg_8h_1a99e74c78ef53d8ab9b222d9bbee6edef" kindref="member">MCAN_IR_TFE_MASK</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Tx FIFO Empty interrupt </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="240" column="9" bodyfile="source/third_party/mcan/MCAN.h" bodystart="240" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_m_c_a_n_8h_1a4ba9de847731dda13952d7353477799e" prot="public" static="no">
        <name>MCAN_INT_SRC_TX_EVT_FIFO_NEW_ENTRY</name>
        <initializer>(<ref refid="_m_c_a_n__reg_8h_1a8073e7e74c6b8be27c511d8448c354ed" kindref="member">MCAN_IR_TEFN_MASK</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Tx Event FIFO New Entry interrupt </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="242" column="9" bodyfile="source/third_party/mcan/MCAN.h" bodystart="242" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_m_c_a_n_8h_1a36aa486dd57be4f1f880956816db4878" prot="public" static="no">
        <name>MCAN_INT_SRC_TX_EVT_FIFO_WATERMARK</name>
        <initializer>(<ref refid="_m_c_a_n__reg_8h_1ad63578ea89622272e03a0fbf7c555ca9" kindref="member">MCAN_IR_TEFW_MASK</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Tx Event FIFO Watermark Reached interrupt </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="244" column="9" bodyfile="source/third_party/mcan/MCAN.h" bodystart="244" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_m_c_a_n_8h_1afcca3f61d70cc9345888cf2c73e9b921" prot="public" static="no">
        <name>MCAN_INT_SRC_TX_EVT_FIFO_FULL</name>
        <initializer>(<ref refid="_m_c_a_n__reg_8h_1afdfa6cd16e9b96d36f03227efac236f7" kindref="member">MCAN_IR_TEFF_MASK</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Tx Event FIFO Full interrupt </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="246" column="9" bodyfile="source/third_party/mcan/MCAN.h" bodystart="246" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_m_c_a_n_8h_1a23251a1550d3def0e78d8593cd286760" prot="public" static="no">
        <name>MCAN_INT_SRC_TX_EVT_FIFO_ELEM_LOST</name>
        <initializer>(<ref refid="_m_c_a_n__reg_8h_1a642b06731edc5b3baad835e55f749a95" kindref="member">MCAN_IR_TEFL_MASK</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Tx Event FIFO Element Lost interrupt </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="248" column="9" bodyfile="source/third_party/mcan/MCAN.h" bodystart="248" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_m_c_a_n_8h_1a1c0e8e3746016b07d3d0246918a810f2" prot="public" static="no">
        <name>MCAN_INT_SRC_TIMESTAMP_WRAPAROUND</name>
        <initializer>(<ref refid="_m_c_a_n__reg_8h_1a255cc687fcda31d0c986e4275a450f36" kindref="member">MCAN_IR_TSW_MASK</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Timestamp Wraparound interrupt </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="250" column="9" bodyfile="source/third_party/mcan/MCAN.h" bodystart="250" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_m_c_a_n_8h_1ad3debdbbe67bd1de1cf0205a0bb30405" prot="public" static="no">
        <name>MCAN_INT_SRC_MSG_RAM_ACCESS_FAILURE</name>
        <initializer>(<ref refid="_m_c_a_n__reg_8h_1a50510ed21bf04a130bc9be76dabcc391" kindref="member">MCAN_IR_MRAF_MASK</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Message RAM Access Failure interrupt </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="252" column="9" bodyfile="source/third_party/mcan/MCAN.h" bodystart="252" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_m_c_a_n_8h_1a61db1849cffa42549c5d80c41ebf9192" prot="public" static="no">
        <name>MCAN_INT_SRC_TIMEOUT</name>
        <initializer>(<ref refid="_m_c_a_n__reg_8h_1ad7e8fde257696dd3267e81d8d596c8e6" kindref="member">MCAN_IR_TOO_MASK</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Timeout Occurred interrupt </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="254" column="9" bodyfile="source/third_party/mcan/MCAN.h" bodystart="254" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_m_c_a_n_8h_1adc579ec34e34726cbd86bd031a92c9d4" prot="public" static="no">
        <name>MCAN_INT_SRC_DEDICATED_RX_BUFF_MSG</name>
        <initializer>(<ref refid="_m_c_a_n__reg_8h_1a84f731c762415990e18f3a81b30cec54" kindref="member">MCAN_IR_DRX_MASK</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Message stored to Dedicated Rx Buffer interrupt </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="256" column="9" bodyfile="source/third_party/mcan/MCAN.h" bodystart="256" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_m_c_a_n_8h_1a3315591b5e8c2ba54aa2e7b9e95f7cec" prot="public" static="no">
        <name>MCAN_INT_SRC_BIT_ERR_CORRECTED</name>
        <initializer>(<ref refid="_m_c_a_n__reg_8h_1a3bb6acfcaf9567802336f392e5e8efed" kindref="member">MCAN_IR_BEC_MASK</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Bit Error Corrected interrupt </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="258" column="9" bodyfile="source/third_party/mcan/MCAN.h" bodystart="258" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_m_c_a_n_8h_1a183f7c50f3f50c2c6681a71b9737cbe6" prot="public" static="no">
        <name>MCAN_INT_SRC_BIT_ERR_UNCORRECTED</name>
        <initializer>(<ref refid="_m_c_a_n__reg_8h_1a58d504256c02df6d9608363be6c32021" kindref="member">MCAN_IR_BEU_MASK</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Bit Error Uncorrected interrupt </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="260" column="9" bodyfile="source/third_party/mcan/MCAN.h" bodystart="260" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_m_c_a_n_8h_1a207495e53dab29491e9ce2bddf2be80d" prot="public" static="no">
        <name>MCAN_INT_SRC_ERR_LOG_OVERFLOW</name>
        <initializer>(<ref refid="_m_c_a_n__reg_8h_1aef807c74f758ce1a48dfefa2225e5cea" kindref="member">MCAN_IR_ELO_MASK</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Error Logging Overflow interrupt </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="262" column="9" bodyfile="source/third_party/mcan/MCAN.h" bodystart="262" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_m_c_a_n_8h_1ae0c935b78099724b5bd656d261bc1d66" prot="public" static="no">
        <name>MCAN_INT_SRC_ERR_PASSIVE</name>
        <initializer>(<ref refid="_m_c_a_n__reg_8h_1aad48b5cb4e20bcf814f423ba73e1f941" kindref="member">MCAN_IR_EP_MASK</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Error Passive interrupt </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="264" column="9" bodyfile="source/third_party/mcan/MCAN.h" bodystart="264" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_m_c_a_n_8h_1a658c6bb1cc22e3e01aa4f6cfc7095bf3" prot="public" static="no">
        <name>MCAN_INT_SRC_WARNING_STATUS</name>
        <initializer>(<ref refid="_m_c_a_n__reg_8h_1a1e9e4c5d3a967dd0e47e41a90a5254c0" kindref="member">MCAN_IR_EW_MASK</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Warning Status interrupt </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="266" column="9" bodyfile="source/third_party/mcan/MCAN.h" bodystart="266" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_m_c_a_n_8h_1a91881fed729a4bd7b4b454590e2e54c4" prot="public" static="no">
        <name>MCAN_INT_SRC_BUS_OFF_STATUS</name>
        <initializer>(<ref refid="_m_c_a_n__reg_8h_1a3900911f215dbf20442e76793f008209" kindref="member">MCAN_IR_BO_MASK</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Bus_Off Status interrupt </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="268" column="9" bodyfile="source/third_party/mcan/MCAN.h" bodystart="268" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_m_c_a_n_8h_1aa4fd794c1b1a0a7d979c1a4be2abef47" prot="public" static="no">
        <name>MCAN_INT_SRC_WATCHDOG</name>
        <initializer>(<ref refid="_m_c_a_n__reg_8h_1afec404e15c87de530becb41ab0563241" kindref="member">MCAN_IR_WDI_MASK</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Watchdog Interrupt interrupt </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="270" column="9" bodyfile="source/third_party/mcan/MCAN.h" bodystart="270" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_m_c_a_n_8h_1a776923f6431352565663cf531e5bcf0c" prot="public" static="no">
        <name>MCAN_INT_SRC_PROTOCOL_ERR_ARB</name>
        <initializer>(<ref refid="_m_c_a_n__reg_8h_1aafd8ccd1c58289d09930c1f6adbfc282" kindref="member">MCAN_IR_PEA_MASK</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Protocol Error in Arbitration Phase interrupt </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="272" column="9" bodyfile="source/third_party/mcan/MCAN.h" bodystart="272" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_m_c_a_n_8h_1aefa6d163557c08244d9d4fdb8fea9be3" prot="public" static="no">
        <name>MCAN_INT_SRC_PROTOCOL_ERR_DATA</name>
        <initializer>(<ref refid="_m_c_a_n__reg_8h_1a07e8095cf8a102256a540463e408b083" kindref="member">MCAN_IR_PED_MASK</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Protocol Error in Data Phase interrupt </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="274" column="9" bodyfile="source/third_party/mcan/MCAN.h" bodystart="274" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_m_c_a_n_8h_1a7dd4d761d0539198bbe768dd20172242" prot="public" static="no">
        <name>MCAN_INT_SRC_RES_ADDR_ACCESS</name>
        <initializer>(<ref refid="_m_c_a_n__reg_8h_1a3d197de997a03d213bca243c2bd64da5" kindref="member">MCAN_IR_ARA_MASK</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Access to Reserved Address interrupt </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="276" column="9" bodyfile="source/third_party/mcan/MCAN.h" bodystart="276" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_m_c_a_n_8h_1ab73d229600459ca4565a06a038f58bf1" prot="public" static="no">
        <type>uint32_t</type>
        <definition>typedef uint32_t MCAN_IntSrc</definition>
        <argsstring></argsstring>
        <name>MCAN_IntSrc</name>
        <briefdescription>
<para>Enum for MCAN interrupts. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="216" column="1" bodyfile="source/third_party/mcan/MCAN.h" bodystart="216" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>MCAN Loopback Mode</header>
      <description><para><anchor id="_m_c_a_n_8h_1MCAN_LpbkMode"/></para></description>
      <memberdef kind="define" id="_m_c_a_n_8h_1af05c895aaad161cb819d201baa485fc6" prot="public" static="no">
        <name>MCAN_LPBK_MODE_INTERNAL</name>
        <initializer>(0U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Internal Loop Back Mode. This mode can be used for hot self-test and this mode will not affect bus state. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="290" column="9" bodyfile="source/third_party/mcan/MCAN.h" bodystart="290" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_m_c_a_n_8h_1ab6fa4cd4434caa25a02d245c4e2ff54a" prot="public" static="no">
        <name>MCAN_LPBK_MODE_EXTERNAL</name>
        <initializer>(1U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>External Loop Back Mode. In this mode, the M_CAN controller treats its own transmitted messages as received messages and stores them (if they pass acceptance filtering) into an Rx Buffer or an Rx FIFO. This mode will affect bus state. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="295" column="9" bodyfile="source/third_party/mcan/MCAN.h" bodystart="295" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_m_c_a_n_8h_1a4b23ad6eb42ea29586b46b0f2b54714d" prot="public" static="no">
        <type>uint32_t</type>
        <definition>typedef uint32_t MCAN_LpbkMode</definition>
        <argsstring></argsstring>
        <name>MCAN_LpbkMode</name>
        <briefdescription>
<para>Enum to select the MCAN Loopback mode. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="288" column="1" bodyfile="source/third_party/mcan/MCAN.h" bodystart="288" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>MCAN Com State</header>
      <description><para><anchor id="_m_c_a_n_8h_1MCAN_ComState"/></para></description>
      <memberdef kind="define" id="_m_c_a_n_8h_1a6a8cfd16736578b75f9c219c0eac5c15" prot="public" static="no">
        <name>MCAN_COM_STATE_SYNCHRONIZING</name>
        <initializer>(0U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>MCAN is synchronizing on CAN communication </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="313" column="9" bodyfile="source/third_party/mcan/MCAN.h" bodystart="313" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_m_c_a_n_8h_1a18172ca0c145e8b9fcce64f619098e8a" prot="public" static="no">
        <name>MCAN_COM_STATE_IDLE</name>
        <initializer>(1U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>MCAN is neither receiver nor transmitter </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="315" column="9" bodyfile="source/third_party/mcan/MCAN.h" bodystart="315" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_m_c_a_n_8h_1aa339362e8669c5e2d0ce506860ef09a0" prot="public" static="no">
        <name>MCAN_COM_STATE_RECEIVER</name>
        <initializer>(2U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>MCAN is operating as receiver </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="317" column="9" bodyfile="source/third_party/mcan/MCAN.h" bodystart="317" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_m_c_a_n_8h_1acc413ffd121663f54e7696c8dfc2ddc8" prot="public" static="no">
        <name>MCAN_COM_STATE_TRANSMITTER</name>
        <initializer>(3U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>MCAN is operating as transmitter </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="319" column="9" bodyfile="source/third_party/mcan/MCAN.h" bodystart="319" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_m_c_a_n_8h_1a88fdc98126e7833bd9a065fa15544156" prot="public" static="no">
        <type>uint32_t</type>
        <definition>typedef uint32_t MCAN_ComState</definition>
        <argsstring></argsstring>
        <name>MCAN_ComState</name>
        <briefdescription>
<para>Enum to represent MCAN communication state. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="311" column="1" bodyfile="source/third_party/mcan/MCAN.h" bodystart="311" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>MCAN General Filter Control Non-Matching</header>
      <description><para><anchor id="_m_c_a_n_8h_1MCAN_GFC_NM"/></para></description>
      <memberdef kind="define" id="_m_c_a_n_8h_1a4551b99123b214166fcecfda7080fb47" prot="public" static="no">
        <name>MCAN_GFC_NM_ACCEPT_INTO_RXFIFO0</name>
        <initializer>(0U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Accept non-matching frames into Rx FIFO0 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="333" column="9" bodyfile="source/third_party/mcan/MCAN.h" bodystart="333" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_m_c_a_n_8h_1a2d0625494fcfef3da79f2436031e0ba8" prot="public" static="no">
        <name>MCAN_GFC_NM_ACCEPT_INTO_RXFIFO1</name>
        <initializer>(1U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Accept non-matching frames into Rx FIFO0 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="335" column="9" bodyfile="source/third_party/mcan/MCAN.h" bodystart="335" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_m_c_a_n_8h_1afa0a2140d76cae694ec50c96bf4fb066" prot="public" static="no">
        <name>MCAN_GFC_NM_REJECT</name>
        <initializer>(3U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reject non-matching frames </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="337" column="9" bodyfile="source/third_party/mcan/MCAN.h" bodystart="337" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_m_c_a_n_8h_1acfd63436ff4331937d07aa3088677c6a" prot="public" static="no">
        <type>uint32_t</type>
        <definition>typedef uint32_t MCAN_GFCNonMatching</definition>
        <argsstring></argsstring>
        <name>MCAN_GFCNonMatching</name>
        <briefdescription>
<para>Enum to represent the MCAN general filter configuration for non-matching frames. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="331" column="1" bodyfile="source/third_party/mcan/MCAN.h" bodystart="331" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>MCAN timestamp select</header>
      <description><para><anchor id="_m_c_a_n_8h_1MCAN_TSCC_TS_SEL"/></para></description>
      <memberdef kind="define" id="_m_c_a_n_8h_1a881e1942d60eeb43d0bc231f37e39d9c" prot="public" static="no">
        <name>MCAN_TSCC_COUNTER_ALWAYS_0</name>
        <initializer>(0U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Timestamp counter value always 0x0000 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="351" column="9" bodyfile="source/third_party/mcan/MCAN.h" bodystart="351" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_m_c_a_n_8h_1af5a6ff87916a66ef66786a32068886a8" prot="public" static="no">
        <name>MCAN_TSCC_COUNTER_USE_TCP</name>
        <initializer>(1U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Timestamp counter value incremented according to Timestamp Counter Prescaler </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="353" column="9" bodyfile="source/third_party/mcan/MCAN.h" bodystart="353" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_m_c_a_n_8h_1a6770962c151f7148f155ad2df08357f0" prot="public" static="no">
        <name>MCAN_TSCC_COUNTER_EXTERNAL</name>
        <initializer>(2U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>External timestamp counter value used - req&apos;d for CAN FD </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="355" column="9" bodyfile="source/third_party/mcan/MCAN.h" bodystart="355" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_m_c_a_n_8h_1af6a587291234694473f819017f6a8f70" prot="public" static="no">
        <type>uint32_t</type>
        <definition>typedef uint32_t MCAN_TSCCTimestampSel</definition>
        <argsstring></argsstring>
        <name>MCAN_TSCCTimestampSel</name>
        <briefdescription>
<para>Enum to represent the MCAN timestamp select. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="349" column="1" bodyfile="source/third_party/mcan/MCAN.h" bodystart="349" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>MCAN Error Code</header>
      <description><para><anchor id="_m_c_a_n_8h_1MCAN_ErrCode"/></para></description>
      <memberdef kind="define" id="_m_c_a_n_8h_1a962da9dc65035c2814f8f9cb5566d7d0" prot="public" static="no">
        <name>MCAN_ERR_CODE_NO_ERROR</name>
        <initializer>(0U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>No error occurred since LEC has been reset by successful reception or transmission. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="369" column="9" bodyfile="source/third_party/mcan/MCAN.h" bodystart="369" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_m_c_a_n_8h_1a16150f1b7eeb4825c7b31d090cb06575" prot="public" static="no">
        <name>MCAN_ERR_CODE_STUFF_ERROR</name>
        <initializer>(1U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>More than 5 equal bits in a sequence have occurred in a part of a received message where this is not allowed. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="373" column="9" bodyfile="source/third_party/mcan/MCAN.h" bodystart="373" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_m_c_a_n_8h_1ad6bc04773a86c605f55f4346aff2c4dd" prot="public" static="no">
        <name>MCAN_ERR_CODE_FORM_ERROR</name>
        <initializer>(2U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A fixed format part of a received frame has the wrong format. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="377" column="9" bodyfile="source/third_party/mcan/MCAN.h" bodystart="377" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_m_c_a_n_8h_1a2ffa9d1fb6062b3c8d743fb8d652fb6a" prot="public" static="no">
        <name>MCAN_ERR_CODE_ACK_ERROR</name>
        <initializer>(3U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The message transmitted by the M_CAN was not acknowledged by another node. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="379" column="9" bodyfile="source/third_party/mcan/MCAN.h" bodystart="379" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_m_c_a_n_8h_1ae466fdaa67bde17c59bce5927346e624" prot="public" static="no">
        <name>MCAN_ERR_CODE_BIT1_ERROR</name>
        <initializer>(4U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>During the transmission of a message (with the exception of the arbitration field), the device wanted to send a recessive level (bit of logical value 1)) but the monitored bus value was dominant. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="383" column="9" bodyfile="source/third_party/mcan/MCAN.h" bodystart="383" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_m_c_a_n_8h_1abac452d042d66b4e51e53c99817fea7b" prot="public" static="no">
        <name>MCAN_ERR_CODE_BIT0_ERROR</name>
        <initializer>(5U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>During the transmission of a message (or acknowledge bit, or active error flag, or overload flag), the device wanted to send a dominant level (data or identifier bit logical value 0), but the monitored bus value was recessive. During Bus_Off recovery this status is set each time a sequence of 11 recessive bits has been monitored. This enables the CPU to monitor the proceeding of the Bus_Off recovery sequence (indicating the bus is not stuck at dominant or continuously disturbed). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="389" column="9" bodyfile="source/third_party/mcan/MCAN.h" bodystart="389" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_m_c_a_n_8h_1a03b3ef45c23003b46cc873856ba9f241" prot="public" static="no">
        <name>MCAN_ERR_CODE_CRC_ERROR</name>
        <initializer>(6U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The CRC check sum of a received message was incorrect. The CRC of an incoming message does not match with the CRC calculated from the received data. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="399" column="9" bodyfile="source/third_party/mcan/MCAN.h" bodystart="399" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_m_c_a_n_8h_1abe194505307cbfae9561c82255fd4c35" prot="public" static="no">
        <name>MCAN_ERR_CODE_NO_CHANGE</name>
        <initializer>(7U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="404" column="9" bodyfile="source/third_party/mcan/MCAN.h" bodystart="404" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_m_c_a_n_8h_1a7e186fa24481fcc4dee430789443fbfe" prot="public" static="no">
        <type>uint32_t</type>
        <definition>typedef uint32_t MCAN_ErrCode</definition>
        <argsstring></argsstring>
        <name>MCAN_ErrCode</name>
        <briefdescription>
<para>Enum to represent M_CAN Error Code. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="367" column="1" bodyfile="source/third_party/mcan/MCAN.h" bodystart="367" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="_m_c_a_n_8h_1a8580f3962c54dc8d46dc245ce1a43cf5" prot="public" static="no">
        <name>MCAN_STATUS_SUCCESS</name>
        <initializer>((int_fast16_t)0)</initializer>
        <briefdescription>
<para>Successful status code. </para>        </briefdescription>
        <detaileddescription>
<para>Functions return MCAN_STATUS_SUCCESS if the function was executed successfully. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="71" column="9" bodyfile="source/third_party/mcan/MCAN.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_m_c_a_n_8h_1a48dbe179e2240c9285cb84be5d1be22d" prot="public" static="no">
        <name>MCAN_STATUS_ERROR</name>
        <initializer>((int_fast16_t)-1)</initializer>
        <briefdescription>
<para>Generic error status code. </para>        </briefdescription>
        <detaileddescription>
<para>Functions return MCAN_STATUS_ERROR if the function was not executed successfully and no more specific error is applicable. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="79" column="9" bodyfile="source/third_party/mcan/MCAN.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_m_c_a_n_8h_1aad3e5b1784e232a32e0e45eaeff1c82a" prot="public" static="no">
        <name>MCAN_MAX_PAYLOAD_SIZE</name>
        <initializer>(64U)</initializer>
        <briefdescription>
<para>Maximum payload supported by CAN-FD protocol in bytes. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="82" column="9" bodyfile="source/third_party/mcan/MCAN.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_m_c_a_n_8h_1a3e1e8dae5e283a0d5f52b66dc6064995" prot="public" static="no">
        <name>MCAN_STD_ID_FILTER_ELEM_SIZE</name>
        <initializer>(4U)</initializer>
        <briefdescription>
<para>Standard Message ID filter element size in bytes. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="85" column="9" bodyfile="source/third_party/mcan/MCAN.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_m_c_a_n_8h_1ae3323a09d0da2f7993fa5dcbb9aa7d75" prot="public" static="no">
        <name>MCAN_EXT_ID_FILTER_ELEM_SIZE</name>
        <initializer>(8U)</initializer>
        <briefdescription>
<para>Extended Message ID filter element size in bytes. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="88" column="9" bodyfile="source/third_party/mcan/MCAN.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_m_c_a_n_8h_1adb0025eca001e70a4170f29429800dc5" prot="public" static="no">
        <name>MCAN_TX_EVENT_ELEM_SIZE</name>
        <initializer>(8U)</initializer>
        <briefdescription>
<para>Tx Event FIFO element size in bytes. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="91" column="9" bodyfile="source/third_party/mcan/MCAN.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_m_c_a_n_8h_1a400827921428a5daad5a2b5302b57938" prot="public" static="no">
        <name>MCAN_TX_RX_ELEMENT_HEADER_SIZE</name>
        <initializer>(8U)</initializer>
        <briefdescription>
<para>Tx/Rx Element Header Size in bytes. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="94" column="9" bodyfile="source/third_party/mcan/MCAN.h" bodystart="94" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_m_c_a_n_8h_1a68870b6e29d60f1a9749d4ba14031a41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MCAN_writeReg</definition>
        <argsstring>(uint32_t offset, uint32_t value)</argsstring>
        <name>MCAN_writeReg</name>
        <param>
          <type>uint32_t</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="59" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_m_c_a_n_8h_1aa1eff83f932e434e43c6050cf6d2adce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MCAN_writeMsgRam</definition>
        <argsstring>(uint32_t offset, const uint8_t *src, size_t numBytes)</argsstring>
        <name>MCAN_writeMsgRam</name>
        <param>
          <type>uint32_t</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>numBytes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="60" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_m_c_a_n_8h_1a241c48b008f3a05f570f2fa96ff191c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t MCAN_readReg</definition>
        <argsstring>(uint32_t offset)</argsstring>
        <name>MCAN_readReg</name>
        <param>
          <type>uint32_t</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="61" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_m_c_a_n_8h_1abdc9699d71db1fbc358b8bb205b2d5c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MCAN_readMsgRam</definition>
        <argsstring>(uint8_t *dst, uint32_t offset, size_t numBytes)</argsstring>
        <name>MCAN_readMsgRam</name>
        <param>
          <type>uint8_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>numBytes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="62" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_m_c_a_n_8h_1a21ee9df9dca77f0a89b9ce54bef19863" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t MCAN_getMRAMOffset</definition>
        <argsstring>(void)</argsstring>
        <name>MCAN_getMRAMOffset</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="63" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_m_c_a_n_8h_1af24830ad69983870b613f6f5e59ce14a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int_fast16_t</type>
        <definition>int_fast16_t MCAN_init</definition>
        <argsstring>(const MCAN_InitParams *initParams)</argsstring>
        <name>MCAN_init</name>
        <param>
          <type>const <ref refid="struct_m_c_a_n___init_params" kindref="compound">MCAN_InitParams</ref> *</type>
          <declname>initParams</declname>
        </param>
        <briefdescription>
<para>Initializes M_CAN controller. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>initParams</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to initialization parameters. Refer struct <ref refid="struct_m_c_a_n___init_params" kindref="compound">MCAN_InitParams</ref>.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>MCAN_STATUS_SUCCESS</parametername>
</parameternamelist>
<parameterdescription>
<para>if successful. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>MCAN_STATUS_ERROR</parametername>
</parameternamelist>
<parameterdescription>
<para>if config has invalid time delay compensation or WDT preload. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="1274" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_m_c_a_n_8h_1a8ef6dfe6a708d8c4411111c8696575d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int_fast16_t</type>
        <definition>int_fast16_t MCAN_config</definition>
        <argsstring>(const MCAN_ConfigParams *config)</argsstring>
        <name>MCAN_config</name>
        <param>
          <type>const <ref refid="struct_m_c_a_n___config_params" kindref="compound">MCAN_ConfigParams</ref> *</type>
          <declname>config</declname>
        </param>
        <briefdescription>
<para>Configures M_CAN controller. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to configuration parameters. Refer struct <ref refid="struct_m_c_a_n___config_params" kindref="compound">MCAN_ConfigParams</ref>.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>MCAN_STATUS_SUCCESS</parametername>
</parameternamelist>
<parameterdescription>
<para>if successful. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>MCAN_STATUS_ERROR</parametername>
</parameternamelist>
<parameterdescription>
<para>if config has invalid prescaler or timeout preload. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="1285" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_m_c_a_n_8h_1a793290c20c9e47cf4b1394b293e476db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MCAN_setOpMode</definition>
        <argsstring>(MCAN_OperationMode mode)</argsstring>
        <name>MCAN_setOpMode</name>
        <param>
          <type><ref refid="_m_c_a_n_8h_1a167f2303711b784f8665db68774f8342" kindref="member">MCAN_OperationMode</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
<para>Sets M_CAN controller mode of operation. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mode</parametername>
</parameternamelist>
<parameterdescription>
<para>Mode of operation. Refer enum MCAN_OperationMode.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="1295" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_m_c_a_n_8h_1a80a400fe60266c815dd493f33b71df16" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_m_c_a_n_8h_1a167f2303711b784f8665db68774f8342" kindref="member">MCAN_OperationMode</ref></type>
        <definition>MCAN_OperationMode MCAN_getOpMode</definition>
        <argsstring>(void)</argsstring>
        <name>MCAN_getOpMode</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Returns M_CAN controller mode of operation. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>mode Mode of operation. Refer enum MCAN_OperationMode. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="1304" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_m_c_a_n_8h_1a8000803b21f53320d2c2a4010970d9c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MCAN_getBitTime</definition>
        <argsstring>(MCAN_BitTimingParams *bitTiming)</argsstring>
        <name>MCAN_getBitTime</name>
        <param>
          <type><ref refid="struct_m_c_a_n___bit_timing_params" kindref="compound">MCAN_BitTimingParams</ref> *</type>
          <declname>bitTiming</declname>
        </param>
        <briefdescription>
<para>Reads the M_CAN controller bit timings. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bitTiming</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to MCAN bit timing parameters. Refer struct <ref refid="struct_m_c_a_n___bit_timing_params" kindref="compound">MCAN_BitTimingParams</ref>.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="1314" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_m_c_a_n_8h_1a409f507b74d72bc18daf7c43866abf41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int_fast16_t</type>
        <definition>int_fast16_t MCAN_setBitTime</definition>
        <argsstring>(const MCAN_BitTimingParams *bitTiming)</argsstring>
        <name>MCAN_setBitTime</name>
        <param>
          <type>const <ref refid="struct_m_c_a_n___bit_timing_params" kindref="compound">MCAN_BitTimingParams</ref> *</type>
          <declname>bitTiming</declname>
        </param>
        <briefdescription>
<para>Sets M_CAN controller bit timings. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bitTiming</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to MCAN bit timing parameters. Refer struct <ref refid="struct_m_c_a_n___bit_timing_params" kindref="compound">MCAN_BitTimingParams</ref>.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>MCAN_STATUS_SUCCESS</parametername>
</parameternamelist>
<parameterdescription>
<para>if successful. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>MCAN_STATUS_ERROR</parametername>
</parameternamelist>
<parameterdescription>
<para>if config has invalid timing values. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="1325" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_m_c_a_n_8h_1acc7b32b7d1fda7f7041486e00aa8ddd7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MCAN_configMsgRam</definition>
        <argsstring>(const MCAN_MsgRamConfig *msgRamConfig)</argsstring>
        <name>MCAN_configMsgRam</name>
        <param>
          <type>const <ref refid="struct_m_c_a_n___msg_ram_config" kindref="compound">MCAN_MsgRamConfig</ref> *</type>
          <declname>msgRamConfig</declname>
        </param>
        <briefdescription>
<para>Configures the various sections of Message RAM. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>Message RAM configuration is not validated by this API.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>msgRamConfig</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to Message RAM configuration. Refer struct <ref refid="struct_m_c_a_n___msg_ram_config" kindref="compound">MCAN_MsgRamConfig</ref>.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="1337" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_m_c_a_n_8h_1a003b6193e9bd13c0589239c57cc1b1ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MCAN_writeTxMsgNoCpy</definition>
        <argsstring>(uint32_t bufIdx, const MCAN_TxBufElementNoCpy *elem)</argsstring>
        <name>MCAN_writeTxMsgNoCpy</name>
        <param>
          <type>uint32_t</type>
          <declname>bufIdx</declname>
        </param>
        <param>
          <type>const <ref refid="struct_m_c_a_n___tx_buf_element_no_cpy" kindref="compound">MCAN_TxBufElementNoCpy</ref> *</type>
          <declname>elem</declname>
        </param>
        <briefdescription>
<para>Writes Tx message to message RAM. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bufIdx</parametername>
</parameternamelist>
<parameterdescription>
<para>Tx Buffer index [0-31] where to write message. Must be valid per the message RAM configuration. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>elem</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to Tx element. Refer struct <ref refid="struct_m_c_a_n___tx_buf_element_no_cpy" kindref="compound">MCAN_TxBufElementNoCpy</ref>.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None.</para></simplesect>
<simplesect kind="post"><para><ref refid="_m_c_a_n_8h_1a97a1ea8e98ce04d630366c9be07bf38b" kindref="member">MCAN_setTxBufAddReq()</ref></para></simplesect>
<simplesect kind="see"><para><ref refid="_m_c_a_n_8h_1ae9fc84eff39706bc8384992b1c03940e" kindref="member">MCAN_writeTxMsg()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="1353" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_m_c_a_n_8h_1ae9fc84eff39706bc8384992b1c03940e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MCAN_writeTxMsg</definition>
        <argsstring>(uint32_t bufIdx, const MCAN_TxBufElement *elem)</argsstring>
        <name>MCAN_writeTxMsg</name>
        <param>
          <type>uint32_t</type>
          <declname>bufIdx</declname>
        </param>
        <param>
          <type>const <ref refid="struct_m_c_a_n___tx_buf_element" kindref="compound">MCAN_TxBufElement</ref> *</type>
          <declname>elem</declname>
        </param>
        <briefdescription>
<para>Writes Tx message to message RAM. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bufIdx</parametername>
</parameternamelist>
<parameterdescription>
<para>Tx Buffer index [0-31] where to write message. Must be valid per the message RAM configuration. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>elem</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to Tx element. Refer struct <ref refid="struct_m_c_a_n___tx_buf_element" kindref="compound">MCAN_TxBufElement</ref>.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None.</para></simplesect>
<simplesect kind="post"><para><ref refid="_m_c_a_n_8h_1a97a1ea8e98ce04d630366c9be07bf38b" kindref="member">MCAN_setTxBufAddReq()</ref></para></simplesect>
<simplesect kind="see"><para><ref refid="_m_c_a_n_8h_1a003b6193e9bd13c0589239c57cc1b1ec" kindref="member">MCAN_writeTxMsgNoCpy()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="1369" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_m_c_a_n_8h_1a97a1ea8e98ce04d630366c9be07bf38b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MCAN_setTxBufAddReq</definition>
        <argsstring>(uint32_t bufIdx)</argsstring>
        <name>MCAN_setTxBufAddReq</name>
        <param>
          <type>uint32_t</type>
          <declname>bufIdx</declname>
        </param>
        <briefdescription>
<para>Sets Tx Buffer Add Request. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><ref refid="_m_c_a_n_8h_1a003b6193e9bd13c0589239c57cc1b1ec" kindref="member">MCAN_writeTxMsgNoCpy()</ref> or <ref refid="_m_c_a_n_8h_1ae9fc84eff39706bc8384992b1c03940e" kindref="member">MCAN_writeTxMsg()</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bufIdx</parametername>
</parameternamelist>
<parameterdescription>
<para>Tx Buffer index [0-31] for which request is to be added. Must be valid per the message RAM configuration.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="1381" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_m_c_a_n_8h_1adfb43ded65fb35dcd34bcce0a7109280" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MCAN_getNewDataStatus</definition>
        <argsstring>(MCAN_RxNewDataStatus *newDataStatus)</argsstring>
        <name>MCAN_getNewDataStatus</name>
        <param>
          <type><ref refid="struct_m_c_a_n___rx_new_data_status" kindref="compound">MCAN_RxNewDataStatus</ref> *</type>
          <declname>newDataStatus</declname>
        </param>
        <briefdescription>
<para>Reads New Data Message Status. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>newDataStatus</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to Rx Buffer new data status. Refer struct <ref refid="struct_m_c_a_n___rx_new_data_status" kindref="compound">MCAN_RxNewDataStatus</ref>.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None.</para></simplesect>
<simplesect kind="post"><para><ref refid="_m_c_a_n_8h_1a0b662be20f05806891c155ccb9726576" kindref="member">MCAN_clearNewDataStatus()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="1393" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_m_c_a_n_8h_1a0b662be20f05806891c155ccb9726576" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MCAN_clearNewDataStatus</definition>
        <argsstring>(const MCAN_RxNewDataStatus *newDataStatus)</argsstring>
        <name>MCAN_clearNewDataStatus</name>
        <param>
          <type>const <ref refid="struct_m_c_a_n___rx_new_data_status" kindref="compound">MCAN_RxNewDataStatus</ref> *</type>
          <declname>newDataStatus</declname>
        </param>
        <briefdescription>
<para>Clears New Data Message Status. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><ref refid="_m_c_a_n_8h_1adfb43ded65fb35dcd34bcce0a7109280" kindref="member">MCAN_getNewDataStatus()</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>newDataStatus</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to Rx Buffer new data status. Refer struct <ref refid="struct_m_c_a_n___rx_new_data_status" kindref="compound">MCAN_RxNewDataStatus</ref>.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="1405" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_m_c_a_n_8h_1a22b0f1452d5a4b9d9d267793994f0941" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MCAN_readRxMsgNoCpy</definition>
        <argsstring>(MCAN_MemType memType, uint32_t num, MCAN_RxBufElementNoCpy *elem)</argsstring>
        <name>MCAN_readRxMsgNoCpy</name>
        <param>
          <type><ref refid="_m_c_a_n_8h_1ae4a66b82270bb3b4f5e6f1aa111918bc" kindref="member">MCAN_MemType</ref></type>
          <declname>memType</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>num</declname>
        </param>
        <param>
          <type><ref refid="struct_m_c_a_n___rx_buf_element_no_cpy" kindref="compound">MCAN_RxBufElementNoCpy</ref> *</type>
          <declname>elem</declname>
        </param>
        <briefdescription>
<para>Reads received message from message RAM. </para>        </briefdescription>
        <detaileddescription>
<para>This function uses the <ref refid="struct_m_c_a_n___rx_buf_element_no_cpy" kindref="compound">MCAN_RxBufElementNoCpy</ref> structure element which has data as pointer instead of an array. Note that as the data is a pointer here hence corruption of data is possible when the payload size is exceeded.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>memType</parametername>
</parameternamelist>
<parameterdescription>
<para>Part of message ram to which given message to write. Refer enum MCAN_MemType. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer number or FIFO number from where message is to read. Refer enum MCAN_RxFifoNum if FIFO number. Must be valid per the message RAM configuration. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>elem</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to Rx element. Refer struct <ref refid="struct_m_c_a_n___rx_buf_element_no_cpy" kindref="compound">MCAN_RxBufElementNoCpy</ref>.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None.</para></simplesect>
<simplesect kind="post"><para><ref refid="_m_c_a_n_8h_1abc33af112e58702e98590f9f57860520" kindref="member">MCAN_setRxFifoAck()</ref></para></simplesect>
<simplesect kind="see"><para><ref refid="_m_c_a_n_8h_1a1a1680a666bdeae63443fc3f0e6a9cd7" kindref="member">MCAN_readRxMsg()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="1428" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_m_c_a_n_8h_1a1a1680a666bdeae63443fc3f0e6a9cd7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MCAN_readRxMsg</definition>
        <argsstring>(MCAN_MemType memType, uint32_t num, MCAN_RxBufElement *elem)</argsstring>
        <name>MCAN_readRxMsg</name>
        <param>
          <type><ref refid="_m_c_a_n_8h_1ae4a66b82270bb3b4f5e6f1aa111918bc" kindref="member">MCAN_MemType</ref></type>
          <declname>memType</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>num</declname>
        </param>
        <param>
          <type><ref refid="struct_m_c_a_n___rx_buf_element" kindref="compound">MCAN_RxBufElement</ref> *</type>
          <declname>elem</declname>
        </param>
        <briefdescription>
<para>Reads received message from message RAM. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>memType</parametername>
</parameternamelist>
<parameterdescription>
<para>Part of message ram to which given message to write. Refer enum MCAN_MemType. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer number or FIFO number from where message is to read. Refer enum MCAN_RxFifoNum if FIFO number. Must be valid per the message RAM configuration. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>elem</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to Rx element. Refer struct <ref refid="struct_m_c_a_n___rx_buf_element" kindref="compound">MCAN_RxBufElement</ref>.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None.</para></simplesect>
<simplesect kind="post"><para><ref refid="_m_c_a_n_8h_1abc33af112e58702e98590f9f57860520" kindref="member">MCAN_setRxFifoAck()</ref></para></simplesect>
<simplesect kind="see"><para><ref refid="_m_c_a_n_8h_1a22b0f1452d5a4b9d9d267793994f0941" kindref="member">MCAN_readRxMsgNoCpy()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="1447" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_m_c_a_n_8h_1ad038ef6866a2fee14cf9d7ee0e306439" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int_fast16_t</type>
        <definition>int_fast16_t MCAN_readTxEventFifo</definition>
        <argsstring>(MCAN_TxEventFifoElement *elem)</argsstring>
        <name>MCAN_readTxEventFifo</name>
        <param>
          <type><ref refid="struct_m_c_a_n___tx_event_fifo_element" kindref="compound">MCAN_TxEventFifoElement</ref> *</type>
          <declname>elem</declname>
        </param>
        <briefdescription>
<para>Reads next available element from Tx Event FIFO. </para>        </briefdescription>
        <detaileddescription>
<para>This function writes the Tx Event FIFO acknowledge index after successfully reading the Tx Event FIFO element.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>elem</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to Tx Event FIFO Element Object. Refer struct <ref refid="struct_m_c_a_n___tx_event_fifo_element" kindref="compound">MCAN_TxEventFifoElement</ref>.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>MCAN_STATUS_SUCCESS</parametername>
</parameternamelist>
<parameterdescription>
<para>if successful. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>MCAN_STATUS_ERROR</parametername>
</parameternamelist>
<parameterdescription>
<para>if the Tx Event FIFO is empty. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="1461" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_m_c_a_n_8h_1a4b49b0b58b506bccca66665a5ae2956f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MCAN_addStdMsgIDFilter</definition>
        <argsstring>(uint32_t filtNum, const MCAN_StdMsgIDFilterElement *elem)</argsstring>
        <name>MCAN_addStdMsgIDFilter</name>
        <param>
          <type>uint32_t</type>
          <declname>filtNum</declname>
        </param>
        <param>
          <type>const <ref refid="struct_m_c_a_n___std_msg_i_d_filter_element" kindref="compound">MCAN_StdMsgIDFilterElement</ref> *</type>
          <declname>elem</declname>
        </param>
        <briefdescription>
<para>Adds Standard Message ID Filter Element. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filtNum</parametername>
</parameternamelist>
<parameterdescription>
<para>Filter number (0-based). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>elem</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to standard ID Filter Object. Refer struct <ref refid="struct_m_c_a_n___std_msg_i_d_filter_element" kindref="compound">MCAN_StdMsgIDFilterElement</ref>.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="1472" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_m_c_a_n_8h_1a3e30ab4ce43693bbe49472ad9d1ae75c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MCAN_addExtMsgIDFilter</definition>
        <argsstring>(uint32_t filtNum, const MCAN_ExtMsgIDFilterElement *elem)</argsstring>
        <name>MCAN_addExtMsgIDFilter</name>
        <param>
          <type>uint32_t</type>
          <declname>filtNum</declname>
        </param>
        <param>
          <type>const <ref refid="struct_m_c_a_n___ext_msg_i_d_filter_element" kindref="compound">MCAN_ExtMsgIDFilterElement</ref> *</type>
          <declname>elem</declname>
        </param>
        <briefdescription>
<para>Adds Extended Message ID Filter Element. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filtNum</parametername>
</parameternamelist>
<parameterdescription>
<para>Filter number (0-based). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>elem</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to extended ID Filter Object. Refer struct <ref refid="struct_m_c_a_n___ext_msg_i_d_filter_element" kindref="compound">MCAN_ExtMsgIDFilterElement</ref>.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="1483" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_m_c_a_n_8h_1a52b2f4cbce7be8711233e0b69f7ac31b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MCAN_enableLoopbackMode</definition>
        <argsstring>(MCAN_LpbkMode lpbkMode)</argsstring>
        <name>MCAN_enableLoopbackMode</name>
        <param>
          <type><ref refid="_m_c_a_n_8h_1a4b23ad6eb42ea29586b46b0f2b54714d" kindref="member">MCAN_LpbkMode</ref></type>
          <declname>lpbkMode</declname>
        </param>
        <briefdescription>
<para>Enables Loopback Test Mode for M_CAN controller. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lpbkMode</parametername>
</parameternamelist>
<parameterdescription>
<para>Loopback mode for MCAN. Refer enum MCAN_LpbkMode.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None.</para></simplesect>
<simplesect kind="note"><para>This API can be called only when MCAN is in Software Initialization mode of operation. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="1496" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_m_c_a_n_8h_1a87b153f02602783aa7a60430c75cc7f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MCAN_disableLoopbackMode</definition>
        <argsstring>(void)</argsstring>
        <name>MCAN_disableLoopbackMode</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Disables Loopback Test Mode for M_CAN controller. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><ref refid="_m_c_a_n_8h_1a52b2f4cbce7be8711233e0b69f7ac31b" kindref="member">MCAN_enableLoopbackMode()</ref></para></simplesect>
<simplesect kind="return"><para>None.</para></simplesect>
<simplesect kind="note"><para>This API can be called only when MCAN is in Software Initialization mode of operation. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="1508" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_m_c_a_n_8h_1a7bde20018a47a93102d907bef0a0040e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MCAN_getProtocolStatus</definition>
        <argsstring>(MCAN_ProtocolStatus *protStatus)</argsstring>
        <name>MCAN_getProtocolStatus</name>
        <param>
          <type><ref refid="struct_m_c_a_n___protocol_status" kindref="compound">MCAN_ProtocolStatus</ref> *</type>
          <declname>protStatus</declname>
        </param>
        <briefdescription>
<para>Reads protocol status for M_CAN controller. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>protStatus</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to Protocol Status. Refer struct <ref refid="struct_m_c_a_n___protocol_status" kindref="compound">MCAN_ProtocolStatus</ref>.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="1518" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_m_c_a_n_8h_1a4a337a63520192ed29e7fbaff6454350" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MCAN_enableInt</definition>
        <argsstring>(uint32_t intMask)</argsstring>
        <name>MCAN_enableInt</name>
        <param>
          <type>uint32_t</type>
          <declname>intMask</declname>
        </param>
        <briefdescription>
<para>Enables interrupts. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>intMask</parametername>
</parameternamelist>
<parameterdescription>
<para>Bit mask of interrupts to enable. Refer enum MCAN_IntSrc.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="1528" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_m_c_a_n_8h_1a10238847f3274974bc100d04148a214a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MCAN_disableInt</definition>
        <argsstring>(uint32_t intMask)</argsstring>
        <name>MCAN_disableInt</name>
        <param>
          <type>uint32_t</type>
          <declname>intMask</declname>
        </param>
        <briefdescription>
<para>Disables interrupts. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>intMask</parametername>
</parameternamelist>
<parameterdescription>
<para>Bit mask of interrupts to disable. Refer enum MCAN_IntSrc.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="1538" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_m_c_a_n_8h_1a18c04ef8ee8b4b5b41ad6ac3b4224f48" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MCAN_setIntLineSel</definition>
        <argsstring>(uint32_t intMask, MCAN_IntLineNum lineNum)</argsstring>
        <name>MCAN_setIntLineSel</name>
        <param>
          <type>uint32_t</type>
          <declname>intMask</declname>
        </param>
        <param>
          <type><ref refid="_m_c_a_n_8h_1afd1d21ecd39770c886bbf26884ac9770" kindref="member">MCAN_IntLineNum</ref></type>
          <declname>lineNum</declname>
        </param>
        <briefdescription>
<para>Sets interrupt line select. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>intMask</parametername>
</parameternamelist>
<parameterdescription>
<para>Interrupt Number for which interrupt line is to be selected. Refer enum MCAN_IntSrc. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lineNum</parametername>
</parameternamelist>
<parameterdescription>
<para>Interrupt Line to select. Refer enum MCAN_IntLineNum.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="1550" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_m_c_a_n_8h_1ae567977c2c7f339ba88619b8542602b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MCAN_enableIntLine</definition>
        <argsstring>(MCAN_IntLineNum lineNum)</argsstring>
        <name>MCAN_enableIntLine</name>
        <param>
          <type><ref refid="_m_c_a_n_8h_1afd1d21ecd39770c886bbf26884ac9770" kindref="member">MCAN_IntLineNum</ref></type>
          <declname>lineNum</declname>
        </param>
        <briefdescription>
<para>Enables selected interrupt line. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lineNum</parametername>
</parameternamelist>
<parameterdescription>
<para>Interrupt Line to enable. Refer enum MCAN_IntLineNum.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="1560" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_m_c_a_n_8h_1a7fde285cb083d4be9bb92b47b0058169" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MCAN_disableIntLine</definition>
        <argsstring>(MCAN_IntLineNum lineNum)</argsstring>
        <name>MCAN_disableIntLine</name>
        <param>
          <type><ref refid="_m_c_a_n_8h_1afd1d21ecd39770c886bbf26884ac9770" kindref="member">MCAN_IntLineNum</ref></type>
          <declname>lineNum</declname>
        </param>
        <briefdescription>
<para>Disables selected interrupt line. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lineNum</parametername>
</parameternamelist>
<parameterdescription>
<para>Interrupt Line to disable. Refer enum MCAN_IntLineNum.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="1570" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_m_c_a_n_8h_1a7380332da3eab4f7011053642e15d43b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t MCAN_getIntStatus</definition>
        <argsstring>(void)</argsstring>
        <name>MCAN_getIntStatus</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Returns interrupt status. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Interrupt Status. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="1577" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_m_c_a_n_8h_1a0473a37932632656d3c1d4e2e9386adb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MCAN_clearIntStatus</definition>
        <argsstring>(uint32_t intMask)</argsstring>
        <name>MCAN_clearIntStatus</name>
        <param>
          <type>uint32_t</type>
          <declname>intMask</declname>
        </param>
        <briefdescription>
<para>Clears the interrupt status. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>intMask</parametername>
</parameternamelist>
<parameterdescription>
<para>Interrupts to clear status.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="1586" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_m_c_a_n_8h_1a532ae77cad78a8da2e1c2f07101e66e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MCAN_getRxFifoStatus</definition>
        <argsstring>(MCAN_RxFifoNum fifoNum, MCAN_RxFifoStatus *fifoStatus)</argsstring>
        <name>MCAN_getRxFifoStatus</name>
        <param>
          <type><ref refid="_m_c_a_n_8h_1ad2e96cad4fa1837aef840d33f9964e03" kindref="member">MCAN_RxFifoNum</ref></type>
          <declname>fifoNum</declname>
        </param>
        <param>
          <type><ref refid="struct_m_c_a_n___rx_fifo_status" kindref="compound">MCAN_RxFifoStatus</ref> *</type>
          <declname>fifoStatus</declname>
        </param>
        <briefdescription>
<para>Reads Rx FIFO status. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fifoNum</parametername>
</parameternamelist>
<parameterdescription>
<para>Rx FIFO number Refer enum MCAN_RxFifoNum </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fifoStatus</parametername>
</parameternamelist>
<parameterdescription>
<para>Rx FIFO Status. Refer struct <ref refid="struct_m_c_a_n___rx_fifo_status" kindref="compound">MCAN_RxFifoStatus</ref>.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="1598" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_m_c_a_n_8h_1aa290a50962646b9bb5a8c8f02e227dad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MCAN_getTxEventFifoStatus</definition>
        <argsstring>(MCAN_TxEventFifoStatus *fifoStatus)</argsstring>
        <name>MCAN_getTxEventFifoStatus</name>
        <param>
          <type><ref refid="struct_m_c_a_n___tx_event_fifo_status" kindref="compound">MCAN_TxEventFifoStatus</ref> *</type>
          <declname>fifoStatus</declname>
        </param>
        <briefdescription>
<para>Reads Tx Event FIFO status. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fifoStatus</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to Tx Event FIFO Status. Refer struct TxEventFifoStatus.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="1608" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_m_c_a_n_8h_1a73ffafa4679310b508fd4d8db8c2c26a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MCAN_getTxFifoQStatus</definition>
        <argsstring>(MCAN_TxFifoQStatus *fifoQStatus)</argsstring>
        <name>MCAN_getTxFifoQStatus</name>
        <param>
          <type><ref refid="struct_m_c_a_n___tx_fifo_q_status" kindref="compound">MCAN_TxFifoQStatus</ref> *</type>
          <declname>fifoQStatus</declname>
        </param>
        <briefdescription>
<para>Reads Tx FIFO/Queue status. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fifoQStatus</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to Tx FIFO/Queue Status. Refer struct <ref refid="struct_m_c_a_n___tx_fifo_q_status" kindref="compound">MCAN_TxFifoQStatus</ref>.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="1618" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_m_c_a_n_8h_1abc33af112e58702e98590f9f57860520" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int_fast16_t</type>
        <definition>int_fast16_t MCAN_setRxFifoAck</definition>
        <argsstring>(MCAN_RxFifoNum fifoNum, uint32_t idx)</argsstring>
        <name>MCAN_setRxFifoAck</name>
        <param>
          <type><ref refid="_m_c_a_n_8h_1ad2e96cad4fa1837aef840d33f9964e03" kindref="member">MCAN_RxFifoNum</ref></type>
          <declname>fifoNum</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
<para>Sets Rx FIFO Acknowledgement. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fifoNum</parametername>
</parameternamelist>
<parameterdescription>
<para>FIFO Number. Refer enum MCAN_RxFifoNum. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Rx FIFO Acknowledge Index</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>MCAN_STATUS_SUCCESS</parametername>
</parameternamelist>
<parameterdescription>
<para>if successful. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>MCAN_STATUS_ERROR</parametername>
</parameternamelist>
<parameterdescription>
<para>if <computeroutput>fifoNum</computeroutput> or <computeroutput>idx</computeroutput> is invalid. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="1630" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_m_c_a_n_8h_1aaa3afc249740b9430744083f9016bf2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t MCAN_getTxBufReqPend</definition>
        <argsstring>(void)</argsstring>
        <name>MCAN_getTxBufReqPend</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Returns Tx Buffer Request Pending status. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Tx Buffer Request Pending status. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="1637" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_m_c_a_n_8h_1a3df798984f0b8b181976673701b2473d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MCAN_cancelTxBufReq</definition>
        <argsstring>(uint32_t bufIdx)</argsstring>
        <name>MCAN_cancelTxBufReq</name>
        <param>
          <type>uint32_t</type>
          <declname>bufIdx</declname>
        </param>
        <briefdescription>
<para>Cancels a Tx Buffer Request. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bufIdx</parametername>
</parameternamelist>
<parameterdescription>
<para>Tx Buffer index [0-31] for which request is to be cancelled.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="1646" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_m_c_a_n_8h_1ae69961733d066bf40cad95ad392505ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t MCAN_getTxBufTransmissionStatus</definition>
        <argsstring>(void)</argsstring>
        <name>MCAN_getTxBufTransmissionStatus</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Returns Tx Buffer Transmission Occurred status. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Tx Buffer Transmission Occurred status. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="1653" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_m_c_a_n_8h_1a6496ddf658328fe91a3705a1219fd04e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t MCAN_getTxBufCancellationStatus</definition>
        <argsstring>(void)</argsstring>
        <name>MCAN_getTxBufCancellationStatus</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Returns Transmit Buffer Cancellation Finished status. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Transmit Buffer Cancellation Finished status. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="1660" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_m_c_a_n_8h_1a002cb2e4e9486d8b9d157faeeec10d91" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MCAN_enableTxBufTransInt</definition>
        <argsstring>(uint32_t bufMask)</argsstring>
        <name>MCAN_enableTxBufTransInt</name>
        <param>
          <type>uint32_t</type>
          <declname>bufMask</declname>
        </param>
        <briefdescription>
<para>Enables Tx Buffer Transmission Interrupt. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bufMask</parametername>
</parameternamelist>
<parameterdescription>
<para>Tx Buffer mask for which interrupt(s) to enable.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="1669" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_m_c_a_n_8h_1abe21e8e9ce26f9fb1e35e179e0fba642" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MCAN_disableTxBufTransInt</definition>
        <argsstring>(uint32_t bufMask)</argsstring>
        <name>MCAN_disableTxBufTransInt</name>
        <param>
          <type>uint32_t</type>
          <declname>bufMask</declname>
        </param>
        <briefdescription>
<para>Disables Tx Buffer Transmission Interrupt. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bufMask</parametername>
</parameternamelist>
<parameterdescription>
<para>Tx Buffer mask for which interrupt(s) to disable.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="1678" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_m_c_a_n_8h_1a2d6e1d9b119ab2968e15c378657b34b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t MCAN_getClkStopAck</definition>
        <argsstring>(void)</argsstring>
        <name>MCAN_getClkStopAck</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Returns clock stop acknowledgement for M_CAN controller. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Clock Stop Acknowledge: <linebreak/>
 0 = No clock stop acknowledged, <linebreak/>
 1 = M_CAN may be set in power down </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="1687" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_m_c_a_n_8h_1ae1053fdf5fa96529bb706f3135e24e16" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t MCAN_getTimestampCounter</definition>
        <argsstring>(void)</argsstring>
        <name>MCAN_getTimestampCounter</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Returns the 16-bit timestamp counter value. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Timestamp counter value </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/third_party/mcan/MCAN.h" line="1694" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Hardware abstraction layer for M_CAN Controller v3.2.1. </para>    </briefdescription>
    <detaileddescription>
<para><hruler/>
 </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2023-2024,<sp/>Texas<sp/>Instruments<sp/>Incorporated</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>*<sp/><sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>*<sp/><sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>*<sp/><sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>Texas<sp/>Instruments<sp/>Incorporated<sp/>nor<sp/>the<sp/>names<sp/>of</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>its<sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>from<sp/>this<sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>OWNER<sp/>OR</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">/*!*****************************************************************************</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/><sp/>@file<sp/><sp/><sp/><sp/>MCAN.h</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*<sp/><sp/>@brief<sp/><sp/><sp/>Hardware<sp/>abstraction<sp/>layer<sp/>for<sp/>M_CAN<sp/>Controller<sp/>v3.2.1</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*******************************************************************************</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Structs<sp/>were<sp/>designed<sp/>to<sp/>avoid<sp/>bitfields,<sp/>unions,<sp/>and<sp/>casting</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*<sp/>for<sp/>portability<sp/>and<sp/>to<sp/>avoid<sp/>static<sp/>analysis<sp/>violations.</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__MCAN_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__MCAN_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_m_c_a_n__reg_8h" kindref="compound">third_party/mcan/inc/MCAN_reg.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/>*<sp/>MCAN<sp/>register<sp/>and<sp/>message<sp/>RAM<sp/>R/W<sp/>functions<sp/>are<sp/>defined<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/>*<sp/>device-specific<sp/>driver<sp/>since<sp/>access<sp/>methods<sp/>will<sp/>vary<sp/>for<sp/>internal<sp/>vs</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/>*<sp/>external<sp/>devices<sp/>as<sp/>will<sp/>the<sp/>base<sp/>MCAN<sp/>register<sp/>address.</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_m_c_a_n_8h_1a68870b6e29d60f1a9749d4ba14031a41" kindref="member">MCAN_writeReg</ref>(uint32_t<sp/>offset,<sp/>uint32_t<sp/>value);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_m_c_a_n_8h_1aa1eff83f932e434e43c6050cf6d2adce" kindref="member">MCAN_writeMsgRam</ref>(uint32_t<sp/>offset,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*src,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>numBytes);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="_m_c_a_n_8h_1a241c48b008f3a05f570f2fa96ff191c3" kindref="member">MCAN_readReg</ref>(uint32_t<sp/>offset);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_m_c_a_n_8h_1abdc9699d71db1fbc358b8bb205b2d5c6" kindref="member">MCAN_readMsgRam</ref>(uint8_t<sp/>*dst,<sp/>uint32_t<sp/>offset,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>numBytes);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="_m_c_a_n_8h_1a21ee9df9dca77f0a89b9ce54bef19863" kindref="member">MCAN_getMRAMOffset</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="_m_c_a_n_8h_1a8580f3962c54dc8d46dc245ce1a43cf5" refkind="member"><highlight class="preprocessor">#define<sp/>MCAN_STATUS_SUCCESS<sp/>((int_fast16_t)0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="_m_c_a_n_8h_1a48dbe179e2240c9285cb84be5d1be22d" refkind="member"><highlight class="preprocessor">#define<sp/>MCAN_STATUS_ERROR<sp/>((int_fast16_t)-1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="_m_c_a_n_8h_1aad3e5b1784e232a32e0e45eaeff1c82a" refkind="member"><highlight class="preprocessor">#define<sp/>MCAN_MAX_PAYLOAD_SIZE<sp/>(64U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="85" refid="_m_c_a_n_8h_1a3e1e8dae5e283a0d5f52b66dc6064995" refkind="member"><highlight class="preprocessor">#define<sp/>MCAN_STD_ID_FILTER_ELEM_SIZE<sp/>(4U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="_m_c_a_n_8h_1ae3323a09d0da2f7993fa5dcbb9aa7d75" refkind="member"><highlight class="preprocessor">#define<sp/>MCAN_EXT_ID_FILTER_ELEM_SIZE<sp/>(8U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="_m_c_a_n_8h_1adb0025eca001e70a4170f29429800dc5" refkind="member"><highlight class="preprocessor">#define<sp/>MCAN_TX_EVENT_ELEM_SIZE<sp/>(8U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="94" refid="_m_c_a_n_8h_1a400827921428a5daad5a2b5302b57938" refkind="member"><highlight class="preprocessor">#define<sp/>MCAN_TX_RX_ELEMENT_HEADER_SIZE<sp/>(8U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="104" refid="_m_c_a_n_8h_1afd1d21ecd39770c886bbf26884ac9770" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="_m_c_a_n_8h_1afd1d21ecd39770c886bbf26884ac9770" kindref="member">MCAN_IntLineNum</ref>;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106" refid="_m_c_a_n_8h_1a326f63e0838e0aa62dbc0f8b13801b83" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_INT_LINE_NUM_0<sp/>(0U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108" refid="_m_c_a_n_8h_1a34435b5877c4c592d164038604f6d595" refkind="member"><highlight class="preprocessor">#define<sp/>MCAN_INT_LINE_NUM_1<sp/>(1U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="comment">/*<sp/>@}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="120" refid="_m_c_a_n_8h_1a167f2303711b784f8665db68774f8342" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="_m_c_a_n_8h_1a167f2303711b784f8665db68774f8342" kindref="member">MCAN_OperationMode</ref>;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122" refid="_m_c_a_n_8h_1a12156c24e603e81fd27589f84ff7a426" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_OPERATION_MODE_NORMAL<sp/><sp/>(0U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124" refid="_m_c_a_n_8h_1aac794ffff553d58879bbb5c628d926cd" refkind="member"><highlight class="preprocessor">#define<sp/>MCAN_OPERATION_MODE_SW_INIT<sp/>(1U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="comment">/*<sp/>@}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="136" refid="_m_c_a_n_8h_1ae4a66b82270bb3b4f5e6f1aa111918bc" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="_m_c_a_n_8h_1ae4a66b82270bb3b4f5e6f1aa111918bc" kindref="member">MCAN_MemType</ref>;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138" refid="_m_c_a_n_8h_1a403b88d0e7331b00221ca4ec3d702166" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_MEM_TYPE_BUF<sp/><sp/>(0U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140" refid="_m_c_a_n_8h_1a549168c608de75c30d99cb5f3df9b6f3" refkind="member"><highlight class="preprocessor">#define<sp/>MCAN_MEM_TYPE_FIFO<sp/>(1U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="comment">/*<sp/>@}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="152" refid="_m_c_a_n_8h_1ad2e96cad4fa1837aef840d33f9964e03" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="_m_c_a_n_8h_1ad2e96cad4fa1837aef840d33f9964e03" kindref="member">MCAN_RxFifoNum</ref>;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154" refid="_m_c_a_n_8h_1afc4177091062ae4ec7d2102bee7dcf3a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_RX_FIFO_NUM_0<sp/>(0U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156" refid="_m_c_a_n_8h_1a0adb5dbc84cfa04084887ae8ca0efff0" refkind="member"><highlight class="preprocessor">#define<sp/>MCAN_RX_FIFO_NUM_1<sp/>(1U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="comment">/*<sp/>@}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="168" refid="_m_c_a_n_8h_1a5febd5930583071b281cd62f7999123c" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="_m_c_a_n_8h_1a5febd5930583071b281cd62f7999123c" kindref="member">MCAN_ElemSize</ref>;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170" refid="_m_c_a_n_8h_1a3b0cab236b10f3a656b46c343395e52f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_ELEM_SIZE_8BYTES<sp/><sp/>(0U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172" refid="_m_c_a_n_8h_1a0f9044ae10f8b135a2b2a6a76966e843" refkind="member"><highlight class="preprocessor">#define<sp/>MCAN_ELEM_SIZE_12BYTES<sp/>(1U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174" refid="_m_c_a_n_8h_1a168e9348333d2549c5ec302d175047bd" refkind="member"><highlight class="preprocessor">#define<sp/>MCAN_ELEM_SIZE_16BYTES<sp/>(2U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176" refid="_m_c_a_n_8h_1ab85db9c929f8301025cc6bf893a15346" refkind="member"><highlight class="preprocessor">#define<sp/>MCAN_ELEM_SIZE_20BYTES<sp/>(3U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178" refid="_m_c_a_n_8h_1afa44d06c90102fc5b8b47b920961dcdb" refkind="member"><highlight class="preprocessor">#define<sp/>MCAN_ELEM_SIZE_24BYTES<sp/>(4U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180" refid="_m_c_a_n_8h_1ac51e7858760d81fad6c3aea552c9065a" refkind="member"><highlight class="preprocessor">#define<sp/>MCAN_ELEM_SIZE_32BYTES<sp/>(5U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182" refid="_m_c_a_n_8h_1a14e027d61be660abc48a70dd0a1fdfa0" refkind="member"><highlight class="preprocessor">#define<sp/>MCAN_ELEM_SIZE_48BYTES<sp/>(6U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184" refid="_m_c_a_n_8h_1a4fbec31aaf38cae443247e4134ca6e7b" refkind="member"><highlight class="preprocessor">#define<sp/>MCAN_ELEM_SIZE_64BYTES<sp/>(7U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="comment">/*<sp/>@}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="196" refid="_m_c_a_n_8h_1a7530a147909f8ec15ca493a656f662c4" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="_m_c_a_n_8h_1a7530a147909f8ec15ca493a656f662c4" kindref="member">MCAN_TimeOutSelect</ref>;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198" refid="_m_c_a_n_8h_1a21bcd8223f6104f45863ab623191216f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_TIMEOUT_SELECT_CONT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200" refid="_m_c_a_n_8h_1ae24164b2ad04df8cc6995e49f0d63ca4" refkind="member"><highlight class="preprocessor">#define<sp/>MCAN_TIMEOUT_SELECT_TX_EVENT_FIFO<sp/>(1U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202" refid="_m_c_a_n_8h_1a0d4a988f2968b7111a8733dcf52d5a12" refkind="member"><highlight class="preprocessor">#define<sp/>MCAN_TIMEOUT_SELECT_RX_FIFO0<sp/><sp/><sp/><sp/><sp/><sp/>(2U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204" refid="_m_c_a_n_8h_1ade550cdc03cb23c6b7008400e90509fa" refkind="member"><highlight class="preprocessor">#define<sp/>MCAN_TIMEOUT_SELECT_RX_FIFO1<sp/><sp/><sp/><sp/><sp/><sp/>(3U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="comment">/*<sp/>@}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="216" refid="_m_c_a_n_8h_1ab73d229600459ca4565a06a038f58bf1" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="_m_c_a_n_8h_1ab73d229600459ca4565a06a038f58bf1" kindref="member">MCAN_IntSrc</ref>;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218" refid="_m_c_a_n_8h_1a13f45e6d4aab566194dedceeea4fb95f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_INT_SRC_RX_FIFO0_NEW_MSG<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(MCAN_IR_RF0N_MASK)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220" refid="_m_c_a_n_8h_1a97ea215fd8f648562ed235a603ccb212" refkind="member"><highlight class="preprocessor">#define<sp/>MCAN_INT_SRC_RX_FIFO0_WATERMARK<sp/><sp/><sp/><sp/><sp/>(MCAN_IR_RF0W_MASK)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222" refid="_m_c_a_n_8h_1aa3bffcf2a55cebba3477427a3608b79d" refkind="member"><highlight class="preprocessor">#define<sp/>MCAN_INT_SRC_RX_FIFO0_FULL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(MCAN_IR_RF0F_MASK)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224" refid="_m_c_a_n_8h_1a78b562dba63fd6d1a941ae791d26d539" refkind="member"><highlight class="preprocessor">#define<sp/>MCAN_INT_SRC_RX_FIFO0_MSG_LOST<sp/><sp/><sp/><sp/><sp/><sp/>(MCAN_IR_RF0L_MASK)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226" refid="_m_c_a_n_8h_1afcce0925180c36710c36f913688b785f" refkind="member"><highlight class="preprocessor">#define<sp/>MCAN_INT_SRC_RX_FIFO1_NEW_MSG<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(MCAN_IR_RF1N_MASK)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228" refid="_m_c_a_n_8h_1a28f37f11c1ec2c0ae78969478ebdf416" refkind="member"><highlight class="preprocessor">#define<sp/>MCAN_INT_SRC_RX_FIFO1_WATERMARK<sp/><sp/><sp/><sp/><sp/>(MCAN_IR_RF1W_MASK)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230" refid="_m_c_a_n_8h_1a9a76f846fac373c5ff48c8161e0ff2d6" refkind="member"><highlight class="preprocessor">#define<sp/>MCAN_INT_SRC_RX_FIFO1_FULL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(MCAN_IR_RF1F_MASK)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232" refid="_m_c_a_n_8h_1ab6f661973933e78973a8f9925973797d" refkind="member"><highlight class="preprocessor">#define<sp/>MCAN_INT_SRC_RX_FIFO1_MSG_LOST<sp/><sp/><sp/><sp/><sp/><sp/>(MCAN_IR_RF1L_MASK)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234" refid="_m_c_a_n_8h_1a2d5c5312d8ae61975439bc70e2be5229" refkind="member"><highlight class="preprocessor">#define<sp/>MCAN_INT_SRC_HIGH_PRIO_MSG<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(MCAN_IR_HPM_MASK)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236" refid="_m_c_a_n_8h_1a78bbb7d9cd8a4695f31803b0d26435f4" refkind="member"><highlight class="preprocessor">#define<sp/>MCAN_INT_SRC_TRANS_COMPLETE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(MCAN_IR_TC_MASK)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238" refid="_m_c_a_n_8h_1a19a532f80733d87f5851475ee997b30e" refkind="member"><highlight class="preprocessor">#define<sp/>MCAN_INT_SRC_TRANS_CANCEL_FINISH<sp/><sp/><sp/><sp/>(MCAN_IR_TCF_MASK)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240" refid="_m_c_a_n_8h_1ad36d8f9f96ba69862d01d344b0ffb21d" refkind="member"><highlight class="preprocessor">#define<sp/>MCAN_INT_SRC_TX_FIFO_EMPTY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(MCAN_IR_TFE_MASK)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242" refid="_m_c_a_n_8h_1a4ba9de847731dda13952d7353477799e" refkind="member"><highlight class="preprocessor">#define<sp/>MCAN_INT_SRC_TX_EVT_FIFO_NEW_ENTRY<sp/><sp/>(MCAN_IR_TEFN_MASK)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244" refid="_m_c_a_n_8h_1a36aa486dd57be4f1f880956816db4878" refkind="member"><highlight class="preprocessor">#define<sp/>MCAN_INT_SRC_TX_EVT_FIFO_WATERMARK<sp/><sp/>(MCAN_IR_TEFW_MASK)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246" refid="_m_c_a_n_8h_1afcca3f61d70cc9345888cf2c73e9b921" refkind="member"><highlight class="preprocessor">#define<sp/>MCAN_INT_SRC_TX_EVT_FIFO_FULL<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(MCAN_IR_TEFF_MASK)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248" refid="_m_c_a_n_8h_1a23251a1550d3def0e78d8593cd286760" refkind="member"><highlight class="preprocessor">#define<sp/>MCAN_INT_SRC_TX_EVT_FIFO_ELEM_LOST<sp/><sp/>(MCAN_IR_TEFL_MASK)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250" refid="_m_c_a_n_8h_1a1c0e8e3746016b07d3d0246918a810f2" refkind="member"><highlight class="preprocessor">#define<sp/>MCAN_INT_SRC_TIMESTAMP_WRAPAROUND<sp/><sp/><sp/>(MCAN_IR_TSW_MASK)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252" refid="_m_c_a_n_8h_1ad3debdbbe67bd1de1cf0205a0bb30405" refkind="member"><highlight class="preprocessor">#define<sp/>MCAN_INT_SRC_MSG_RAM_ACCESS_FAILURE<sp/>(MCAN_IR_MRAF_MASK)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254" refid="_m_c_a_n_8h_1a61db1849cffa42549c5d80c41ebf9192" refkind="member"><highlight class="preprocessor">#define<sp/>MCAN_INT_SRC_TIMEOUT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(MCAN_IR_TOO_MASK)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256" refid="_m_c_a_n_8h_1adc579ec34e34726cbd86bd031a92c9d4" refkind="member"><highlight class="preprocessor">#define<sp/>MCAN_INT_SRC_DEDICATED_RX_BUFF_MSG<sp/><sp/>(MCAN_IR_DRX_MASK)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258" refid="_m_c_a_n_8h_1a3315591b5e8c2ba54aa2e7b9e95f7cec" refkind="member"><highlight class="preprocessor">#define<sp/>MCAN_INT_SRC_BIT_ERR_CORRECTED<sp/><sp/><sp/><sp/><sp/><sp/>(MCAN_IR_BEC_MASK)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260" refid="_m_c_a_n_8h_1a183f7c50f3f50c2c6681a71b9737cbe6" refkind="member"><highlight class="preprocessor">#define<sp/>MCAN_INT_SRC_BIT_ERR_UNCORRECTED<sp/><sp/><sp/><sp/>(MCAN_IR_BEU_MASK)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262" refid="_m_c_a_n_8h_1a207495e53dab29491e9ce2bddf2be80d" refkind="member"><highlight class="preprocessor">#define<sp/>MCAN_INT_SRC_ERR_LOG_OVERFLOW<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(MCAN_IR_ELO_MASK)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264" refid="_m_c_a_n_8h_1ae0c935b78099724b5bd656d261bc1d66" refkind="member"><highlight class="preprocessor">#define<sp/>MCAN_INT_SRC_ERR_PASSIVE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(MCAN_IR_EP_MASK)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266" refid="_m_c_a_n_8h_1a658c6bb1cc22e3e01aa4f6cfc7095bf3" refkind="member"><highlight class="preprocessor">#define<sp/>MCAN_INT_SRC_WARNING_STATUS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(MCAN_IR_EW_MASK)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268" refid="_m_c_a_n_8h_1a91881fed729a4bd7b4b454590e2e54c4" refkind="member"><highlight class="preprocessor">#define<sp/>MCAN_INT_SRC_BUS_OFF_STATUS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(MCAN_IR_BO_MASK)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270" refid="_m_c_a_n_8h_1aa4fd794c1b1a0a7d979c1a4be2abef47" refkind="member"><highlight class="preprocessor">#define<sp/>MCAN_INT_SRC_WATCHDOG<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(MCAN_IR_WDI_MASK)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272" refid="_m_c_a_n_8h_1a776923f6431352565663cf531e5bcf0c" refkind="member"><highlight class="preprocessor">#define<sp/>MCAN_INT_SRC_PROTOCOL_ERR_ARB<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(MCAN_IR_PEA_MASK)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274" refid="_m_c_a_n_8h_1aefa6d163557c08244d9d4fdb8fea9be3" refkind="member"><highlight class="preprocessor">#define<sp/>MCAN_INT_SRC_PROTOCOL_ERR_DATA<sp/><sp/><sp/><sp/><sp/><sp/>(MCAN_IR_PED_MASK)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276" refid="_m_c_a_n_8h_1a7dd4d761d0539198bbe768dd20172242" refkind="member"><highlight class="preprocessor">#define<sp/>MCAN_INT_SRC_RES_ADDR_ACCESS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(MCAN_IR_ARA_MASK)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="comment">/*<sp/>@}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="288" refid="_m_c_a_n_8h_1a4b23ad6eb42ea29586b46b0f2b54714d" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="_m_c_a_n_8h_1a4b23ad6eb42ea29586b46b0f2b54714d" kindref="member">MCAN_LpbkMode</ref>;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290" refid="_m_c_a_n_8h_1af05c895aaad161cb819d201baa485fc6" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_LPBK_MODE_INTERNAL<sp/>(0U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="295" refid="_m_c_a_n_8h_1ab6fa4cd4434caa25a02d245c4e2ff54a" refkind="member"><highlight class="preprocessor">#define<sp/>MCAN_LPBK_MODE_EXTERNAL<sp/>(1U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="comment">/*<sp/>@}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="311" refid="_m_c_a_n_8h_1a88fdc98126e7833bd9a065fa15544156" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="_m_c_a_n_8h_1a88fdc98126e7833bd9a065fa15544156" kindref="member">MCAN_ComState</ref>;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313" refid="_m_c_a_n_8h_1a6a8cfd16736578b75f9c219c0eac5c15" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_COM_STATE_SYNCHRONIZING<sp/>(0U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315" refid="_m_c_a_n_8h_1a18172ca0c145e8b9fcce64f619098e8a" refkind="member"><highlight class="preprocessor">#define<sp/>MCAN_COM_STATE_IDLE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(1U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317" refid="_m_c_a_n_8h_1aa339362e8669c5e2d0ce506860ef09a0" refkind="member"><highlight class="preprocessor">#define<sp/>MCAN_COM_STATE_RECEIVER<sp/><sp/><sp/><sp/><sp/><sp/>(2U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319" refid="_m_c_a_n_8h_1acc413ffd121663f54e7696c8dfc2ddc8" refkind="member"><highlight class="preprocessor">#define<sp/>MCAN_COM_STATE_TRANSMITTER<sp/><sp/><sp/>(3U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="comment">/*<sp/>@}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="331" refid="_m_c_a_n_8h_1acfd63436ff4331937d07aa3088677c6a" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="_m_c_a_n_8h_1acfd63436ff4331937d07aa3088677c6a" kindref="member">MCAN_GFCNonMatching</ref>;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333" refid="_m_c_a_n_8h_1a4551b99123b214166fcecfda7080fb47" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_GFC_NM_ACCEPT_INTO_RXFIFO0<sp/>(0U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335" refid="_m_c_a_n_8h_1a2d0625494fcfef3da79f2436031e0ba8" refkind="member"><highlight class="preprocessor">#define<sp/>MCAN_GFC_NM_ACCEPT_INTO_RXFIFO1<sp/>(1U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337" refid="_m_c_a_n_8h_1afa0a2140d76cae694ec50c96bf4fb066" refkind="member"><highlight class="preprocessor">#define<sp/>MCAN_GFC_NM_REJECT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(3U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="comment">/*<sp/>@}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="349" refid="_m_c_a_n_8h_1af6a587291234694473f819017f6a8f70" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="_m_c_a_n_8h_1af6a587291234694473f819017f6a8f70" kindref="member">MCAN_TSCCTimestampSel</ref>;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351" refid="_m_c_a_n_8h_1a881e1942d60eeb43d0bc231f37e39d9c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_TSCC_COUNTER_ALWAYS_0<sp/>(0U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353" refid="_m_c_a_n_8h_1af5a6ff87916a66ef66786a32068886a8" refkind="member"><highlight class="preprocessor">#define<sp/>MCAN_TSCC_COUNTER_USE_TCP<sp/><sp/>(1U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355" refid="_m_c_a_n_8h_1a6770962c151f7148f155ad2df08357f0" refkind="member"><highlight class="preprocessor">#define<sp/>MCAN_TSCC_COUNTER_EXTERNAL<sp/>(2U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="comment">/*<sp/>@}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="367" refid="_m_c_a_n_8h_1a7e186fa24481fcc4dee430789443fbfe" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="_m_c_a_n_8h_1a7e186fa24481fcc4dee430789443fbfe" kindref="member">MCAN_ErrCode</ref>;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369" refid="_m_c_a_n_8h_1a962da9dc65035c2814f8f9cb5566d7d0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_ERR_CODE_NO_ERROR<sp/><sp/><sp/><sp/>(0U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="373" refid="_m_c_a_n_8h_1a16150f1b7eeb4825c7b31d090cb06575" refkind="member"><highlight class="preprocessor">#define<sp/>MCAN_ERR_CODE_STUFF_ERROR<sp/>(1U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="377" refid="_m_c_a_n_8h_1ad6bc04773a86c605f55f4346aff2c4dd" refkind="member"><highlight class="preprocessor">#define<sp/>MCAN_ERR_CODE_FORM_ERROR<sp/><sp/>(2U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379" refid="_m_c_a_n_8h_1a2ffa9d1fb6062b3c8d743fb8d652fb6a" refkind="member"><highlight class="preprocessor">#define<sp/>MCAN_ERR_CODE_ACK_ERROR<sp/><sp/><sp/>(3U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="383" refid="_m_c_a_n_8h_1ae466fdaa67bde17c59bce5927346e624" refkind="member"><highlight class="preprocessor">#define<sp/>MCAN_ERR_CODE_BIT1_ERROR<sp/><sp/>(4U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="389" refid="_m_c_a_n_8h_1abac452d042d66b4e51e53c99817fea7b" refkind="member"><highlight class="preprocessor">#define<sp/>MCAN_ERR_CODE_BIT0_ERROR<sp/><sp/>(5U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="399" refid="_m_c_a_n_8h_1a03b3ef45c23003b46cc873856ba9f241" refkind="member"><highlight class="preprocessor">#define<sp/>MCAN_ERR_CODE_CRC_ERROR<sp/><sp/><sp/>(6U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="404" refid="_m_c_a_n_8h_1abe194505307cbfae9561c82255fd4c35" refkind="member"><highlight class="preprocessor">#define<sp/>MCAN_ERR_CODE_NO_CHANGE<sp/><sp/><sp/>(7U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="comment">/*<sp/>@}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="414" refid="struct_m_c_a_n___t_d_c_config" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal">{</highlight></codeline>
<codeline lineno="416" refid="struct_m_c_a_n___t_d_c_config_1aadeab20c96e14356e36bf8eaa142f24f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_m_c_a_n___t_d_c_config_1aadeab20c96e14356e36bf8eaa142f24f" kindref="member">tdcf</ref>;</highlight></codeline>
<codeline lineno="424" refid="struct_m_c_a_n___t_d_c_config_1a66a3f13a3dc513d32325bb91c20afb5b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_m_c_a_n___t_d_c_config_1a66a3f13a3dc513d32325bb91c20afb5b" kindref="member">tdco</ref>;</highlight></codeline>
<codeline lineno="433"><highlight class="normal">}<sp/><ref refid="struct_m_c_a_n___t_d_c_config" kindref="compound">MCAN_TDCConfig</ref>;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="441" refid="struct_m_c_a_n___bit_timing_params" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal">{</highlight></codeline>
<codeline lineno="443" refid="struct_m_c_a_n___bit_timing_params_1a1d1d25f18535a190e7cc3e20ad2008ae" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_m_c_a_n___bit_timing_params_1a1d1d25f18535a190e7cc3e20ad2008ae" kindref="member">nomRatePrescaler</ref>;</highlight></codeline>
<codeline lineno="448" refid="struct_m_c_a_n___bit_timing_params_1ac040488ed9023213e4aa84be0d05282f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_m_c_a_n___bit_timing_params_1ac040488ed9023213e4aa84be0d05282f" kindref="member">nomTimeSeg1</ref>;</highlight></codeline>
<codeline lineno="453" refid="struct_m_c_a_n___bit_timing_params_1a2f4a1fdd512dc7771fd1c0e32c5747b8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_m_c_a_n___bit_timing_params_1a2f4a1fdd512dc7771fd1c0e32c5747b8" kindref="member">nomTimeSeg2</ref>;</highlight></codeline>
<codeline lineno="458" refid="struct_m_c_a_n___bit_timing_params_1a6d47b6028092ad9f2d3690da0d531894" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_m_c_a_n___bit_timing_params_1a6d47b6028092ad9f2d3690da0d531894" kindref="member">nomSynchJumpWidth</ref>;</highlight></codeline>
<codeline lineno="463" refid="struct_m_c_a_n___bit_timing_params_1a656c59113e210d47bc46009224b31dea" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_m_c_a_n___bit_timing_params_1a656c59113e210d47bc46009224b31dea" kindref="member">dataRatePrescaler</ref>;</highlight></codeline>
<codeline lineno="469" refid="struct_m_c_a_n___bit_timing_params_1a5c243cfe4c056ba45e80c0e9a33ca76c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_m_c_a_n___bit_timing_params_1a5c243cfe4c056ba45e80c0e9a33ca76c" kindref="member">dataTimeSeg1</ref>;</highlight></codeline>
<codeline lineno="474" refid="struct_m_c_a_n___bit_timing_params_1a41d3656e5bf6aa2d92cc517fe029f1f3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_m_c_a_n___bit_timing_params_1a41d3656e5bf6aa2d92cc517fe029f1f3" kindref="member">dataTimeSeg2</ref>;</highlight></codeline>
<codeline lineno="479" refid="struct_m_c_a_n___bit_timing_params_1ac098d4e8be24b3b2fa4e2c11786d6531" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_m_c_a_n___bit_timing_params_1ac098d4e8be24b3b2fa4e2c11786d6531" kindref="member">dataSynchJumpWidth</ref>;</highlight></codeline>
<codeline lineno="484" refid="struct_m_c_a_n___bit_timing_params_1af736e11f094c675075e00f7d7966f297" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_m_c_a_n___t_d_c_config" kindref="compound">MCAN_TDCConfig</ref><sp/><ref refid="struct_m_c_a_n___bit_timing_params_1af736e11f094c675075e00f7d7966f297" kindref="member">tdcConfig</ref>;</highlight></codeline>
<codeline lineno="488"><highlight class="normal">}<sp/><ref refid="struct_m_c_a_n___bit_timing_params" kindref="compound">MCAN_BitTimingParams</ref>;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="493" refid="struct_m_c_a_n___global_filt_config" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal">{</highlight></codeline>
<codeline lineno="495" refid="struct_m_c_a_n___global_filt_config_1a814dd8d6c561af2afa82c5ae10a59bff" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_m_c_a_n___global_filt_config_1a814dd8d6c561af2afa82c5ae10a59bff" kindref="member">rrfe</ref>;</highlight></codeline>
<codeline lineno="500" refid="struct_m_c_a_n___global_filt_config_1a722ff95c4b7ba1c70113abd11747f7db" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_m_c_a_n___global_filt_config_1a722ff95c4b7ba1c70113abd11747f7db" kindref="member">rrfs</ref>;</highlight></codeline>
<codeline lineno="505" refid="struct_m_c_a_n___global_filt_config_1ab2721f980dc7dbbcd277053dd7e955d6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>MCAN_GFCNonMatching<sp/><ref refid="struct_m_c_a_n___global_filt_config_1ab2721f980dc7dbbcd277053dd7e955d6" kindref="member">anfe</ref>;</highlight></codeline>
<codeline lineno="509" refid="struct_m_c_a_n___global_filt_config_1a6ef26d36ab372dda7a8ec567e2b38499" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>MCAN_GFCNonMatching<sp/><ref refid="struct_m_c_a_n___global_filt_config_1a6ef26d36ab372dda7a8ec567e2b38499" kindref="member">anfs</ref>;</highlight></codeline>
<codeline lineno="513"><highlight class="normal">}<sp/><ref refid="struct_m_c_a_n___global_filt_config" kindref="compound">MCAN_GlobalFiltConfig</ref>;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="518" refid="struct_m_c_a_n___init_params" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal">{</highlight></codeline>
<codeline lineno="520" refid="struct_m_c_a_n___init_params_1a25c9cb93e2e7bb4fc8463e51196dcc8a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_m_c_a_n___init_params_1a25c9cb93e2e7bb4fc8463e51196dcc8a" kindref="member">fdMode</ref>;</highlight></codeline>
<codeline lineno="525" refid="struct_m_c_a_n___init_params_1a028cb401be75c57bc8d080fc772a6c90" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_m_c_a_n___init_params_1a028cb401be75c57bc8d080fc772a6c90" kindref="member">brsEnable</ref>;</highlight></codeline>
<codeline lineno="531" refid="struct_m_c_a_n___init_params_1a4e0b2bf2faccfe23f86072a09213985f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_m_c_a_n___init_params_1a4e0b2bf2faccfe23f86072a09213985f" kindref="member">txpEnable</ref>;</highlight></codeline>
<codeline lineno="536" refid="struct_m_c_a_n___init_params_1ad3f6d2768c9ecc44a07eebff8ad1edd3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_m_c_a_n___init_params_1ad3f6d2768c9ecc44a07eebff8ad1edd3" kindref="member">efbi</ref>;</highlight></codeline>
<codeline lineno="542" refid="struct_m_c_a_n___init_params_1a0ada65f24f0070e43b16604b70838787" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_m_c_a_n___init_params_1a0ada65f24f0070e43b16604b70838787" kindref="member">pxhDisable</ref>;</highlight></codeline>
<codeline lineno="547" refid="struct_m_c_a_n___init_params_1af95f3c4951549def09b7d4cf0a93809c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_m_c_a_n___init_params_1af95f3c4951549def09b7d4cf0a93809c" kindref="member">darEnable</ref>;</highlight></codeline>
<codeline lineno="553" refid="struct_m_c_a_n___init_params_1aca8353bc5d93cad6170fa45a29d3aca0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_m_c_a_n___init_params_1aca8353bc5d93cad6170fa45a29d3aca0" kindref="member">wdcPreload</ref>;</highlight></codeline>
<codeline lineno="557"><highlight class="normal">}<sp/><ref refid="struct_m_c_a_n___init_params" kindref="compound">MCAN_InitParams</ref>;</highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight></codeline>
<codeline lineno="562" refid="struct_m_c_a_n___config_params" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal">{</highlight></codeline>
<codeline lineno="564" refid="struct_m_c_a_n___config_params_1a3fc88ce579da88ea0009612f8f553f48" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_m_c_a_n___config_params_1a3fc88ce579da88ea0009612f8f553f48" kindref="member">monEnable</ref>;</highlight></codeline>
<codeline lineno="569" refid="struct_m_c_a_n___config_params_1a06ad594e3a8284faf3bb5396b3f1dd60" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_m_c_a_n___config_params_1a06ad594e3a8284faf3bb5396b3f1dd60" kindref="member">asmEnable</ref>;</highlight></codeline>
<codeline lineno="575" refid="struct_m_c_a_n___config_params_1a19325bb757de6f67e007f2ba7b001ffc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_m_c_a_n___config_params_1a19325bb757de6f67e007f2ba7b001ffc" kindref="member">tsPrescaler</ref>;</highlight></codeline>
<codeline lineno="582" refid="struct_m_c_a_n___config_params_1a71821a72b45fd102de45030874a39d94" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>MCAN_TSCCTimestampSel<sp/><ref refid="struct_m_c_a_n___config_params_1a71821a72b45fd102de45030874a39d94" kindref="member">tsSelect</ref>;</highlight></codeline>
<codeline lineno="586" refid="struct_m_c_a_n___config_params_1aead6d2b3c634c7ad38b1e640f582ab51" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>MCAN_TimeOutSelect<sp/><ref refid="struct_m_c_a_n___config_params_1aead6d2b3c634c7ad38b1e640f582ab51" kindref="member">timeoutSelect</ref>;</highlight></codeline>
<codeline lineno="590" refid="struct_m_c_a_n___config_params_1a2be3699f998413677f9d02ee0d6b9eca" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_m_c_a_n___config_params_1a2be3699f998413677f9d02ee0d6b9eca" kindref="member">timeoutPreload</ref>;</highlight></codeline>
<codeline lineno="596" refid="struct_m_c_a_n___config_params_1a51874a6004307237da86f28776c11ed1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_m_c_a_n___config_params_1a51874a6004307237da86f28776c11ed1" kindref="member">timeoutCntEnable</ref>;</highlight></codeline>
<codeline lineno="601" refid="struct_m_c_a_n___config_params_1ada3c844f969d8ddf7ba915f477ffc3c4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_m_c_a_n___global_filt_config" kindref="compound">MCAN_GlobalFiltConfig</ref><sp/><ref refid="struct_m_c_a_n___config_params_1ada3c844f969d8ddf7ba915f477ffc3c4" kindref="member">filterConfig</ref>;</highlight></codeline>
<codeline lineno="605"><highlight class="normal">}<sp/><ref refid="struct_m_c_a_n___config_params" kindref="compound">MCAN_ConfigParams</ref>;</highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight></codeline>
<codeline lineno="610" refid="struct_m_c_a_n___err_cnt_status" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal">{</highlight></codeline>
<codeline lineno="612" refid="struct_m_c_a_n___err_cnt_status_1a015e6854c9fac23702c82173eb5b1370" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_m_c_a_n___err_cnt_status_1a015e6854c9fac23702c82173eb5b1370" kindref="member">transErrLogCnt</ref>;</highlight></codeline>
<codeline lineno="614" refid="struct_m_c_a_n___err_cnt_status_1affcba81686258700df21df84811084bf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_m_c_a_n___err_cnt_status_1affcba81686258700df21df84811084bf" kindref="member">recErrCnt</ref>;</highlight></codeline>
<codeline lineno="616" refid="struct_m_c_a_n___err_cnt_status_1a563748180e775b4e5c41476573ea5181" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_m_c_a_n___err_cnt_status_1a563748180e775b4e5c41476573ea5181" kindref="member">rpStatus</ref>;</highlight></codeline>
<codeline lineno="621" refid="struct_m_c_a_n___err_cnt_status_1a7bff24b0e0c29378279d3a35b0316635" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_m_c_a_n___err_cnt_status_1a7bff24b0e0c29378279d3a35b0316635" kindref="member">canErrLogCnt</ref>;</highlight></codeline>
<codeline lineno="623"><highlight class="normal">}<sp/><ref refid="struct_m_c_a_n___err_cnt_status" kindref="compound">MCAN_ErrCntStatus</ref>;</highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight></codeline>
<codeline lineno="628" refid="struct_m_c_a_n___protocol_status" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal">{</highlight></codeline>
<codeline lineno="630" refid="struct_m_c_a_n___protocol_status_1a0ea8b13c916cbe5da4f8de3e9ae4cf13" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>MCAN_ErrCode<sp/><ref refid="struct_m_c_a_n___protocol_status_1a0ea8b13c916cbe5da4f8de3e9ae4cf13" kindref="member">lastErrCode</ref>;</highlight></codeline>
<codeline lineno="634" refid="struct_m_c_a_n___protocol_status_1a6d5e797ad474120f8fbd1e1cbab5b133" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>MCAN_ComState<sp/><ref refid="struct_m_c_a_n___protocol_status_1a6d5e797ad474120f8fbd1e1cbab5b133" kindref="member">act</ref>;</highlight></codeline>
<codeline lineno="638" refid="struct_m_c_a_n___protocol_status_1a84072793f15619f159c2da289c1a7878" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_m_c_a_n___protocol_status_1a84072793f15619f159c2da289c1a7878" kindref="member">errPassive</ref>;</highlight></codeline>
<codeline lineno="643" refid="struct_m_c_a_n___protocol_status_1ae759c96341f36468777805e7b3ce66e7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_m_c_a_n___protocol_status_1ae759c96341f36468777805e7b3ce66e7" kindref="member">warningStatus</ref>;</highlight></codeline>
<codeline lineno="649" refid="struct_m_c_a_n___protocol_status_1a3635523b04a3681752e809ada431d64d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_m_c_a_n___protocol_status_1a3635523b04a3681752e809ada431d64d" kindref="member">busOffStatus</ref>;</highlight></codeline>
<codeline lineno="654" refid="struct_m_c_a_n___protocol_status_1a8ab98212a01918a1c8e9c35333908cf6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>MCAN_ErrCode<sp/><ref refid="struct_m_c_a_n___protocol_status_1a8ab98212a01918a1c8e9c35333908cf6" kindref="member">dlec</ref>;</highlight></codeline>
<codeline lineno="658" refid="struct_m_c_a_n___protocol_status_1a673f70d521caa89898f9df5c4a238a60" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_m_c_a_n___protocol_status_1a673f70d521caa89898f9df5c4a238a60" kindref="member">resi</ref>;</highlight></codeline>
<codeline lineno="663" refid="struct_m_c_a_n___protocol_status_1a6e9d87efae493102669e959389bd3cf4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_m_c_a_n___protocol_status_1a6e9d87efae493102669e959389bd3cf4" kindref="member">rbrs</ref>;</highlight></codeline>
<codeline lineno="668" refid="struct_m_c_a_n___protocol_status_1a1bf1c5f25ce0ad02701487597eea9224" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_m_c_a_n___protocol_status_1a1bf1c5f25ce0ad02701487597eea9224" kindref="member">rfdf</ref>;</highlight></codeline>
<codeline lineno="674" refid="struct_m_c_a_n___protocol_status_1a5f604b801fc02e6acc3edd377295c553" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_m_c_a_n___protocol_status_1a5f604b801fc02e6acc3edd377295c553" kindref="member">pxe</ref>;</highlight></codeline>
<codeline lineno="679" refid="struct_m_c_a_n___protocol_status_1a42bb50172cfd6a8a345dd4c2eeed0002" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_m_c_a_n___protocol_status_1a42bb50172cfd6a8a345dd4c2eeed0002" kindref="member">tdcv</ref>;</highlight></codeline>
<codeline lineno="681"><highlight class="normal">}<sp/><ref refid="struct_m_c_a_n___protocol_status" kindref="compound">MCAN_ProtocolStatus</ref>;</highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight></codeline>
<codeline lineno="699" refid="struct_m_c_a_n___msg_ram_config" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal">{</highlight></codeline>
<codeline lineno="701" refid="struct_m_c_a_n___msg_ram_config_1ad4be1bf3dac9230840fb91357b28e5d1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_m_c_a_n___msg_ram_config_1ad4be1bf3dac9230840fb91357b28e5d1" kindref="member">sidFilterStartAddr</ref>;</highlight></codeline>
<codeline lineno="703" refid="struct_m_c_a_n___msg_ram_config_1a5b7a738519c10ba4c98e7c79c517fd6e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_m_c_a_n___msg_ram_config_1a5b7a738519c10ba4c98e7c79c517fd6e" kindref="member">sidFilterListSize</ref>;</highlight></codeline>
<codeline lineno="708" refid="struct_m_c_a_n___msg_ram_config_1ac236f98b97e9e1998e6edadf7e9305d9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_m_c_a_n___msg_ram_config_1ac236f98b97e9e1998e6edadf7e9305d9" kindref="member">xidFilterStartAddr</ref>;</highlight></codeline>
<codeline lineno="710" refid="struct_m_c_a_n___msg_ram_config_1a9f5bb28e69be157811bbc33ecb839ffd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_m_c_a_n___msg_ram_config_1a9f5bb28e69be157811bbc33ecb839ffd" kindref="member">xidFilterListSize</ref>;</highlight></codeline>
<codeline lineno="716" refid="struct_m_c_a_n___msg_ram_config_1a7f0ef5724369a9c221c47d41c1f1f286" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_m_c_a_n___msg_ram_config_1a7f0ef5724369a9c221c47d41c1f1f286" kindref="member">rxFifo0StartAddr</ref>;</highlight></codeline>
<codeline lineno="718" refid="struct_m_c_a_n___msg_ram_config_1a149c0fee5c036efb2b4ad3f1ba283804" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_m_c_a_n___msg_ram_config_1a149c0fee5c036efb2b4ad3f1ba283804" kindref="member">rxFifo0Size</ref>;</highlight></codeline>
<codeline lineno="723" refid="struct_m_c_a_n___msg_ram_config_1ac6fdb3bd3eddf6e324743ed49dcafbf8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_m_c_a_n___msg_ram_config_1ac6fdb3bd3eddf6e324743ed49dcafbf8" kindref="member">rxFifo0Watermark</ref>;</highlight></codeline>
<codeline lineno="728" refid="struct_m_c_a_n___msg_ram_config_1a6c52e8391fdaf186fc80aeb3acdd72fa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_m_c_a_n___msg_ram_config_1a6c52e8391fdaf186fc80aeb3acdd72fa" kindref="member">rxFifo0OpMode</ref>;</highlight></codeline>
<codeline lineno="733" refid="struct_m_c_a_n___msg_ram_config_1a9550b88029c021fd73fbfdbb297cc6fc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_m_c_a_n___msg_ram_config_1a9550b88029c021fd73fbfdbb297cc6fc" kindref="member">rxFifo1StartAddr</ref>;</highlight></codeline>
<codeline lineno="735" refid="struct_m_c_a_n___msg_ram_config_1a5662fd29d9dfa5c3e84d8c31cc810e62" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_m_c_a_n___msg_ram_config_1a5662fd29d9dfa5c3e84d8c31cc810e62" kindref="member">rxFifo1Size</ref>;</highlight></codeline>
<codeline lineno="740" refid="struct_m_c_a_n___msg_ram_config_1a6f8fc13dde4afbbb8c1f99166dff0941" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_m_c_a_n___msg_ram_config_1a6f8fc13dde4afbbb8c1f99166dff0941" kindref="member">rxFifo1Watermark</ref>;</highlight></codeline>
<codeline lineno="745" refid="struct_m_c_a_n___msg_ram_config_1ac02ce9cde816d67a95c23fad8bcea333" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_m_c_a_n___msg_ram_config_1ac02ce9cde816d67a95c23fad8bcea333" kindref="member">rxFifo1OpMode</ref>;</highlight></codeline>
<codeline lineno="750" refid="struct_m_c_a_n___msg_ram_config_1a8203d5298f907f2c77b7de55197d03c6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_m_c_a_n___msg_ram_config_1a8203d5298f907f2c77b7de55197d03c6" kindref="member">rxBufStartAddr</ref>;</highlight></codeline>
<codeline lineno="752" refid="struct_m_c_a_n___msg_ram_config_1aff7ffef2bda82bba526d5ea4d1ff6186" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_m_c_a_n___msg_ram_config_1aff7ffef2bda82bba526d5ea4d1ff6186" kindref="member">rxBufElemSize</ref>;</highlight></codeline>
<codeline lineno="754" refid="struct_m_c_a_n___msg_ram_config_1adf17c2b1d2b1b1387afef1bbc6209ea8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_m_c_a_n___msg_ram_config_1adf17c2b1d2b1b1387afef1bbc6209ea8" kindref="member">rxFifo0ElemSize</ref>;</highlight></codeline>
<codeline lineno="756" refid="struct_m_c_a_n___msg_ram_config_1a31bcbf9b132ec72971c6778eb298540c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_m_c_a_n___msg_ram_config_1a31bcbf9b132ec72971c6778eb298540c" kindref="member">rxFifo1ElemSize</ref>;</highlight></codeline>
<codeline lineno="759" refid="struct_m_c_a_n___msg_ram_config_1adf0e7fd53d871eec6613f5d135d09206" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_m_c_a_n___msg_ram_config_1adf0e7fd53d871eec6613f5d135d09206" kindref="member">txEventFifoStartAddr</ref>;</highlight></codeline>
<codeline lineno="761" refid="struct_m_c_a_n___msg_ram_config_1a416a626791c8771b5c5567876076605b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_m_c_a_n___msg_ram_config_1a416a626791c8771b5c5567876076605b" kindref="member">txEventFifoSize</ref>;</highlight></codeline>
<codeline lineno="766" refid="struct_m_c_a_n___msg_ram_config_1a15718248837d20f573fc59c0ce00741c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_m_c_a_n___msg_ram_config_1a15718248837d20f573fc59c0ce00741c" kindref="member">txEventFifoWatermark</ref>;</highlight></codeline>
<codeline lineno="772" refid="struct_m_c_a_n___msg_ram_config_1a9cad046d84ea91485ea5748fe0107d96" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_m_c_a_n___msg_ram_config_1a9cad046d84ea91485ea5748fe0107d96" kindref="member">txBufStartAddr</ref>;</highlight></codeline>
<codeline lineno="774" refid="struct_m_c_a_n___msg_ram_config_1a63d66dd376d5b648a147eaeb17ddf688" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_m_c_a_n___msg_ram_config_1a63d66dd376d5b648a147eaeb17ddf688" kindref="member">txBufNum</ref>;</highlight></codeline>
<codeline lineno="779" refid="struct_m_c_a_n___msg_ram_config_1ada6479c75d573904d82a096493197e53" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_m_c_a_n___msg_ram_config_1ada6479c75d573904d82a096493197e53" kindref="member">txFifoQSize</ref>;</highlight></codeline>
<codeline lineno="784" refid="struct_m_c_a_n___msg_ram_config_1a0fdea131e91883234935366e9dbb979b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_m_c_a_n___msg_ram_config_1a0fdea131e91883234935366e9dbb979b" kindref="member">txFifoQMode</ref>;</highlight></codeline>
<codeline lineno="789" refid="struct_m_c_a_n___msg_ram_config_1a9516be0ef9f0d5012b2155b2fd90680a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_m_c_a_n___msg_ram_config_1a9516be0ef9f0d5012b2155b2fd90680a" kindref="member">txBufElemSize</ref>;</highlight></codeline>
<codeline lineno="791"><highlight class="normal">}<sp/><ref refid="struct_m_c_a_n___msg_ram_config" kindref="compound">MCAN_MsgRamConfig</ref>;</highlight></codeline>
<codeline lineno="792"><highlight class="normal"></highlight></codeline>
<codeline lineno="796" refid="struct_m_c_a_n___high_priority_msg_info" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal">{</highlight></codeline>
<codeline lineno="798" refid="struct_m_c_a_n___high_priority_msg_info_1a4051a57d7cc00a77db4ab553f0c66dab" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_m_c_a_n___high_priority_msg_info_1a4051a57d7cc00a77db4ab553f0c66dab" kindref="member">bufIdx</ref>;</highlight></codeline>
<codeline lineno="802" refid="struct_m_c_a_n___high_priority_msg_info_1a899ad5d23068dee798ae3ca1d67b18bc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_m_c_a_n___high_priority_msg_info_1a899ad5d23068dee798ae3ca1d67b18bc" kindref="member">msi</ref>;</highlight></codeline>
<codeline lineno="809" refid="struct_m_c_a_n___high_priority_msg_info_1ae8e102e4d68f5f406bdef04839e0da9b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_m_c_a_n___high_priority_msg_info_1ae8e102e4d68f5f406bdef04839e0da9b" kindref="member">filterIdx</ref>;</highlight></codeline>
<codeline lineno="811" refid="struct_m_c_a_n___high_priority_msg_info_1a20f96dc8f3470fbacd3de402bec9cc34" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_m_c_a_n___high_priority_msg_info_1a20f96dc8f3470fbacd3de402bec9cc34" kindref="member">filterList</ref>;</highlight></codeline>
<codeline lineno="816"><highlight class="normal">}<sp/><ref refid="struct_m_c_a_n___high_priority_msg_info" kindref="compound">MCAN_HighPriorityMsgInfo</ref>;</highlight></codeline>
<codeline lineno="817"><highlight class="normal"></highlight></codeline>
<codeline lineno="821" refid="struct_m_c_a_n___rx_new_data_status" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="822"><highlight class="normal">{</highlight></codeline>
<codeline lineno="823" refid="struct_m_c_a_n___rx_new_data_status_1a5d1b7d6ce1195fe244dda5b7480bbdd2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_m_c_a_n___rx_new_data_status_1a5d1b7d6ce1195fe244dda5b7480bbdd2" kindref="member">statusLow</ref>;</highlight></codeline>
<codeline lineno="825" refid="struct_m_c_a_n___rx_new_data_status_1ad6b7bdb581bf74416bb5618afb622700" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_m_c_a_n___rx_new_data_status_1ad6b7bdb581bf74416bb5618afb622700" kindref="member">statusHigh</ref>;</highlight></codeline>
<codeline lineno="827"><highlight class="normal">}<sp/><ref refid="struct_m_c_a_n___rx_new_data_status" kindref="compound">MCAN_RxNewDataStatus</ref>;</highlight></codeline>
<codeline lineno="828"><highlight class="normal"></highlight></codeline>
<codeline lineno="832" refid="struct_m_c_a_n___rx_fifo_status" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="833"><highlight class="normal">{</highlight></codeline>
<codeline lineno="834" refid="struct_m_c_a_n___rx_fifo_status_1ab4f861604a11fd2cbf36f9e34bf92df1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_m_c_a_n___rx_fifo_status_1ab4f861604a11fd2cbf36f9e34bf92df1" kindref="member">fillLvl</ref>;</highlight></codeline>
<codeline lineno="836" refid="struct_m_c_a_n___rx_fifo_status_1a4daaf03d20fa3f3de260d2cbbd7b5039" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_m_c_a_n___rx_fifo_status_1a4daaf03d20fa3f3de260d2cbbd7b5039" kindref="member">getIdx</ref>;</highlight></codeline>
<codeline lineno="838" refid="struct_m_c_a_n___rx_fifo_status_1ad931795809447bd7f0a1a07f82acb8eb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_m_c_a_n___rx_fifo_status_1ad931795809447bd7f0a1a07f82acb8eb" kindref="member">putIdx</ref>;</highlight></codeline>
<codeline lineno="840" refid="struct_m_c_a_n___rx_fifo_status_1a8678cc17d09f3b2a1710f39bb5c677c3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_m_c_a_n___rx_fifo_status_1a8678cc17d09f3b2a1710f39bb5c677c3" kindref="member">fifoFull</ref>;</highlight></codeline>
<codeline lineno="845" refid="struct_m_c_a_n___rx_fifo_status_1a82307585a247db160b2e6fe4b0f5a4a5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_m_c_a_n___rx_fifo_status_1a82307585a247db160b2e6fe4b0f5a4a5" kindref="member">msgLost</ref>;</highlight></codeline>
<codeline lineno="847"><highlight class="normal">}<sp/><ref refid="struct_m_c_a_n___rx_fifo_status" kindref="compound">MCAN_RxFifoStatus</ref>;</highlight></codeline>
<codeline lineno="848"><highlight class="normal"></highlight></codeline>
<codeline lineno="852" refid="struct_m_c_a_n___tx_fifo_q_status" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="853"><highlight class="normal">{</highlight></codeline>
<codeline lineno="854" refid="struct_m_c_a_n___tx_fifo_q_status_1a6cd860124bff1c2a4f5711cabfd600d5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_m_c_a_n___tx_fifo_q_status_1a6cd860124bff1c2a4f5711cabfd600d5" kindref="member">freeLvl</ref>;</highlight></codeline>
<codeline lineno="856" refid="struct_m_c_a_n___tx_fifo_q_status_1a48f27efe28344f9b48d50b542b139d8d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_m_c_a_n___tx_fifo_q_status_1a48f27efe28344f9b48d50b542b139d8d" kindref="member">getIdx</ref>;</highlight></codeline>
<codeline lineno="860" refid="struct_m_c_a_n___tx_fifo_q_status_1a4494bfd7735a0be4d2cd5fe52f03f218" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_m_c_a_n___tx_fifo_q_status_1a4494bfd7735a0be4d2cd5fe52f03f218" kindref="member">putIdx</ref>;</highlight></codeline>
<codeline lineno="862" refid="struct_m_c_a_n___tx_fifo_q_status_1a114b22c1ed607ecfc980ebfcdaabde4d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_m_c_a_n___tx_fifo_q_status_1a114b22c1ed607ecfc980ebfcdaabde4d" kindref="member">fifoFull</ref>;</highlight></codeline>
<codeline lineno="867"><highlight class="normal">}<sp/><ref refid="struct_m_c_a_n___tx_fifo_q_status" kindref="compound">MCAN_TxFifoQStatus</ref>;</highlight></codeline>
<codeline lineno="868"><highlight class="normal"></highlight></codeline>
<codeline lineno="872" refid="struct_m_c_a_n___tx_event_fifo_status" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="873"><highlight class="normal">{</highlight></codeline>
<codeline lineno="874" refid="struct_m_c_a_n___tx_event_fifo_status_1a4c047635832f3474e866b942ffe103d1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_m_c_a_n___tx_event_fifo_status_1a4c047635832f3474e866b942ffe103d1" kindref="member">fillLvl</ref>;</highlight></codeline>
<codeline lineno="876" refid="struct_m_c_a_n___tx_event_fifo_status_1a7442cffc101599ce3a23f93ef2a8b83d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_m_c_a_n___tx_event_fifo_status_1a7442cffc101599ce3a23f93ef2a8b83d" kindref="member">getIdx</ref>;</highlight></codeline>
<codeline lineno="878" refid="struct_m_c_a_n___tx_event_fifo_status_1aafed913972d8cdad28d30fef4aa7b3f0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_m_c_a_n___tx_event_fifo_status_1aafed913972d8cdad28d30fef4aa7b3f0" kindref="member">putIdx</ref>;</highlight></codeline>
<codeline lineno="880" refid="struct_m_c_a_n___tx_event_fifo_status_1aef7c1d676010bb6044dcea72bc41ccf3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_m_c_a_n___tx_event_fifo_status_1aef7c1d676010bb6044dcea72bc41ccf3" kindref="member">fifoFull</ref>;</highlight></codeline>
<codeline lineno="885" refid="struct_m_c_a_n___tx_event_fifo_status_1a1a5c1068ea7ab59fc26e954cdc9118be" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_m_c_a_n___tx_event_fifo_status_1a1a5c1068ea7ab59fc26e954cdc9118be" kindref="member">eleLost</ref>;</highlight></codeline>
<codeline lineno="891"><highlight class="normal">}<sp/><ref refid="struct_m_c_a_n___tx_event_fifo_status" kindref="compound">MCAN_TxEventFifoStatus</ref>;</highlight></codeline>
<codeline lineno="892"><highlight class="normal"></highlight></codeline>
<codeline lineno="896" refid="struct_m_c_a_n___tx_buf_element" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="897"><highlight class="normal">{</highlight></codeline>
<codeline lineno="898" refid="struct_m_c_a_n___tx_buf_element_1a5b5d4dc1e7e7f208259cdc5e34e55275" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>data[<ref refid="_m_c_a_n_8h_1aad3e5b1784e232a32e0e45eaeff1c82a" kindref="member">MCAN_MAX_PAYLOAD_SIZE</ref>];</highlight></codeline>
<codeline lineno="902" refid="struct_m_c_a_n___tx_buf_element_1a2ba679095ae9a3f3a80fe67d6e6ac976" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_m_c_a_n___tx_buf_element_1a2ba679095ae9a3f3a80fe67d6e6ac976" kindref="member">id</ref>;</highlight></codeline>
<codeline lineno="904" refid="struct_m_c_a_n___tx_buf_element_1a7208cc6dc9cb4233a221f46e882481c9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_m_c_a_n___tx_buf_element_1a7208cc6dc9cb4233a221f46e882481c9" kindref="member">rtr</ref>;</highlight></codeline>
<codeline lineno="909" refid="struct_m_c_a_n___tx_buf_element_1a16ab6d944c3606c7001af8614f20ce8d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_m_c_a_n___tx_buf_element_1a16ab6d944c3606c7001af8614f20ce8d" kindref="member">xtd</ref>;</highlight></codeline>
<codeline lineno="914" refid="struct_m_c_a_n___tx_buf_element_1aa592a27fa37f3a59820d31756fa37e7a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_m_c_a_n___tx_buf_element_1aa592a27fa37f3a59820d31756fa37e7a" kindref="member">esi</ref>;</highlight></codeline>
<codeline lineno="919" refid="struct_m_c_a_n___tx_buf_element_1a3fcc0f7ff296a10df9e019b27a155200" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_m_c_a_n___tx_buf_element_1a3fcc0f7ff296a10df9e019b27a155200" kindref="member">dlc</ref>;</highlight></codeline>
<codeline lineno="925" refid="struct_m_c_a_n___tx_buf_element_1a1a09aea55a081878f79be58687d73ac3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_m_c_a_n___tx_buf_element_1a1a09aea55a081878f79be58687d73ac3" kindref="member">brs</ref>;</highlight></codeline>
<codeline lineno="930" refid="struct_m_c_a_n___tx_buf_element_1a839ab3988c79f93eb00a0bef113cde42" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_m_c_a_n___tx_buf_element_1a839ab3988c79f93eb00a0bef113cde42" kindref="member">fdf</ref>;</highlight></codeline>
<codeline lineno="935" refid="struct_m_c_a_n___tx_buf_element_1aa9b414b14157f2f1b1732bc05f3d796d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_m_c_a_n___tx_buf_element_1aa9b414b14157f2f1b1732bc05f3d796d" kindref="member">efc</ref>;</highlight></codeline>
<codeline lineno="940" refid="struct_m_c_a_n___tx_buf_element_1af087e40af98a5c7d3d76036edecd5fcd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_m_c_a_n___tx_buf_element_1af087e40af98a5c7d3d76036edecd5fcd" kindref="member">mm</ref>;</highlight></codeline>
<codeline lineno="942"><highlight class="normal">}<sp/><ref refid="struct_m_c_a_n___tx_buf_element" kindref="compound">MCAN_TxBufElement</ref>;</highlight></codeline>
<codeline lineno="943"><highlight class="normal"></highlight></codeline>
<codeline lineno="947" refid="struct_m_c_a_n___tx_buf_element_no_cpy" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="948"><highlight class="normal">{</highlight></codeline>
<codeline lineno="949" refid="struct_m_c_a_n___tx_buf_element_no_cpy_1af87ad1c073f28c3a131028f5400d07d6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_m_c_a_n___tx_buf_element_no_cpy_1af87ad1c073f28c3a131028f5400d07d6" kindref="member">id</ref>;</highlight></codeline>
<codeline lineno="951" refid="struct_m_c_a_n___tx_buf_element_no_cpy_1accc3867129190a8e32ff1e5fb5dadda1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_m_c_a_n___tx_buf_element_no_cpy_1accc3867129190a8e32ff1e5fb5dadda1" kindref="member">rtr</ref>;</highlight></codeline>
<codeline lineno="956" refid="struct_m_c_a_n___tx_buf_element_no_cpy_1a0829f73f295839c27418e159e6f26f27" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_m_c_a_n___tx_buf_element_no_cpy_1a0829f73f295839c27418e159e6f26f27" kindref="member">xtd</ref>;</highlight></codeline>
<codeline lineno="961" refid="struct_m_c_a_n___tx_buf_element_no_cpy_1a0acbecb714efc290626761fecc0792e0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_m_c_a_n___tx_buf_element_no_cpy_1a0acbecb714efc290626761fecc0792e0" kindref="member">esi</ref>;</highlight></codeline>
<codeline lineno="966" refid="struct_m_c_a_n___tx_buf_element_no_cpy_1abdd1452c61453f979e5bb0aa10faf555" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_m_c_a_n___tx_buf_element_no_cpy_1abdd1452c61453f979e5bb0aa10faf555" kindref="member">dlc</ref>;</highlight></codeline>
<codeline lineno="972" refid="struct_m_c_a_n___tx_buf_element_no_cpy_1aa04a6ce1cb041494b2fa12e64d8036a1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_m_c_a_n___tx_buf_element_no_cpy_1aa04a6ce1cb041494b2fa12e64d8036a1" kindref="member">brs</ref>;</highlight></codeline>
<codeline lineno="977" refid="struct_m_c_a_n___tx_buf_element_no_cpy_1a4ec8c8747b0dc04a9fc512edf110570a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_m_c_a_n___tx_buf_element_no_cpy_1a4ec8c8747b0dc04a9fc512edf110570a" kindref="member">fdf</ref>;</highlight></codeline>
<codeline lineno="982" refid="struct_m_c_a_n___tx_buf_element_no_cpy_1aa3edff41181daf33c4a2ff077ee38cde" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_m_c_a_n___tx_buf_element_no_cpy_1aa3edff41181daf33c4a2ff077ee38cde" kindref="member">efc</ref>;</highlight></codeline>
<codeline lineno="987" refid="struct_m_c_a_n___tx_buf_element_no_cpy_1aeb0b767026c6f1d1b284f5540cc23ea3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_m_c_a_n___tx_buf_element_no_cpy_1aeb0b767026c6f1d1b284f5540cc23ea3" kindref="member">mm</ref>;</highlight></codeline>
<codeline lineno="989" refid="struct_m_c_a_n___tx_buf_element_no_cpy_1ae83a7b583760245458d6123eb5d1b75c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*<ref refid="struct_m_c_a_n___tx_buf_element_no_cpy_1ae83a7b583760245458d6123eb5d1b75c" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="993"><highlight class="normal">}<sp/><ref refid="struct_m_c_a_n___tx_buf_element_no_cpy" kindref="compound">MCAN_TxBufElementNoCpy</ref>;</highlight></codeline>
<codeline lineno="994"><highlight class="normal"></highlight></codeline>
<codeline lineno="998" refid="struct_m_c_a_n___rx_buf_element" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="999"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1000" refid="struct_m_c_a_n___rx_buf_element_1a2b8b2f69a3ca68a97598c7e36dc2753c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>data[<ref refid="_m_c_a_n_8h_1aad3e5b1784e232a32e0e45eaeff1c82a" kindref="member">MCAN_MAX_PAYLOAD_SIZE</ref>];</highlight></codeline>
<codeline lineno="1004" refid="struct_m_c_a_n___rx_buf_element_1a375c7408618a861437d4bad050e67d19" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_m_c_a_n___rx_buf_element_1a375c7408618a861437d4bad050e67d19" kindref="member">id</ref>;</highlight></codeline>
<codeline lineno="1006" refid="struct_m_c_a_n___rx_buf_element_1a6c2f15e815b5feb933d6dc2ddb6176c8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="struct_m_c_a_n___rx_buf_element_1a6c2f15e815b5feb933d6dc2ddb6176c8" kindref="member">rxts</ref>;</highlight></codeline>
<codeline lineno="1008" refid="struct_m_c_a_n___rx_buf_element_1a318c7b017190fa4aa18696414fed43af" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="struct_m_c_a_n___rx_buf_element_1a318c7b017190fa4aa18696414fed43af" kindref="member">rtr</ref>;</highlight></codeline>
<codeline lineno="1013" refid="struct_m_c_a_n___rx_buf_element_1a2d418459a30c8f6cf3d26d9d56afb94b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="struct_m_c_a_n___rx_buf_element_1a2d418459a30c8f6cf3d26d9d56afb94b" kindref="member">xtd</ref>;</highlight></codeline>
<codeline lineno="1018" refid="struct_m_c_a_n___rx_buf_element_1af22fbc4a625ac82ef3a90120ece8f7fe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="struct_m_c_a_n___rx_buf_element_1af22fbc4a625ac82ef3a90120ece8f7fe" kindref="member">esi</ref>;</highlight></codeline>
<codeline lineno="1023" refid="struct_m_c_a_n___rx_buf_element_1a1f6e3745474b86dfecc7a69f953f1dd3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="struct_m_c_a_n___rx_buf_element_1a1f6e3745474b86dfecc7a69f953f1dd3" kindref="member">dlc</ref>;</highlight></codeline>
<codeline lineno="1029" refid="struct_m_c_a_n___rx_buf_element_1ac732fd560148eb945a3fb308200d371f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="struct_m_c_a_n___rx_buf_element_1ac732fd560148eb945a3fb308200d371f" kindref="member">brs</ref>;</highlight></codeline>
<codeline lineno="1034" refid="struct_m_c_a_n___rx_buf_element_1af0dd3a79fb8b101a613fcc0579f5f282" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="struct_m_c_a_n___rx_buf_element_1af0dd3a79fb8b101a613fcc0579f5f282" kindref="member">fdf</ref>;</highlight></codeline>
<codeline lineno="1039" refid="struct_m_c_a_n___rx_buf_element_1ac3ba6cd02bdf088e5c47d7b8330bf55f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="struct_m_c_a_n___rx_buf_element_1ac3ba6cd02bdf088e5c47d7b8330bf55f" kindref="member">fidx</ref>;</highlight></codeline>
<codeline lineno="1041" refid="struct_m_c_a_n___rx_buf_element_1a3b592a37f7fbed5965a9a4b6a896c1ba" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="struct_m_c_a_n___rx_buf_element_1a3b592a37f7fbed5965a9a4b6a896c1ba" kindref="member">anmf</ref>;</highlight></codeline>
<codeline lineno="1046"><highlight class="normal">}<sp/><ref refid="struct_m_c_a_n___rx_buf_element" kindref="compound">MCAN_RxBufElement</ref>;</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"></highlight></codeline>
<codeline lineno="1053" refid="struct_m_c_a_n___rx_buf_element_no_cpy" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1054"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1055" refid="struct_m_c_a_n___rx_buf_element_no_cpy_1a621e16ced16360d0d2c31cf31c448d39" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_m_c_a_n___rx_buf_element_no_cpy_1a621e16ced16360d0d2c31cf31c448d39" kindref="member">id</ref>;</highlight></codeline>
<codeline lineno="1057" refid="struct_m_c_a_n___rx_buf_element_no_cpy_1adc2a6baea0146878cb13ca252127c39f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="struct_m_c_a_n___rx_buf_element_no_cpy_1adc2a6baea0146878cb13ca252127c39f" kindref="member">rxts</ref>;</highlight></codeline>
<codeline lineno="1059" refid="struct_m_c_a_n___rx_buf_element_no_cpy_1aa5eae5fbfbe6aac2a99a7bbb12093717" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="struct_m_c_a_n___rx_buf_element_no_cpy_1aa5eae5fbfbe6aac2a99a7bbb12093717" kindref="member">rtr</ref>;</highlight></codeline>
<codeline lineno="1064" refid="struct_m_c_a_n___rx_buf_element_no_cpy_1ad3464ac12cb4243e188cb93835cc8da6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="struct_m_c_a_n___rx_buf_element_no_cpy_1ad3464ac12cb4243e188cb93835cc8da6" kindref="member">xtd</ref>;</highlight></codeline>
<codeline lineno="1069" refid="struct_m_c_a_n___rx_buf_element_no_cpy_1a77fc1c2270fcae2dec908fdbe7980cf1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="struct_m_c_a_n___rx_buf_element_no_cpy_1a77fc1c2270fcae2dec908fdbe7980cf1" kindref="member">esi</ref>;</highlight></codeline>
<codeline lineno="1074" refid="struct_m_c_a_n___rx_buf_element_no_cpy_1a458e6ddcb49c38e3874bbb9d557436ce" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="struct_m_c_a_n___rx_buf_element_no_cpy_1a458e6ddcb49c38e3874bbb9d557436ce" kindref="member">dlc</ref>;</highlight></codeline>
<codeline lineno="1080" refid="struct_m_c_a_n___rx_buf_element_no_cpy_1a94a236d9a975b3e4e99997fdbff0dffb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="struct_m_c_a_n___rx_buf_element_no_cpy_1a94a236d9a975b3e4e99997fdbff0dffb" kindref="member">brs</ref>;</highlight></codeline>
<codeline lineno="1085" refid="struct_m_c_a_n___rx_buf_element_no_cpy_1aae66f9282c42fbda4cd3dca84659b979" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="struct_m_c_a_n___rx_buf_element_no_cpy_1aae66f9282c42fbda4cd3dca84659b979" kindref="member">fdf</ref>;</highlight></codeline>
<codeline lineno="1090" refid="struct_m_c_a_n___rx_buf_element_no_cpy_1aee2b44f151ad40150200697a795eef99" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="struct_m_c_a_n___rx_buf_element_no_cpy_1aee2b44f151ad40150200697a795eef99" kindref="member">fidx</ref>;</highlight></codeline>
<codeline lineno="1092" refid="struct_m_c_a_n___rx_buf_element_no_cpy_1af26ffcf3b50c6fc29a17fbf83bef07c3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="struct_m_c_a_n___rx_buf_element_no_cpy_1af26ffcf3b50c6fc29a17fbf83bef07c3" kindref="member">anmf</ref>;</highlight></codeline>
<codeline lineno="1097" refid="struct_m_c_a_n___rx_buf_element_no_cpy_1a7e7993d89dfb6b418aeb6f5b7db2646a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>*<ref refid="struct_m_c_a_n___rx_buf_element_no_cpy_1a7e7993d89dfb6b418aeb6f5b7db2646a" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="1101"><highlight class="normal">}<sp/><ref refid="struct_m_c_a_n___rx_buf_element_no_cpy" kindref="compound">MCAN_RxBufElementNoCpy</ref>;</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"></highlight></codeline>
<codeline lineno="1106" refid="struct_m_c_a_n___tx_event_fifo_element" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1107"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1108" refid="struct_m_c_a_n___tx_event_fifo_element_1ae25d1e334cb34a77696af8a5829756bc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_m_c_a_n___tx_event_fifo_element_1ae25d1e334cb34a77696af8a5829756bc" kindref="member">id</ref>;</highlight></codeline>
<codeline lineno="1110" refid="struct_m_c_a_n___tx_event_fifo_element_1a74134e90b6a919eaba18fff391fb2d8f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="struct_m_c_a_n___tx_event_fifo_element_1a74134e90b6a919eaba18fff391fb2d8f" kindref="member">txts</ref>;</highlight></codeline>
<codeline lineno="1112" refid="struct_m_c_a_n___tx_event_fifo_element_1ab82885cb0d78a717fe9b28c259612477" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="struct_m_c_a_n___tx_event_fifo_element_1ab82885cb0d78a717fe9b28c259612477" kindref="member">rtr</ref>;</highlight></codeline>
<codeline lineno="1117" refid="struct_m_c_a_n___tx_event_fifo_element_1aeed87cfbdbc411ec10ecd1c4a540fdb1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="struct_m_c_a_n___tx_event_fifo_element_1aeed87cfbdbc411ec10ecd1c4a540fdb1" kindref="member">xtd</ref>;</highlight></codeline>
<codeline lineno="1122" refid="struct_m_c_a_n___tx_event_fifo_element_1a6b02c2cd46867d8dc84c23bf3992e1d0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="struct_m_c_a_n___tx_event_fifo_element_1a6b02c2cd46867d8dc84c23bf3992e1d0" kindref="member">esi</ref>;</highlight></codeline>
<codeline lineno="1127" refid="struct_m_c_a_n___tx_event_fifo_element_1a7cde2075ccd8ca47c845932a5f4330f5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="struct_m_c_a_n___tx_event_fifo_element_1a7cde2075ccd8ca47c845932a5f4330f5" kindref="member">dlc</ref>;</highlight></codeline>
<codeline lineno="1133" refid="struct_m_c_a_n___tx_event_fifo_element_1aa1bc52d30760aa342e6d6540282cace0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="struct_m_c_a_n___tx_event_fifo_element_1aa1bc52d30760aa342e6d6540282cace0" kindref="member">brs</ref>;</highlight></codeline>
<codeline lineno="1138" refid="struct_m_c_a_n___tx_event_fifo_element_1a0464d89ae4c5af2f271cbd77de400d56" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="struct_m_c_a_n___tx_event_fifo_element_1a0464d89ae4c5af2f271cbd77de400d56" kindref="member">fdf</ref>;</highlight></codeline>
<codeline lineno="1143" refid="struct_m_c_a_n___tx_event_fifo_element_1a430db129bda4a4fc76c1242dc51652c8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="struct_m_c_a_n___tx_event_fifo_element_1a430db129bda4a4fc76c1242dc51652c8" kindref="member">et</ref>;</highlight></codeline>
<codeline lineno="1151" refid="struct_m_c_a_n___tx_event_fifo_element_1a8a9e7ee48a26a8cbab90f525d327516e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="struct_m_c_a_n___tx_event_fifo_element_1a8a9e7ee48a26a8cbab90f525d327516e" kindref="member">mm</ref>;</highlight></codeline>
<codeline lineno="1153"><highlight class="normal">}<sp/><ref refid="struct_m_c_a_n___tx_event_fifo_element" kindref="compound">MCAN_TxEventFifoElement</ref>;</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"></highlight></codeline>
<codeline lineno="1158" refid="struct_m_c_a_n___std_msg_i_d_filter_element" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1159"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1160" refid="struct_m_c_a_n___std_msg_i_d_filter_element_1ab0180971b176c6d5b7c558891ed2a2e8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_m_c_a_n___std_msg_i_d_filter_element_1ab0180971b176c6d5b7c558891ed2a2e8" kindref="member">sfec</ref>;</highlight></codeline>
<codeline lineno="1174" refid="struct_m_c_a_n___std_msg_i_d_filter_element_1a504660d72a30a2afa1cfa159576b0d81" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_m_c_a_n___std_msg_i_d_filter_element_1a504660d72a30a2afa1cfa159576b0d81" kindref="member">sft</ref>;</highlight></codeline>
<codeline lineno="1181" refid="struct_m_c_a_n___std_msg_i_d_filter_element_1a810be26bca69b7c105bc9a8f445cd0ba" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_m_c_a_n___std_msg_i_d_filter_element_1a810be26bca69b7c105bc9a8f445cd0ba" kindref="member">sfid1</ref>;</highlight></codeline>
<codeline lineno="1188" refid="struct_m_c_a_n___std_msg_i_d_filter_element_1aa99907aff6465ce4a2f7b4ba3c468254" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_m_c_a_n___std_msg_i_d_filter_element_1aa99907aff6465ce4a2f7b4ba3c468254" kindref="member">sfid2</ref>;</highlight></codeline>
<codeline lineno="1208"><highlight class="normal">}<sp/><ref refid="struct_m_c_a_n___std_msg_i_d_filter_element" kindref="compound">MCAN_StdMsgIDFilterElement</ref>;</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"></highlight></codeline>
<codeline lineno="1213" refid="struct_m_c_a_n___ext_msg_i_d_filter_element" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1214"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1215" refid="struct_m_c_a_n___ext_msg_i_d_filter_element_1a04ebc843d447a46ce734753d18bbf4f9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_m_c_a_n___ext_msg_i_d_filter_element_1a04ebc843d447a46ce734753d18bbf4f9" kindref="member">efec</ref>;</highlight></codeline>
<codeline lineno="1229" refid="struct_m_c_a_n___ext_msg_i_d_filter_element_1a7bf73a6a42fd910f558ffa9cd18de5ee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_m_c_a_n___ext_msg_i_d_filter_element_1a7bf73a6a42fd910f558ffa9cd18de5ee" kindref="member">eft</ref>;</highlight></codeline>
<codeline lineno="1237" refid="struct_m_c_a_n___ext_msg_i_d_filter_element_1ad54a2595a9ea5869b8662927fc3e8123" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_m_c_a_n___ext_msg_i_d_filter_element_1ad54a2595a9ea5869b8662927fc3e8123" kindref="member">efid1</ref>;</highlight></codeline>
<codeline lineno="1244" refid="struct_m_c_a_n___ext_msg_i_d_filter_element_1a1bf653862ab81f9742465f0e0aa737b4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_m_c_a_n___ext_msg_i_d_filter_element_1a1bf653862ab81f9742465f0e0aa737b4" kindref="member">efid2</ref>;</highlight></codeline>
<codeline lineno="1263"><highlight class="normal">}<sp/><ref refid="struct_m_c_a_n___ext_msg_i_d_filter_element" kindref="compound">MCAN_ExtMsgIDFilterElement</ref>;</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"></highlight></codeline>
<codeline lineno="1274"><highlight class="normal">int_fast16_t<sp/><ref refid="_m_c_a_n_8h_1af24830ad69983870b613f6f5e59ce14a" kindref="member">MCAN_init</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_m_c_a_n___init_params" kindref="compound">MCAN_InitParams</ref><sp/>*initParams);</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"></highlight></codeline>
<codeline lineno="1285"><highlight class="normal">int_fast16_t<sp/><ref refid="_m_c_a_n_8h_1a8ef6dfe6a708d8c4411111c8696575d1" kindref="member">MCAN_config</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_m_c_a_n___config_params" kindref="compound">MCAN_ConfigParams</ref><sp/>*config);</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"></highlight></codeline>
<codeline lineno="1295"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_m_c_a_n_8h_1a793290c20c9e47cf4b1394b293e476db" kindref="member">MCAN_setOpMode</ref>(MCAN_OperationMode<sp/>mode);</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"></highlight></codeline>
<codeline lineno="1304"><highlight class="normal">MCAN_OperationMode<sp/><ref refid="_m_c_a_n_8h_1a80a400fe60266c815dd493f33b71df16" kindref="member">MCAN_getOpMode</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"></highlight></codeline>
<codeline lineno="1314"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_m_c_a_n_8h_1a8000803b21f53320d2c2a4010970d9c3" kindref="member">MCAN_getBitTime</ref>(<ref refid="struct_m_c_a_n___bit_timing_params" kindref="compound">MCAN_BitTimingParams</ref><sp/>*bitTiming);</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"></highlight></codeline>
<codeline lineno="1325"><highlight class="normal">int_fast16_t<sp/><ref refid="_m_c_a_n_8h_1a409f507b74d72bc18daf7c43866abf41" kindref="member">MCAN_setBitTime</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_m_c_a_n___bit_timing_params" kindref="compound">MCAN_BitTimingParams</ref><sp/>*bitTiming);</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"></highlight></codeline>
<codeline lineno="1337"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_m_c_a_n_8h_1acc7b32b7d1fda7f7041486e00aa8ddd7" kindref="member">MCAN_configMsgRam</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_m_c_a_n___msg_ram_config" kindref="compound">MCAN_MsgRamConfig</ref><sp/>*msgRamConfig);</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"></highlight></codeline>
<codeline lineno="1353"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_m_c_a_n_8h_1a003b6193e9bd13c0589239c57cc1b1ec" kindref="member">MCAN_writeTxMsgNoCpy</ref>(uint32_t<sp/>bufIdx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_m_c_a_n___tx_buf_element_no_cpy" kindref="compound">MCAN_TxBufElementNoCpy</ref><sp/>*elem);</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"></highlight></codeline>
<codeline lineno="1369"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_m_c_a_n_8h_1ae9fc84eff39706bc8384992b1c03940e" kindref="member">MCAN_writeTxMsg</ref>(uint32_t<sp/>bufIdx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_m_c_a_n___tx_buf_element" kindref="compound">MCAN_TxBufElement</ref><sp/>*elem);</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"></highlight></codeline>
<codeline lineno="1381"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_m_c_a_n_8h_1a97a1ea8e98ce04d630366c9be07bf38b" kindref="member">MCAN_setTxBufAddReq</ref>(uint32_t<sp/>bufIdx);</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"></highlight></codeline>
<codeline lineno="1393"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_m_c_a_n_8h_1adfb43ded65fb35dcd34bcce0a7109280" kindref="member">MCAN_getNewDataStatus</ref>(<ref refid="struct_m_c_a_n___rx_new_data_status" kindref="compound">MCAN_RxNewDataStatus</ref><sp/>*newDataStatus);</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"></highlight></codeline>
<codeline lineno="1405"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_m_c_a_n_8h_1a0b662be20f05806891c155ccb9726576" kindref="member">MCAN_clearNewDataStatus</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_m_c_a_n___rx_new_data_status" kindref="compound">MCAN_RxNewDataStatus</ref><sp/>*newDataStatus);</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"></highlight></codeline>
<codeline lineno="1428"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_m_c_a_n_8h_1a22b0f1452d5a4b9d9d267793994f0941" kindref="member">MCAN_readRxMsgNoCpy</ref>(MCAN_MemType<sp/>memType,<sp/>uint32_t<sp/>num,<sp/><ref refid="struct_m_c_a_n___rx_buf_element_no_cpy" kindref="compound">MCAN_RxBufElementNoCpy</ref><sp/>*elem);</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"></highlight></codeline>
<codeline lineno="1447"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_m_c_a_n_8h_1a1a1680a666bdeae63443fc3f0e6a9cd7" kindref="member">MCAN_readRxMsg</ref>(MCAN_MemType<sp/>memType,<sp/>uint32_t<sp/>num,<sp/><ref refid="struct_m_c_a_n___rx_buf_element" kindref="compound">MCAN_RxBufElement</ref><sp/>*elem);</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"></highlight></codeline>
<codeline lineno="1461"><highlight class="normal">int_fast16_t<sp/><ref refid="_m_c_a_n_8h_1ad038ef6866a2fee14cf9d7ee0e306439" kindref="member">MCAN_readTxEventFifo</ref>(<ref refid="struct_m_c_a_n___tx_event_fifo_element" kindref="compound">MCAN_TxEventFifoElement</ref><sp/>*elem);</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"></highlight></codeline>
<codeline lineno="1472"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_m_c_a_n_8h_1a4b49b0b58b506bccca66665a5ae2956f" kindref="member">MCAN_addStdMsgIDFilter</ref>(uint32_t<sp/>filtNum,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_m_c_a_n___std_msg_i_d_filter_element" kindref="compound">MCAN_StdMsgIDFilterElement</ref><sp/>*elem);</highlight></codeline>
<codeline lineno="1473"><highlight class="normal"></highlight></codeline>
<codeline lineno="1483"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_m_c_a_n_8h_1a3e30ab4ce43693bbe49472ad9d1ae75c" kindref="member">MCAN_addExtMsgIDFilter</ref>(uint32_t<sp/>filtNum,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_m_c_a_n___ext_msg_i_d_filter_element" kindref="compound">MCAN_ExtMsgIDFilterElement</ref><sp/>*elem);</highlight></codeline>
<codeline lineno="1484"><highlight class="normal"></highlight></codeline>
<codeline lineno="1496"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_m_c_a_n_8h_1a52b2f4cbce7be8711233e0b69f7ac31b" kindref="member">MCAN_enableLoopbackMode</ref>(MCAN_LpbkMode<sp/>lpbkMode);</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"></highlight></codeline>
<codeline lineno="1508"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_m_c_a_n_8h_1a87b153f02602783aa7a60430c75cc7f3" kindref="member">MCAN_disableLoopbackMode</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"></highlight></codeline>
<codeline lineno="1518"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_m_c_a_n_8h_1a7bde20018a47a93102d907bef0a0040e" kindref="member">MCAN_getProtocolStatus</ref>(<ref refid="struct_m_c_a_n___protocol_status" kindref="compound">MCAN_ProtocolStatus</ref><sp/>*protStatus);</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"></highlight></codeline>
<codeline lineno="1528"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_m_c_a_n_8h_1a4a337a63520192ed29e7fbaff6454350" kindref="member">MCAN_enableInt</ref>(uint32_t<sp/>intMask);</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"></highlight></codeline>
<codeline lineno="1538"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_m_c_a_n_8h_1a10238847f3274974bc100d04148a214a" kindref="member">MCAN_disableInt</ref>(uint32_t<sp/>intMask);</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"></highlight></codeline>
<codeline lineno="1550"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_m_c_a_n_8h_1a18c04ef8ee8b4b5b41ad6ac3b4224f48" kindref="member">MCAN_setIntLineSel</ref>(uint32_t<sp/>intMask,<sp/>MCAN_IntLineNum<sp/>lineNum);</highlight></codeline>
<codeline lineno="1551"><highlight class="normal"></highlight></codeline>
<codeline lineno="1560"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_m_c_a_n_8h_1ae567977c2c7f339ba88619b8542602b4" kindref="member">MCAN_enableIntLine</ref>(MCAN_IntLineNum<sp/>lineNum);</highlight></codeline>
<codeline lineno="1561"><highlight class="normal"></highlight></codeline>
<codeline lineno="1570"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_m_c_a_n_8h_1a7fde285cb083d4be9bb92b47b0058169" kindref="member">MCAN_disableIntLine</ref>(MCAN_IntLineNum<sp/>lineNum);</highlight></codeline>
<codeline lineno="1571"><highlight class="normal"></highlight></codeline>
<codeline lineno="1577"><highlight class="normal">uint32_t<sp/><ref refid="_m_c_a_n_8h_1a7380332da3eab4f7011053642e15d43b" kindref="member">MCAN_getIntStatus</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1578"><highlight class="normal"></highlight></codeline>
<codeline lineno="1586"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_m_c_a_n_8h_1a0473a37932632656d3c1d4e2e9386adb" kindref="member">MCAN_clearIntStatus</ref>(uint32_t<sp/>intMask);</highlight></codeline>
<codeline lineno="1587"><highlight class="normal"></highlight></codeline>
<codeline lineno="1598"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_m_c_a_n_8h_1a532ae77cad78a8da2e1c2f07101e66e0" kindref="member">MCAN_getRxFifoStatus</ref>(MCAN_RxFifoNum<sp/>fifoNum,<sp/><ref refid="struct_m_c_a_n___rx_fifo_status" kindref="compound">MCAN_RxFifoStatus</ref><sp/>*fifoStatus);</highlight></codeline>
<codeline lineno="1599"><highlight class="normal"></highlight></codeline>
<codeline lineno="1608"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_m_c_a_n_8h_1aa290a50962646b9bb5a8c8f02e227dad" kindref="member">MCAN_getTxEventFifoStatus</ref>(<ref refid="struct_m_c_a_n___tx_event_fifo_status" kindref="compound">MCAN_TxEventFifoStatus</ref><sp/>*fifoStatus);</highlight></codeline>
<codeline lineno="1609"><highlight class="normal"></highlight></codeline>
<codeline lineno="1618"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_m_c_a_n_8h_1a73ffafa4679310b508fd4d8db8c2c26a" kindref="member">MCAN_getTxFifoQStatus</ref>(<ref refid="struct_m_c_a_n___tx_fifo_q_status" kindref="compound">MCAN_TxFifoQStatus</ref><sp/>*fifoQStatus);</highlight></codeline>
<codeline lineno="1619"><highlight class="normal"></highlight></codeline>
<codeline lineno="1630"><highlight class="normal">int_fast16_t<sp/><ref refid="_m_c_a_n_8h_1abc33af112e58702e98590f9f57860520" kindref="member">MCAN_setRxFifoAck</ref>(MCAN_RxFifoNum<sp/>fifoNum,<sp/>uint32_t<sp/>idx);</highlight></codeline>
<codeline lineno="1631"><highlight class="normal"></highlight></codeline>
<codeline lineno="1637"><highlight class="normal">uint32_t<sp/><ref refid="_m_c_a_n_8h_1aaa3afc249740b9430744083f9016bf2c" kindref="member">MCAN_getTxBufReqPend</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1638"><highlight class="normal"></highlight></codeline>
<codeline lineno="1646"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_m_c_a_n_8h_1a3df798984f0b8b181976673701b2473d" kindref="member">MCAN_cancelTxBufReq</ref>(uint32_t<sp/>bufIdx);</highlight></codeline>
<codeline lineno="1647"><highlight class="normal"></highlight></codeline>
<codeline lineno="1653"><highlight class="normal">uint32_t<sp/><ref refid="_m_c_a_n_8h_1ae69961733d066bf40cad95ad392505ef" kindref="member">MCAN_getTxBufTransmissionStatus</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1654"><highlight class="normal"></highlight></codeline>
<codeline lineno="1660"><highlight class="normal">uint32_t<sp/><ref refid="_m_c_a_n_8h_1a6496ddf658328fe91a3705a1219fd04e" kindref="member">MCAN_getTxBufCancellationStatus</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1661"><highlight class="normal"></highlight></codeline>
<codeline lineno="1669"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_m_c_a_n_8h_1a002cb2e4e9486d8b9d157faeeec10d91" kindref="member">MCAN_enableTxBufTransInt</ref>(uint32_t<sp/>bufMask);</highlight></codeline>
<codeline lineno="1670"><highlight class="normal"></highlight></codeline>
<codeline lineno="1678"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_m_c_a_n_8h_1abe21e8e9ce26f9fb1e35e179e0fba642" kindref="member">MCAN_disableTxBufTransInt</ref>(uint32_t<sp/>bufMask);</highlight></codeline>
<codeline lineno="1679"><highlight class="normal"></highlight></codeline>
<codeline lineno="1687"><highlight class="normal">uint32_t<sp/><ref refid="_m_c_a_n_8h_1a2d6e1d9b119ab2968e15c378657b34b2" kindref="member">MCAN_getClkStopAck</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1688"><highlight class="normal"></highlight></codeline>
<codeline lineno="1694"><highlight class="normal">uint16_t<sp/><ref refid="_m_c_a_n_8h_1ae1053fdf5fa96529bb706f3135e24e16" kindref="member">MCAN_getTimestampCounter</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1695"><highlight class="normal"></highlight></codeline>
<codeline lineno="1696"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1697"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1698"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1699"><highlight class="normal"></highlight></codeline>
<codeline lineno="1700"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>__MCAN_H__<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="source/third_party/mcan/MCAN.h"/>
  </compounddef>
</doxygen>
